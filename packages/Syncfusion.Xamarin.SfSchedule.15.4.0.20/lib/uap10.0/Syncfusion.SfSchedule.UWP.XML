<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.SfSchedule.UWP</name>
    </assembly>
    <members>
        <member name="M:Syncfusion.UI.Xaml.Schedule.YearCalendar.GetSelectedMonthChangedEvent(Syncfusion.UI.Xaml.Schedule.SelectedMonthChangedEventArgs)">
            <summary>
            Gets the Selected Month Changed event.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.UI.Xaml.Schedule.SelectedMonthChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.YearCalendar.GetSelectedYearChangedEvent(Syncfusion.UI.Xaml.Schedule.SelectedYearChangedEventArgs)">
            <summary>
            Gets the Selected Year Changed event.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.UI.Xaml.Schedule.SelectedYearChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.Clip">
            <summary>
            Represents a class to clip the contents of element to fit into the size of the containing element.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.Clip.GetToBounds(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the bound value.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.Clip.SetToBounds(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets the bound value.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.Clip.ToBoundsProperty">
            <summary>
            Using a DependencyProperty as the backing store for ToBounds.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ContentViewItemsControl.SelectedIndex">
            <summary>
            Gets / Sets the SelectedIndex for the item to be Visible.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.DaysConverter">
            <summary>
            Represents a converter that converts datetime value.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DaysConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts datetime value to string.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DaysConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts String to datetime value.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.SelectedDatesToHeaderTextConverter">
            <summary>
            Represents a converter that converts selected dates to and from header text.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SelectedDatesToHeaderTextConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts selected dates to header text.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SelectedDatesToHeaderTextConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts header text to selected dates.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.BoolToVisibilityConverter">
            <summary>
            Represents a converter that converts boolean values to and from visibility enumeration values. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.BoolToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts a boolean value to a visibility enumeration value.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.BoolToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts a visibility enumeration value to boolean value.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.BoolToBoolConverter">
            <summary>
            Represents a converter that converts boolean value to vice versa.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ValueToIndexConverter">
            <summary>
            Represents a converter that converts value to index.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ValueToIndexConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts a value to index
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ValueToIndexConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts an index to a value.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="language"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.IsAlldaytoWordellipseConverter">
            <summary>
            Represents a converter that converts all day panel to text trimming.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.IsAlldaytoWordellipseConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the text when text overflows .
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.StartTimeConverter">
            <summary>
            Represents a converter that converts the start time of schedule appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.StartTimeConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the schedule appointment start time.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ExpandingAppointmentVisibility">
            <summary>
             Represents a converter that converts the visibility of Expanded appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ExpandingAppointmentVisibility.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the visiblity of Schedule appointment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.CustomTextBlock">
            <summary>
            Represents a custom text block.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.CustomTextBlock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Schedule.CustomTextBlock">CustomTextBlock</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.CustomTextBlock.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.CustomTextBlock.DateTimeFormat">
            <summary>
            Gets or sets a format for formatting date time value.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.CustomTextBlock.DateTimeFormatProperty">
            <summary>
            Using a DependencyProperty as the backing store for DateTimeFormat.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.CustomTextBlock.TimeSpanValue">
            <summary>
            Gets or sets a time span value for custom text block.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.CustomTextBlock.TimeSpanValueProperty">
            <summary>
            Using a DependencyProperty as the backing store for TimeSpanValue.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.CustomTextBlock.HourFormat">
            <summary>
            Gets or sets a format for formatting hour value.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.CustomTextBlock.HourFormatProperty">
            <summary>
            Using a DependencyProperty as the backing store for HourFormat.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.CustomTextBlock.MinuteFormat">
            <summary>
            Gets or sets a format for formatting minute value.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.CustomTextBlock.MinuteFormatProperty">
            <summary>
            Using a DependencyProperty as the backing store for MinuteFormat.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.CustomTextBlock.DateTimeValue">
            <summary>
            Gets or sets a date time content of custom text block.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.CustomTextBlock.DateTimeValueProperty">
            <summary>
            Using a DependencyProperty as the backing store for DateTimeValue.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.CustomTextBlock.MonthDateFormat">
            <summary>
            Gets or sets a format for formatting date in month.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.CustomTextBlock.MonthDateFormatProperty">
            <summary>
            Using a DependencyProperty as the backing store for MonthDateFormat.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.CustomTextBlock.Text">
            <summary>
            Represents a text content of custom text block.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.CustomTextBlock.TextProperty">
            <summary>
            Using a DependencyProperty as the backing store for Text.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.CustomTextBlock.TextWrapping">
            <summary>
            Gets or sets how the custom text block should wrap text. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.CustomTextBlock.TextWrappingProperty">
            <summary>
            Using a DependencyProperty as the backing store for TextWrapping.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.DateTimeExtensions">
            <summary>
            Contains date time extension methods.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ModifiedVisibleAppointment">
            <summary>
            Specifies the ModifiedVisibleAppointment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.MonthNavigationDirections">
            <summary>
            Specifies the MonthView swiping direction.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.EditorAction">
            <summary>
            Specifies the action while opening appointment editor.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.EditorClosedAction">
            <summary>
            Specifies the action while closing appointment editor.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleType">
            <summary>
            Specifies the type of schedule views.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleType.Day">
            <summary>
            This returns Day as Schedule type.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleType.Week">
            <summary>
            This returns Week as Schedule type.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleType.WorkWeek">
            <summary>
            This returns WorkWeek as Schedule type.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleType.Month">
            <summary>
            This returns Month as Schedule type.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleType.TimeLine">
            <summary>
            This returns TimeLine as Schedule type.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.CurrentTimeIndicatorLocation">
            <summary>
            Specifies the CurrentTimeIndicator Location
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.TimeInterval">
            <summary>
            Specifies the time interval value.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.TimeInterval.FiveMin">
            <summary>
            5 minutes interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.TimeInterval.SixMin">
            <summary>
            6 minutes interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.TimeInterval.TenMin">
            <summary>
            10 minutes interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.TimeInterval.FifteenMin">
            <summary>
            15 minutes interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.TimeInterval.TwentyMin">
            <summary>
            20 minutes interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.TimeInterval.ThirtyMin">
            <summary>
            30 minutes interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.TimeInterval.OneHour">
            <summary>
            1 hour interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.TimeInterval.Custom">
            <summary>
            Custom interval.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.RecurrenceType">
            <summary>
            Specifies the type of recurrence in appointment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceType.Daily">
            <summary>
            Daily.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceType.Weekly">
            <summary>
            Weekly.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceType.Monthly">
            <summary>
            Monthly.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceType.Yearly">
            <summary>
            Yearly.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ReminderTimeType">
            <summary>
            Specifies the type of reminder time for schedule appointment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ReminderTimeType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.TimeModes">
            <summary>
            Specifies the time mode value.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.MenuType">
            <summary>
            Specifies the type of context menu.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.AppointmentBehavior">
            <summary>
            Specifies the behavior of the AllDayAppointment
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ResizeType">
            <summary>
            Specifies whether the resize is done at starttime or endtime.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.DayHeaderOrder">
            <summary>
            Specifies the order of resources in schedule.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ViewPanelOptions">
            <summary>
            Specifies the custom views.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.LoopItemsPanel">
            <summary>
            Represents a LoopItemsPanel.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.LoopItemsPanel.UpdatePositionsWithAnimation(System.Double,System.Double)">
            <summary>
            Updating with an animation (after a tap)
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.LoopItemsPanel.GetItemsCount">
            <summary>
            Get Items Source count items
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.LoopItemsPanel.UpdatePositions(System.Double)">
            <summary>
            Updating position
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.LoopItemsPanel.UpdatePosition(System.Int32,System.Int32,System.Double)">
            <summary>
            Translate items to a new offset
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.LoopItemsPanel.OnManipulationDelta(System.Object,Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
            <summary>
            On manipulation delta
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.LoopItemsPanel.ArrangeOverride(Windows.Foundation.Size)">
            <summary>
            Arrange all items
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.LoopItemsPanel.MeasureOverride(Windows.Foundation.Size)">
            <summary>
            Measure items 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.NonAccessibleBlock">
            <summary>
            Represents a non accessible block.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.NonAccessibleBlock.Background">
            <summary>
            Gets or sets the brush for non accessible block.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.NonAccessibleBlock.StartHour">
            <summary>
            Gets or sets the start hour time of non accessible block.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.NonAccessibleBlock.EndHour">
            <summary>
            Gets or sets the end hour time of non accessible block.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.NonAccessibleBlock.Label">
            <summary>
            Gets or sets the label of non accessible block.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.NonAccessibleBlockCollection">
            <summary>
            Represents a collection of non accessible blocks in schedule.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ObservableRangeCollection`1">
            <summary> 
            Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed. 
            </summary> 
            <typeparam name="T"></typeparam> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ObservableRangeCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary> 
            Adds the elements of the specified collection to the end of the ObservableCollection(Of T). 
            </summary> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ObservableRangeCollection`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary> 
            Removes the first occurence of each item in the specified collection from ObservableCollection(Of T). 
            </summary> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ObservableRangeCollection`1.Replace(`0)">
            <summary> 
            Clears the current collection and replaces it with the specified item. 
            </summary> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ObservableRangeCollection`1.ReplaceRange(System.Collections.Generic.IEnumerable{`0})">
            <summary> 
            Clears the current collection and replaces it with the specified collection. 
            </summary> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ObservableRangeCollection`1.#ctor">
            <summary> 
            Initializes a new instance of the System.Collections.ObjectModel.ObservableCollection(Of T) class. 
            </summary> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ObservableRangeCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary> 
            Initializes a new instance of the System.Collections.ObjectModel.ObservableCollection(Of T) class that contains elements copied from the specified collection. 
            </summary> 
            <param name="collection">collection: The collection from which the elements are copied.</param> 
            <exception cref="T:System.ArgumentNullException">The collection parameter cannot be null.</exception> 
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ResizeBehavior.MinHeight">
            <summary>
            Set the minimum resize height
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ResizeBehavior.MaxHeight">
            <summary>
            Set the maximum resize height
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ResizeBehavior.MinWidth">
            <summary>
            Set the minimum resize width
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ResizeBehavior.MaxWidth">
            <summary>
            Set the maximum resize width
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ResizeBehavior.DragSpace">
            <summary>
            Set the space from border for start resize mode
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ResizeBehavior.DragIndicatorsFill">
            <summary>
            Set the drags indicator BackGround
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ResizeBehavior.DragIndicatorsOpacity">
            <summary>
            Set the drags indicator Opacity
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ResizeBehavior.IsLeftDraggable">
            <summary>
            Indicate if is possible resize dragging the left part
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ResizeBehavior.IsRightDraggable">
            <summary>
            Indicate if is possible resize dragging the right part
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ResizeBehavior.IsTopDraggable">
            <summary>
            Indicate if is possible resize dragging the top part
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ResizeBehavior.IsBottomDraggable">
            <summary>
            Indicate if is possible resize dragging the bottom part
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ResizeBehavior.IsTopLeftDraggable">
            <summary>
            Indicate if is possible resize dragging the top left corner
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ResizeBehavior.IsTopRightDraggable">
            <summary>
            Indicate if is possible resize dragging the top right corner
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ResizeBehavior.IsBottomLeftDraggable">
            <summary>
            Indicate if is possible resize dragging the bottom left corner
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ResizeBehavior.IsBottomRightDraggable">
            <summary>
            Indicate if is possible resize dragging the bottom right corner
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ResizeBehavior.StayInParent">
            <summary>
            Indicate if the element stay or not into parent bounds
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.ResizeBehavior.SizeChanged">
            <summary>
            Expose this event because when size is changed by behavior the FrameworkElement.SizeChanged event
            is not raised.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleCollapsedHour">
            <summary>
            Represents a Schedule's Collapsed hour.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.CollapsedHourCollection">
            <summary>
            Represents a collection of non accessible blocks in schedule.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.UniformGrid">
            <summary>
            Represents a uniform grid.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.UniformGrid.Rows">
            <summary>
            Gets or sets the number of rows in a grid.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.UniformGrid.RowsProperty">
             <summary>
            Using a DependencyProperty as the backing store for Rows.  This enables animation, styling, binding, etc...
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.UniformGrid.Columns">
            <summary>
            Gets or sets the number of columns in a grid.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.UniformGrid.ColumnsProperty">
            <summary>
            Using a DependencyProperty as the backing store for Columns.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.UniformGrid.FirstColumn">
            <summary>
            Gets or sets the fist column in a grid.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.UniformGrid.FirstColumnProperty">
            <summary>
            Using a DependencyProperty as the backing store for FirstColumn.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.UniformGrid.ArrangeOverride(Windows.Foundation.Size)">
            <summary>
            Arrange the children of the UniformGrid by distributing space evenly
            among the children, making each child the size equal to a cell
            portion of the arrangeSize parameter.
            </summary>
            <param name="arrangeSize">The arrange size.</param>
            <returns>Returns the updated Size.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.UniformStackPanel">
            <summary>
            Represents a uniform stack panel.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.UniformStackPanel.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.UniformStackPanel.Orientation">
            <summary>
            Gets or sets the orientation by which child elements are stacked.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.UniformStackPanel.OrientationChanged">
            <summary>
            Event that is raised when <see cref="P:Syncfusion.UI.Xaml.Schedule.UniformStackPanel.Orientation"/> property is changed.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.UniformStackPanel.OrientationProperty">
            <summary>
            Using a DependencyProperty as the backing store for Orientation.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.UniformStackPanel.OnOrientationChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnOrientationChanged method of the instance, notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occurs on.</param>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.UniformStackPanel.OnOrientationChanged(Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises OrientationChanged event.
            </summary>
            <param name="e">Property change details, such as old value and new value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.UniformStackPanel.MeasureOverride(Windows.Foundation.Size)">
            <summary>
            Provides the behavior for the "measure" pass of Silverlight layout. Classes can override this method to define their own measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of child object allotted sizes.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.UniformStackPanel.ArrangeOverride(Windows.Foundation.Size)">
            <summary>
            Provides the behavior for the "arrange" pass of Silverlight layout. Classes can override this method to define their own arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.UniformTimeslotPanel">
            <summary>
            Represents a uniform time slot panel.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.DependencyObjectExtensions">
            <summary>
            Represents an extension to find parent of an element.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DependencyObjectExtensions.FindElementOfType``1(Windows.UI.Xaml.FrameworkElement)">
            <summary>
                Searches the sub tree of an element (including that element) 
                for an element of a particular type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DependencyObjectExtensions.FindElementOfTypeWithName``1(Windows.UI.Xaml.FrameworkElement,System.String)">
            <summary>
                Searches the sub tree of an element (including that element) 
                for an element of a particular type.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ContextMenuHandler">
            <summary>
            Helper Class for ContextMenuHandler.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ContextMenuHandler.TriggerContextMenu">
            <summary>
            Method to Trigger ContextMenu.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ContextMenuHandler.TriggeringEditContextMenuOnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Method to Trigger ContextMenu on tapped.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ContextMenuHandler.TriggeringEditContextMenu(Windows.UI.Xaml.Input.HoldingRoutedEventArgs,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Method to Trigger Edit ContextMenu.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ContextMenuHandler.RecursivePopup_OnAppointmentPressed(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Method to Trigger Recursive popup.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ContextMenuHandler.ContextMenu_Closed(Windows.UI.Xaml.Controls.Primitives.Popup)">
            <summary>
            Method to Trigger ContextMenu Closed on Pointer pressed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ContextMenuHandler.ClearContextmenu">
            <summary>
            Method to Clear ContextMenu.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.AddRadialMenuControl">
            <summary>
            Represents a radial menu for adding appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.AddRadialMenuControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.AddRadialMenuControl">AddRadialMenuControl</see>
            class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.AddRadialMenuControl.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.EditRadialMenuControl">
            <summary>
            Represents a radial menu for editing appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.EditRadialMenuControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.EditRadialMenuControl">EditRadialMenuControl</see>
            class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.EditRadialMenuControl.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.DragDropControl">
            <summary>
            Represents a control for appointment drag and drop
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DragDropControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.DragDropControl">DragDropControl</see>
            class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.DragDropControl.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.AddAppointmentControl">
            <summary>
            Represents a default menu for adding appointment
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.AddAppointmentControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.AddAppointmentControl">AddAppintmentControl</see>
            class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.AddAppointmentControl.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentStyle.ExpandedAppointmentBackground">
            <summary>
            Gets or sets the background for ExpandedAppointment Background.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentStyle.ExpandedAppointmentFontStyle">
            <summary>
            Gets or sets the fontweight ExpandedAppointment header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentStyle.ExpandedAppointmentFontWeight">
            <summary>
            Gets or sets the fontweight ExpandedAppointment header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentStyle.ExpandedAppointmentFontFamily">
            <summary>
            Gets or sets the FontFamily for ExpandedAppointment header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentStyle.ExpandedAppointmentTimeFontFamily">
            <summary>
            Gets or sets the FontFamily for ExpandedAppointment header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentStyle.ExpandedAppointmentTextSize">
            <summary>
            Gets or sets the font size for ExpandedAppointment Subject text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentStyle.ExpandedAppointmentTimeTextSize">
            <summary>
            Gets or sets the font size for ExpandedAppointment Time text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentStyle.ExpandedAppointmentTextColor">
            <summary>
            Gets or sets the foreground for ExpandedAppointment text color.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentStyle.ExpandedAppointmentTimeForeground">
            <summary>
            Gets or sets the foreground for ExpandedAppointment header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentStyle.ExpandedAppointmentTextHorizontalAlignment">
            <summary>
            Gets or sets the HorizontalAlignment for ExpandedAppointment header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentStyle.ExpandedAppointmentTextVerticalAlignment">
            <summary>
            Gets or sets the VerticalAlignment for ExpandedAppointment header text.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties">
            <summary>
            Represents the Recurrence Properties.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.RecurrenceType">
            <summary>
            Gets or sets the recurrence type.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.RecurrenceTypeProperty">
            <summary>
            Using a DependencyProperty as the backing store for RecurrenceType.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.RecurrenceRule">
            <summary>
            Gets or sets the recurrence rule.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.RecurrenceRuleProperty">
            <summary>
            Using a DependencyProperty as the backing store for RecurrenceRule.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsRangeRecurrenceCount">
            <summary>
            Gets or sets a value indicating whether the count of recurrence should be set.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsRangeRecurrenceCountProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsRangeRecurrenceCount.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsRangeEndDate">
            <summary>
            Gets or sets a value indicating whether the date should be specified for ending the recurrence.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsRangeEndDateProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsRangeEndDate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsRangeNoEndDate">
            <summary>
            Gets or sets a value indicating whether the recurrence should be ended.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsRangeNoEndDateProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsRangeNoEndDate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.RangeStartDate">
            <summary>
            Gets or sets the date to start the recurrence.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.RangeStartDateProperty">
            <summary>
            Using a DependencyProperty as the backing store for RangeStartDate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.RangeEndDate">
            <summary>
            Gets or sets the date to end the recurrence.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.RangeEndDateProperty">
            <summary>
            Using a DependencyProperty as the backing store for RangeEndDate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.RangeRecurrenceCount">
            <summary>
            Gets or sets the count for recurring appointment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.RangeRecurrenceCountProperty">
            <summary>
            Using a DependencyProperty as the backing store for RangeRecurrenceCount.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsDailyEveryNDays">
            <summary>
            Gets or sets a value indicating whether the recurrence should be set based on specified day interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsDailyEveryNDaysProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsDailyEveryNDays.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.DailyNDays">
            <summary>
            Gets or sets the day interval on which recurrence has to be set.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.DailyNDaysProperty">
            <summary>
            Using a DependencyProperty as the backing store for DailyNDays.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.WeeklyEveryNWeeks">
            <summary>
            Gets or sets the week interval on which recurrence has to be set.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.WeeklyEveryNWeeksProperty">
            <summary>
            Using a DependencyProperty as the backing store for WeeklyEveryNWeeks.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsWeeklySunday">
            <summary>
            Gets or sets a value indicating whether the recurrence should be applied on Sundays with specified week interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsWeeklySundayProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsWeeklySunday.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsWeeklyMonday">
            <summary>
            Gets or sets a value indicating whether the recurrence should be applied on Mondays with specified week interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsWeeklyMondayProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsWeeklyMonday.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsWeeklyTuesday">
            <summary>
            Gets or sets a value indicating whether the recurrence should be applied on Tuesdays with specified week interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsWeeklyTuesdayProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsWeeklyTuesday.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsWeeklyWednesday">
            <summary>
            Gets or sets a value indicating whether the recurrence should be applied on Wednesdays with specified week interval.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsWeeklyThursday">
            <summary>
            Gets or sets a value indicating whether the recurrence should be applied on Thursdays with specified week interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsWeeklyThursdayProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsWeeklyThursday.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsWeeklyFriday">
            <summary>
            Gets or sets a value indicating whether the recurrence should be applied on Fridays with specified week interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsWeeklyFridayProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsWeeklyFriday.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsWeeklySaturday">
            <summary>
            Gets or sets a value indicating whether the recurrence should be applied on Saturdays with specified week interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsWeeklySaturdayProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsWeeklySaturday.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.MonthlyEveryNMonths">
            <summary>
            Gets or sets the month interval on which recurrence has to be set.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.MonthlyEveryNMonthsProperty">
            <summary>
            Using a DependencyProperty as the backing store for MonthlyEveryNMonths.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsMonthlySpecific">
            <summary>
            Gets or sets a value indicating whether the recurrence has to be set for particular month day i.e. MonthlySpecificMonthDay
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsMonthlySpecificProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsMonthlySpecific.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.MonthlySpecificMonthDay">
            <summary>
            Gets or sets the day on which recurrence has to be set for every month.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.MonthlySpecificMonthDayProperty">
            <summary>
            Using a DependencyProperty as the backing store for MonthlySpecificMonthDay.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.MonthlyNthWeek">
            <summary>
            Gets or sets the week of month on which recurrence has to be set.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.MonthlyNthWeekProperty">
            <summary>
            Using a DependencyProperty as the backing store for MonthlyNthWeek.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.MonthlyWeekDay">
            <summary>
            Gets or sets the day of week on which monthly recurrence has to be set.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.MonthlyWeekDayProperty">
            <summary>
            Using a DependencyProperty as the backing store for MonthlyWeekDay.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.YearlyEveryNYears">
            <summary>
            Gets or sets the year interval on which recurrence has to be set.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.YearlyEveryNYearsProperty">
            <summary>
            Using a DependencyProperty as the backing store for YearlyEveryNYears.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsYearlySpecific">
            <summary>
            Gets or sets a value indicating whether the recurrence should be set based on specific year interval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.IsYearlySpecificProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsYearlySpecific.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.YearlySpecificMonth">
            <summary>
            Gets or sets the specific month of year on which recurrence has to be set.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.YearlySpecificMonthProperty">
            <summary>
            Using a DependencyProperty as the backing store for YearlySpecificMonth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.YearlySpecificMonthDay">
            <summary>
            Gets or sets the specific day of month on which yearly recurrence has to be set.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.YearlySpecificMonthDayProperty">
            <summary>
            Using a DependencyProperty as the backing store for YearlySpecificMonthDay.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.YearlyNthWeek">
            <summary>
            Gets or sets the week of year on which recurrence has to be set.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.YearlyNthWeekProperty">
            <summary>
            Using a DependencyProperty as the backing store for YearlyNthWeek.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.YearlyWeekDay">
            <summary>
            Gets or sets the day of week on which yearly recurrence has to be set.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.YearlyWeekDayProperty">
            <summary>
            Using a DependencyProperty as the backing store for YearlyWeekDay.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.YearlyGenericMonth">
            <summary>
            Gets or sets the generic month of year on which recurrence has to be set.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties.YearlyGenericMonthProperty">
            <summary>
            Using a DependencyProperty as the backing store for YearlyGenericMonth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.Resource">
            <summary>
            Represents the Resource of Schedule.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.Resource.ResourceName">
            <summary>
            Gets or sets the name for resource.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.Resource.ResourceNameProperty">
            <summary>
            Using a DependencyProperty as the backing store for ResourceName.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.Resource.DisplayName">
            <summary>
            Gets or sets the name to be displayed for resource.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.Resource.DisplayNameProperty">
            <summary>
            Using a DependencyProperty as the backing store for DisplayName.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.Resource.TypeName">
            <summary>
            Gets or sets the type name for resource.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.Resource.PropertyChanged">
            <summary>
             Occurs when a Resource's property is changed.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ResourceType">
            <summary>
            Represents the Resource Type of Schedule.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ResourceType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Schedule.ResourceType">ResourceType</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ResourceType.ResourceCollection">
            <summary>
            Gets or sets the collection of schedule resources.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ResourceType.ResourceCollectionProperty">
            <summary>
            Using a DependencyProperty as the backing store for ResourceCollection.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ResourceType.TypeName">
            <summary>
            Gets or sets the type name for resource type.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ResourceType.TypeNameProperty">
            <summary>
            Using a DependencyProperty as the backing store for TypeName.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ResourceType.SubResourceType">
            <summary>
            Gets or sets the sub resource type.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ResourceType.SubResourceTypeProperty">
            <summary>
            Using a DependencyProperty as the backing store for SubResourceType.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment">
            <summary>
            Represents a schedule appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment">ScheduleAppointment</see> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.Data">
            <summary>
             This property is used to get and set the value of forms Appointment object from Xamarin Forms.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.IsRecursive">
            <summary>
            Gets or sets a value indicating whether the appointment should be recursive.
            </summary>
            <example>
            using System;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleWinRT
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.ScheduleType = ScheduleType.Month;
                        ScheduleAppointment appointment = new ScheduleAppointment
                        {
                            Subject = "Meeting",
                            StartTime = DateTime.Now.AddHours(1),
                            EndTime = DateTime.Now.AddHours(2)
                        };
                        RecurrenceProperties RecProp = new RecurrenceProperties
                        {
                            RecurrenceType = RecurrenceType.Daily,
                            IsDailyEveryNDays = false,
                            DailyNDays = 2,
                            IsRangeNoEndDate = true,
                            RangeEndDate = DateTime.Now.AddDays(10),
                            RangeRecurrenceCount = 100
                        };
                        // Generating RRule using ScheduleHelper
                        appointment.RecurrenceRule = ScheduleHelper.RRuleGenerator(RecProp, appointment.StartTime, appointment.EndTime);
                        appointment.IsRecursive = true;
                        schedule.Appointments.Add(appointment);
                        Grid.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.IsRecursiveProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsRecursive.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.RecurrenceRule">
            <summary>
            Gets or sets the rule for recurrence appointments.
            </summary>
            <remarks>
            To set recurring appointment, IsRecursive of schedule appointment must be set as true.
            </remarks>
            <example>
            using System;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleWinRT
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.ScheduleType = ScheduleType.Month;
                        ScheduleAppointment appointment = new ScheduleAppointment
                        {
                            Subject = "Meeting",
                            StartTime = DateTime.Now.AddHours(1),
                            EndTime = DateTime.Now.AddHours(2)
                        };
                        RecurrenceProperties RecProp = new RecurrenceProperties
                        {
                            RecurrenceType = RecurrenceType.Daily,
                            IsDailyEveryNDays = false,
                            DailyNDays = 2,
                            IsRangeNoEndDate = true,
                            RangeEndDate = DateTime.Now.AddDays(10),
                            RangeRecurrenceCount = 100
                        };
                        // Generating RRule using ScheduleHelper
                        appointment.RecurrenceRule = ScheduleHelper.RRuleGenerator(RecProp, appointment.StartTime, appointment.EndTime);
                        appointment.IsRecursive = true;
                        schedule.Appointments.Add(appointment);
                        Grid.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.RecurrenceRuleProperty">
            <summary>
            Using a DependencyProperty as the backing store for RecurrenceRule.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.StartTimeZone">
            <summary>
            Gets or sets the time zone for appointment's start time.
            </summary>
            <example>
            using System;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        ScheduleAppointment appointment = new ScheduleAppointment();
                        appointment.StartTime = DateTime.Now.AddHours(1);
                        appointment.StartTimeZone = new TimeZone { TimeZoneValue = TimeZoneInfo.Local.ToString() };
                        appointment.EndTime = DateTime.Now.AddHours(2);
                        schedule.Appointments.Add(appointment);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.StartTimeZoneProperty">
            <summary>
            Using a DependencyProperty as the backing store for StartTimeZone.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.EndTimeZone">
            <summary>
            Gets or sets the time zone for appointment's end time.
            </summary>
            <example>
            using System;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        ScheduleAppointment appointment = new ScheduleAppointment();
                        appointment.StartTime = DateTime.Now.AddHours(1);
                        appointment.EndTime = DateTime.Now.AddHours(2);
                        appointment.EndTimeZone = new TimeZone { TimeZoneValue = TimeZoneInfo.Local.ToString() };
                        schedule.Appointments.Add(appointment);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.EndTimeZoneProperty">
            <summary>
            Using a DependencyProperty as the backing store for EndTimeZone.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.ReminderTime">
            <summary>
            Gets or sets the reminder time for appointments
            </summary>
            <example>
            using System;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        ScheduleAppointment appointment = new ScheduleAppointment();
                        appointment.StartTime = DateTime.Now.AddHours(1);
                        appointment.EndTime = DateTime.Now.AddHours(2);
                        appointment.ReminderTime = ReminderTimeType.OneHour;
                        schedule.Appointments.Add(appointment);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.ReminderTimeProperty">
            <summary>
            Using a DependencyProperty as the backing store for ReminderTime.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.AllDay">
            <summary>
            Gets or sets the value indicating whether the appointment should be extended for an entire day.
            </summary>
            <example>
            using System;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        ScheduleAppointment appointment = new ScheduleAppointment();
                        appointment.StartTime = DateTime.Now.AddHours(1);
                        appointment.EndTime = DateTime.Now.AddHours(2);
                        appointment.AllDay = true;
                        schedule.Appointments.Add(appointment);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.AllDayProperty">
            <summary>
            Using a DependencyProperty as the backing store for AllDay.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.StartTime">
            <summary>
            Gets the sets the appointment's start time.
            </summary>
            <example>
            using System;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        ScheduleAppointment appointment = new ScheduleAppointment();
                        appointment.StartTime = DateTime.Now.AddHours(1);
                        appointment.EndTime = DateTime.Now.AddHours(2);
                        schedule.Appointments.Add(appointment);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.StartTimeProperty">
            <summary>
            Using a DependencyProperty as the backing store for StartTime.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.EndTime">
            <summary>
            Gets the sets the appointment's end time.
            </summary>
            <example>
            using System;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        ScheduleAppointment appointment = new ScheduleAppointment();
                        appointment.StartTime = DateTime.Now.AddHours(1);
                        appointment.EndTime = DateTime.Now.AddHours(2);
                        schedule.Appointments.Add(appointment);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.EndTimeProperty">
            <summary>
            Using a DependencyProperty as the backing store for EndTime.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.Status">
            <summary>
            Gets or sets the appointment's status.
            </summary>
            <example>
            using System;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        ScheduleAppointment appointment = new ScheduleAppointment();
                        appointment.StartTime = DateTime.Now.AddHours(1);
                        appointment.EndTime = DateTime.Now.AddHours(2);
                        appointment.Status = schedule.AppointmentStatusCollection[0];
                        schedule.Appointments.Add(appointment);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.StatusProperty">
            <summary>
            Using a DependencyProperty as the backing store for Status.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.Subject">
            <summary>
            Gets or sets the subject for an appointment.
            </summary>
            <example>
            using System;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        ScheduleAppointment appointment = new ScheduleAppointment();
                        appointment.StartTime = DateTime.Now.AddHours(1);
                        appointment.EndTime = DateTime.Now.AddHours(2);
                        appointment.Subject = "Meeting";
                        schedule.Appointments.Add(appointment);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.SubjectProperty">
            <summary>
            Using a DependencyProperty as the backing store for Subject.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.Location">
            <summary>
            Gets or sets the location for an appointment.
            </summary>
            <example>
            using System;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        ScheduleAppointment appointment = new ScheduleAppointment();
                        appointment.StartTime = DateTime.Now.AddHours(1);
                        appointment.EndTime = DateTime.Now.AddHours(2);
                        appointment.Location = "Chennai";
                        schedule.Appointments.Add(appointment);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.LocationProperty">
            <summary>
            Using a DependencyProperty as the backing store for Location.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.Notes">
            <summary>
            Gets or sets the notes for an appointment.
            </summary>
            <example>
            using System;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        ScheduleAppointment appointment = new ScheduleAppointment();
                        appointment.StartTime = DateTime.Now.AddHours(1);
                        appointment.EndTime = DateTime.Now.AddHours(2);
                        appointment.Notes = "Inauguration";
                        schedule.Appointments.Add(appointment);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.NotesProperty">
            <summary>
            Using a DependencyProperty as the backing store for Notes.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.AppointmentBackground">
            <summary>
            Gets or sets Brush that provides the background for an appointment.
            </summary>
            <example>
            using System;
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        ScheduleAppointment appointment = new ScheduleAppointment();
                        appointment.StartTime = DateTime.Now.AddHours(1);
                        appointment.EndTime = DateTime.Now.AddHours(2);
                        appointment.AppointmentBackground = new
            SolidColorBrush(Colors.Orange);
                        schedule.Appointments.Add(appointment);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.AppointmentBackgroundProperty">
            <summary>
            Using a DependencyProperty as the backing store for AppointmentBackground.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the appointment should be readable.
            </summary>
            <example>
            using System;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        ScheduleAppointment appointment = new ScheduleAppointment();
                        appointment.StartTime = DateTime.Now.AddHours(1);
                        appointment.EndTime = DateTime.Now.AddHours(2);
                        appointment.ReadOnly = true;
                        schedule.Appointments.Add(appointment);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.ReadOnlyProperty">
            <summary>
            Using a DependencyProperty as the backing store for ReadOnly.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.ResourceCollection" -->
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.ResourceCollectionProperty">
            <summary>
            Using a DependencyProperty as the backing store for ResourceCollection.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.RecurrenceProperites">
            <summary>
            Gets the recurrence properties of schedule appointments.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.RecurrenceProperties"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.IsSelected">
            <summary>
            Gets a value indicating whether the appointment gets selected.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.IsSelectedProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsSelected.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.ReadOnlyVisibility">
            <summary>
            Gets the visibility of read only appointment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.ReadOnlyVisibilityProperty">
            <summary>
            Using a DependencyProperty as the backing store for ReadOnlyVisibility.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.RecurrenceID">
            <summary>
            Gets an unique ID for referring recurrence appointment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.RecurrenceIDProperty">
            <summary>
            Using a DependencyProperty as the backing store for RecurrenceID.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.ObjectID">
            <summary>
            Gets an unique ID for referring items in ItemsSource of Schedule.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.ObjectIDProperty">
            <summary>
            Using a DependencyProperty as the backing store for ObjectID.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.AllDayChanged">
            <summary>
             Occurs when a schedule all-day appointment is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.LocationChanged">
            <summary>
             Occurs when location of schedule appointment is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.SubjectChanged">
            <summary>
             Occurs when subject of schedule appointment is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment.PropertyChanged">
            <summary>
             Occurs when a ScheduleAppointment's property is changed.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentCollection">
            <summary>
            Represents a collection of Schedule appointment
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping">
            <summary>
            Represents a schedule appointment mapping.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.AllDayMapping">
            <summary>
            Gets or Sets the AllDay mapping property on the bound object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.SubjectMapping">
            <summary>
            Gets or sets the subject mapping.
            </summary>
            <value>The subject mapping.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.StartTimeMapping">
            <summary>
            Gets or sets the start time mapping.
            </summary>
            <value>The start time mapping.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.EndTimeMapping">
            <summary>
            Gets or Sets the EndTimeMapping property for the bound object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.LocationMapping">
            <summary>
            Gets or Sets the Location mapping property for the bound object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.NotesMapping">
            <summary>
            Gets or Sets the notes mapping property on the bound object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.StatusMapping">
            <summary>
            Gets or Sets the status mapping property on the bound object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.AppointmentBackgroundMapping">
            <summary>
            Gets or Sets the AppointmentBackground mapping property on the bound object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.ReminderTimeMapping">
            <summary>
            Gets or Sets the reminder time mapping property on the bound object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.RecurrenceTypeMapping">
            <summary>
            Gets or Sets the RecurrenceType mapping property on the bound object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.RecurrenceRuleMapping">
            <summary>
            Gets or Sets the RecurrenceRule mapping property on the bound object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.RecurrenceProperitesMapping">
            <summary>
            Gets or Sets the RecurrenceProperites mapping property on the bound object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.StartTimeZoneMapping">
            <summary>
            Gets or Sets the StartTimeZone mapping property on the bound object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.EndTimeZoneMapping">
            <summary>
            Gets or Sets the  EndTimeZone mapping property on the bound object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.IsRecursiveMapping">
            <summary>
            Gets or Sets the  IsRecursiveMapping mapping property on the bound object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.ReadOnlyMapping">
            <summary>
            Gets or Sets the  ReadOnly mapping property on the bound object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.ResourceCollectionMapping">
            <summary>
            Gets or Sets the  ResourceCollection mapping property on the bound object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.TypeNameMapping">
            <summary>
            Gets or Sets the  TypeName mapping property on the bound object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.ResourceNameMapping">
            <summary>
            Gets or Sets the  ResourceName mapping property on the bound object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping.DisplayNameMapping">
            <summary>
            Gets or Sets the  DisplayName mapping property on the bound object.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStatus">
            <summary>
            Represents a schedule appointment's status. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStatus.Status">
            <summary>
            Gets or sets the status of appointment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStatus.Brush">
            <summary>
            Gets or sets the brush for representing corresponding status.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStatus.BrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for Brush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStatusCollection">
            <summary>
            Represents a collection of schedule appointment's status.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStatus"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStyle">
            <summary>
            Represents the Schedule Appointment Style Customization.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStyle.AppointmentBackground">
            <summary>
            Gets or sets the background for Appointment header.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStyle.AppointmentFontStyle">
            <summary>
            Gets or sets the fontweight Appointment header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStyle.AppointmentFontWeight">
            <summary>
            Gets or sets the fontweight Appointment header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStyle.AppointmentFontFamily">
            <summary>
            Gets or sets the FontFamily for Appointment header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStyle.AppointmentTextSize">
            <summary>
            Gets or sets the font size for Appointment header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStyle.AppointmentTextColor">
            <summary>
            Gets or sets the foreground for Appointment header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStyle.SelectionTextColor">
            <summary>
            Gets or sets the Selection TextColor to appointment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStyle.AppointmentTextHorizontalAlignment">
            <summary>
            Gets or sets the HorizontalAlignment for Appointment header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStyle.AppointmentTextVerticalAlignment">
            <summary>
            Gets or sets the VerticalAlignment for Appointment header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStyle.BorderColor">
            <summary>
            Gets or sets the  BorderColor to appointment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStyle.SelectionColor">
            <summary>
            Gets or sets the Selection Color to appointment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStyle.BorderThickness">
            <summary>
            Gets or sets the thickess of border to appointment.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel">
            <summary>
            Represents the ScheduleDataModel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.PrevSelectedDates">
            <summary>
            Gets the PrevSelectedDates.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.CurrentSelectedDates">
            <summary>
            Gets the CurrentSelectedDates.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.NextSelectedDates">
            <summary>
            Gets the NextSelectedDates.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.VisibleAppointments">
            <summary>
            Gets the collection of appointments that are visible.
            </summary>
            <seealso
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentCollection"></seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.VisibleAppointmentsProperty">
            <summary>
            Using a DependencyProperty as the backing store for VisibleAppointments.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.ProxyAppointments">
            <summary>
            Gets or sets the ProxyAppointments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.PrevVisibleAppointments">
            <summary>
            Gets or sets the PrevVisibleappointments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.CurrentVisibleAppointments">
            <summary>
            Gets or sets the CurrentVisibleAppointments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.NextVisibleAppointments">
            <summary>
            Gets or sets the NextVisibleAppointments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.VisibleRecursiveAppointments">
            <summary>
            Gets or sets the VisibleRecursiveAppointments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.RecursiveAddedDates">
            <summary>
            Gets or sets the RecursiveAddedDates.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.RecursiveExceptionDates">
            <summary>
            Gets the reference for exception in recursive appointments
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.RecursiveExceptionDatesProperty">
            <summary>
            Using a DependencyProperty as the backing store for RecursiveExceptionDates.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.RecursiveAppointments">
            <summary>
            Gets or sets the RecursiveAppointments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.RecursiveModifiedAppointments">
            <summary>
            Gets the reference for exception in recursive appointments
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.RecursiveModifiedAppointmentsProperty">
            <summary>
            Using a DependencyProperty as the backing store for RecursiveModifiedAppointments.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.AppointmentsRuntimeFields">
            <summary>
            Gets the schedule Appointments runtime fields.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.MappingPropertyAccessors">
            <summary>
            Gets the custom mapping property accessors.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.SetAppointments">
            <summary>
            Method to set the Previous,Current,Next Visible Appointments and Proxy Appointments On AppointmentsPropertyChanged.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.SetItemsSource(Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Method to set the schedule Appointments On ItemsSourcePropertyChanged.
            </summary>
            <param name="args">ItemsSourcePropertyChanged EventArgs.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.SetSelectedAppointment">
            <summary>
            Method to set Selected Appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.SetSelectionToSelectedAppointment">
            <summary>
            Method to set selection tp Selected Appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.UpdateAppointmentsCollectionChangedForAdd(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment)">
            <summary>
            Method to update the Visible Appointments in Previous,current and next Selected dates in AppointmentsCollectionChanged for an Action Add.
            </summary>
            <param name="newapp">newly added appointment has been passed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.UpdateAppointmentsCollectionChangedForRemove(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment)">
            <summary>
            Method to update the Visible Appointments in previous,current and next Selected dates in AppointmentsCollectionChanged for an Action Remove.
            </summary>
            <param name="newapp">Deleted appointment has been passed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.AppointmentPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Event to Notify the Appointments Property Changed.
            </summary>
            <param name="sender">ScheduleAppointment object.</param>
            <param name="e">Provides data for the System.ComponentModel.INotifyPropertyChanged.PropertyChanged event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.UpdateItemsSourceCollectionChangedForAdd(System.Object)">
            <summary>
            Method to create the Schedule Appointments On ItemsSourceCollectionChanged Event while new item added.
            
            </summary>
            <param name="newapp">newly added object has been passed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.ItemsSourcePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Event to Notify the ItemsSource Property Changed.
            </summary>
            <param name="sender">ItemsSource object.</param>
            <param name="e">Provides data for the System.ComponentModel.INotifyPropertyChanged.PropertyChanged event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.SetProxyAppointments(System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.Schedule.ScheduleAppointment})">
            <summary>
            Method to set ProxyAppointments.
            </summary>
            <param name="appointmentcollection">IEnumerable of ScheduleAppointments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.Add(System.DateTime,Syncfusion.UI.Xaml.Schedule.ScheduleAppointment)">
            <summary>
            Method to add ProxyAppointments.
            </summary>
            <param name="key">ScheduleAppointment StartTime.</param>
            <param name="thing">ScheduleAppointment used to generate ProxyAppointments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.Remove(System.DateTime,Syncfusion.UI.Xaml.Schedule.ScheduleAppointment)">
            <summary>
            Method to Remove the Schedule Appointments.
            </summary>
            <param name="key">passed ScheduleAppointment appointment's StartTime.</param>
            <param name="thing">passed ScheduleAppointment appointment to remove.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.AddRecursive">
            <summary>
            Method to add Recursive Appointments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.AddRecursiveAppointmentsCopy(System.DateTime)">
            <summary>
            Method to add Recursive Appointments.
            </summary>
            <param name="key">Filter the Recursive appointment and date from Current,Previous and Next Selected dates</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.AddRecursiveApp(System.DateTime,Syncfusion.UI.Xaml.Schedule.ScheduleAppointment)">
            <summary>
            Method to add Recursive Appointments.
            </summary>
            <param name="key">Recursive added dates.</param>
            <param name="thing">Recursive Appointment.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.RemoveRecursiveAppointment(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment)">
            <summary>
            Method to remove the recursive appointment in schedule.
            </summary>
            <param name="recApp">The schedule appointment that needs to be removed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.UpdateOccurenceAppointment(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment)">
            <summary>
            Method to update Recursive appointment.
            </summary>
            <param name="recursiveAppointment">passed the Selected recursive appointment to update.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.CreateNoEndDateDummyAppointment(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment,System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Method to Create NoEndDate DummyAppointment.
            </summary>
            <param name="recApp">passed the created recursive appointment.</param>
            <param name="dateCollection">passed the Collection of DateTime to create NoEnd date recurcive Appointments.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.GetNearestPrevOccurenceDate(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment,System.DateTime[])">
            <summary>
            Method to Create GetNearestPrevOccurenceDate
            </summary>
            <param name="recApp">passed the recursive appointment.</param>
            <param name="dateCollection">passed the array of DateTime to get nearest recuurence dates.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.AddDateRecurreceNoEndDate">
            <summary>
            Method to add Recurrence NoEnd Date.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.RemoveRecursiveInProxy(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment)">
            <summary>
            Method to Remove series of Recursive proxy appointment.
            </summary>
            <param name="RecApp">passed recurrence series ScheduleAppointment to be removed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.RemoveSingleRecursiveAppInProxy(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment)">
            <summary>
            Method to Remove single Recursive proxy appointment.
            </summary>
            <param name="RecApp">passed Recursive ScheduleAppointment to be removed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.RemoveRecursive(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment)">
            <summary>
            Method to remove the recursive appointment in schedule.
            </summary>
            <param name="RecApp">passed the ScheduleAppointment that needs to be removed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.SetPrevVisibleAppointments(System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Method to create Previous date Visible Appointments.
            </summary>
            <param name="selectedDates">passed the PreviousSelectedDates.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.SetCurrentVisibleAppointments(System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Method to create Current date Visible Appointments.
            </summary>
            <param name="selectedDates">passed the CurrentSelectedDates.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.SetNextVisibleAppointments(System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Method to create Next date Visible Appointments.
            </summary>
            <param name="selectedDates">passed the NextSelectedDates.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.SetVisibleAppointments">
            <summary>
            Method to create Visible Appointments in orevious , current and next selected dates.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.UpdateItemsOnChange(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment,System.Object,System.String,Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping)">
            <summary>
            Method to update the Appointment on ItemsSource propertyChanged Event.
            </summary>
            <param name="app">passed the ScheduleAppointment to be updated.</param>
            <param name="obj">passed the ItemsSource Object which updated.</param>
            <param name="property">passed the Properties of ItemsSource Object.</param>
            <param name="AppointmentMapping">passed the AppointmentMapping.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.UpdateAppointmentOnChange(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment)">
            <summary>
            Method to update the Appointment on Appointment propertyChanged Event.
            </summary>
            <param name="app">passed the ScheduleAppointment to be updated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.SetItemsSource">
            <summary>
            Method to set the ItemsSource.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.UnwireItemSource(System.Collections.IEnumerable)">
            <summary>
            Method to reset the Appointments details while ItemsSource Set.
            </summary>
            <param name="source">passed the ItemsSource.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.WireItemSource(System.Collections.IEnumerable)">
            <summary>
            Method to listen the ItemsSource object events.
            </summary>
            <param name="source">passed the ItemsSource.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.CheckItemsInItemsSource(System.Object)">
            <summary>
            Method to check if ItemsSource is INotifyPropertyChanged.
            </summary>
            <param name="app">passed the ItemsSource.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.CreateAppointmentsForItemsSource">
            <summary>
            Method to create ScheduleAppointment from ItemsSource.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.Reflection(System.Collections.Generic.Dictionary{System.String,Syncfusion.UI.Xaml.Schedule.IPropertyAccessor},System.Object,Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping)">
            <summary>
            Method to Map the ItemsSource properties to ScheduleAppointment properties using Reflection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.CreateAppointment(System.Collections.Generic.Dictionary{System.String,Syncfusion.UI.Xaml.Schedule.IPropertyAccessor},System.Object)">
            <summary>
            Method to create ScheduleAppointment from ItemsSource.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.GetAppointmentData(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment)">
            <summary>
            Method to get the selected object data.
            </summary>
            <param name="selectedDates">passed the Selected appointment.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.DeleteAppointment">
            <summary>
            Method to delete the selected appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.CopyAppointment">
            <summary>
            Method to copy the selected appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.AppointmentCloning(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment)">
            <summary>
            Method to clone the Selected ScheduleAppointment.
            </summary>
            <param name="app">passed the ScheduleAppointment that needs to be cloned.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.UpdateAppointmentFromEditor(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment,Syncfusion.UI.Xaml.Schedule.RecurrenceProperties)">
            <summary>
            Method to update the edited appointment.
            </summary>
            <param name="selectedAppointment">passed the ScheduleAppointment that needs to be edit.</param>
            <param name="rp">passed the RecurrenceProperties.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.UpdateItemsFromAppointment(System.Object,Syncfusion.UI.Xaml.Schedule.ScheduleAppointment)">
            <summary>
            Method to Update the ItemsSource from ScheduleAppointment.
            </summary>
            <param name="originalData">passed the ItemsSource Object.</param>
            <param name="Appointment">passed the ScheduleAppointment.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.AddCustomDataUsingAppointment(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment)">
            <summary>
            Method to add the ItemsSource objects.
            </summary>
            <param name="app">passed the ScheduleAppointment Object.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.UpdateAppointmentDateTime(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment,System.DateTime,System.DateTime,System.Boolean,System.Boolean)">
            <summary>
            Method to Update the Appointment's DateTime.
            </summary>
            <param name="scheduleAppointment">passed the Resized Object.</param>
            <param name="appointmentResizetime">passed the Starttime/Endtime  of Resized Object.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.UpdateAppointmentStartTimeAndEndTime(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment,System.DateTime,System.DateTime,System.Double)">
            <summary>
            Method to Update the dropped appointment.
            </summary>
            <param name="droppedAppointment">passed the dropped Object.</param>
            <param name="daystarttime">passed the Starttime  of dropped Object.</param>
            <param name="dayendtime">passed the Endtime  of dropped Object.</param>
            <param name="DatetimeDiff">passed the DatetimeDiff  of dropped Object.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.UpdateAllDayAppointmentTime(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment,System.DateTime,System.DateTime)">
            <summary>
            Method to Update the dropped allday appointment.
            </summary>
            <param name="droppedAppointment">passed the dropped Object.</param>
            <param name="daystarttime">passed the Starttime  of dropped Object.</param>
            <param name="dayendtime">passed the Endtime  of dropped Object.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.UpdateImportRecurriveAppointment(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment,Syncfusion.UI.Xaml.Schedule.ScheduleAppointment,System.DateTime)">
            <summary>
            Method to Update the import recusive appointment.
            </summary>
            <param name="schedule_appointment">passed the Schedule Appointment.</param>
            <param name="recursiveAppointment">passed the imported recusive Appointment.</param>
            <param name="recursiveDate">passed the recusive dates.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.ClearAppointments">
            <summary>
            Method to Clear All Visible Appointments.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.ScheduleDataModel.VisibleAppointmentsChanged">
            <summary>
            Occurs Visible Appointments Changed.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.VisibleAppointmentsChangedEventArgs">
            <summary>
            Provides data for a VisibleAppointmentsChanged event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.TimeZone">
            <summary>
            Represents a TimeZone of Schedule.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.TimeZone.TimeZoneValue">
            <summary>
            Gets or sets the value for time zone.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.TimeZone.TimeZoneValueProperty">
            <summary>
            Using a DependencyProperty as the backing store for TimeZoneValue.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.TimeZoneCollection">
            <summary>
            Represents a collection of TimeZone.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.TimeZone"/>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.HeaderTitleBarView">
            <summary>
            Represents a header.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.HeaderTitleBarView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Schedule.HeaderTitleBarView">HeaderTitleBarView</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.HeaderTitleBarView.HeaderText">
            <summary>
            Gets the header as text.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.HeaderTitleBarView.HeaderTextProperty">
            <summary>
            Using a DependencyProperty as the backing store for HeaderText.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.HeaderTitleBarView.CurrentScheduleType">
            <summary>
            Gets the schedule type of current view.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleType"></seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.HeaderTitleBarView.CurrentScheduleTypeProperty">
            <summary>
            Using a DependencyProperty as the backing store for CurrentScheduleType.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.HeaderTitleBarView.SelectedDates">
            <summary>
            Gets the collection of selected dates.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.HeaderTitleBarView.SelectedDatesProperty">
            <summary>
            Using a DependencyProperty as the backing store for SelectedDates.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.HeaderTitleBarView.HeaderDateFormatProperty">
            <summary>
            Using a DependencyProperty as the backing store for HeaderDateFormat.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.HeaderTitleBarView.HeaderFormatProperty">
            <summary>
            Using a DependencyProperty as the backing store for HeaderFormat.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.HeaderTitleBarView.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.HeaderTitleBarView.Dispose">
            <summary>
            Method to release allocated resources of HeaderTitleBarView.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.SfSchedule">
            <summary>
            Represents the Schedule.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.SfSchedule">SfSchedule</see> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentViewPanel">
            <summary>
            Gets or sets the panel to AppointmentViewPanel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MonthCellViewPanel">
            <summary>
            Gets or sets the panel to MonthCellViewPanel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.InlineViewPanel">
            <summary>
            Gets or sets the panel to InlineViewPanel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.InlineView">
            <summary>
            Gets or sets the Custom view to Inline panel.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.SelectionView">
            <summary>
            Gets or sets the Custom view to cell selection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.ScheduleSelectionStyle">
            <summary>
            Gets or sets the schedule selection style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.WeekNumberStyle">
            <summary>
            Gets or sets the week number panel style in month view.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.ScheduleResourceTypeCollection">
            <summary>
            Gets or sets the ResourceType collection for defining various resource collection to Schedule.
            </summary>
            <remarks>
            TypeName of ResourceType differentiates the resource collection.
            </remarks>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.ResourceType"/>
            <example>
            using System.Collections.ObjectModel;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        ResourceType resourceType = new ResourceType { TypeName = "Doctors" };
                        resourceType.ResourceCollection.Add(new Resource { ResourceName = "Resource1", DisplayName = "Dr.John, M.B.B.S" });
                        resourceType.ResourceCollection.Add(new Resource { ResourceName = "Resource2", DisplayName = "Dr.Jessie, M.B.B.S" });
                        schedule.ScheduleResourceTypeCollection.Add(resourceType);
                        schedule.Resource = "Doctors";
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.ScheduleResourceTypeCollectionProperty">
            <summary>
            Using a DependencyProperty as the backing store for ScheduleResourceTypeCollection.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.Resource">
            <summary>
            Gets or sets the resource for Schedule from ScheduleResourceTypeCollection.
            </summary>
            <remarks>
            Resource must be assigned with TypeName of ScheduleResourceTypeCollection.
            </remarks>
            <example>
            using System.Collections.ObjectModel;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        ResourceType resourceType = new ResourceType { TypeName = "Doctors" };
                        resourceType.ResourceCollection.Add(new Resource { ResourceName = "Resource1", DisplayName = "Dr.John, M.B.B.S" });
                        resourceType.ResourceCollection.Add(new Resource { ResourceName = "Resource2", DisplayName = "Dr.Jessie, M.B.B.S" });
                        schedule.ScheduleResourceTypeCollection.Add(resourceType);
                        schedule.Resource = "Doctors";
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.ResourceProperty">
            <summary>
            Using a DependencyProperty as the backing store for Resource.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.DayHeaderOrder">
            <summary>
            Gets or sets the order by which resources have to be displayed.
            </summary>
            <example>
            using System.Collections.ObjectModel;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        ResourceType resourceType = new ResourceType { TypeName = "Doctors" };
                        resourceType.ResourceCollection.Add(new Resource { ResourceName = "Resource1", TypeName = "Dr.John", DisplayName = "Dr.John, M.B.B.S" });
                        resourceType.ResourceCollection.Add(new Resource { ResourceName = "Resource2", TypeName = "Dr.Jessie", DisplayName = "Dr.Jessie, M.B.B.S" });
                        schedule.ScheduleResourceTypeCollection.Add(resourceType);
                        schedule.Resource = "Doctors";
                        schedule.DayHeaderOrder = DayHeaderOrder.OrderByDate;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.DayHeaderOrderProperty">
            <summary>
            Using a DependencyProperty as the backing store for DayHeaderOrder.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.DayViewColumnCount">
            <summary>
            Gets or sets the number of resources (resource column count) to be displayed in day view.
            </summary>
            <example>
            using System.Collections.ObjectModel;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        ResourceType resourceType = new ResourceType { TypeName = "Doctors" };
                        resourceType.ResourceCollection.Add(new Resource { ResourceName = "Resource1", TypeName = "Dr.John", DisplayName = "Dr.John, M.B.B.S" });
                        resourceType.ResourceCollection.Add(new Resource { ResourceName = "Resource2", TypeName = "Dr.Jessie", DisplayName = "Dr.Jessie, M.B.B.S" });
                        schedule.ScheduleResourceTypeCollection.Add(resourceType);
                        schedule.Resource = "Doctors";
                        schedule.DayViewColumnCount = 2;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.DayViewColumnCountProperty">
            <summary>
            Using a DependencyProperty as the backing store for DayViewColumnCount.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.TimeLineViewRowCount">
            <summary>
            Gets or sets the number of resources (resource row count) to be displayed in timeline view.
            </summary>
            <example>
            using System.Collections.ObjectModel;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        ResourceType resourceType = new ResourceType { TypeName = "Doctors" };
                        resourceType.ResourceCollection.Add(new Resource { ResourceName = "Resource1", TypeName = "Dr.John", DisplayName = "Dr.John, M.B.B.S" });
                        resourceType.ResourceCollection.Add(new Resource { ResourceName = "Resource2", TypeName = "Dr.Jessie", DisplayName = "Dr.Jessie, M.B.B.S" });
                        schedule.ScheduleResourceTypeCollection.Add(resourceType);
                        schedule.Resource = "Doctors";
                        schedule.TimeLineViewRowCount = 2;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.TimeLineViewRowCountProperty">
            <summary>
            Using a DependencyProperty as the backing store for TimeLineViewRowCount.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.ScheduleHeaderStyle">
            <summary>
            Gets or sets the Schedule Header Style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.ScheduleMonthCellStyle">
            <summary>
            Gets or sets the monthview cell style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MonthNavigationDirection">
            <summary>
            Gets or sets swipe direction to month view.
            </summary>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.MonthNavigationDirection = MonthNavigationDirections.Vertical;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MonthViewHeaderStyle">
            <summary>
            Gets or sets the monthview header style.
            </summary>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.MonthViewHeaderStyle = new ScheduleMonthViewHeaderStyle { MonthViewHeaderBackground = new SolidColorBrush(Colors.Violet) , MonthViewHeaderTextColor = new SolidColorBrush(Colors.White),MonthViewHeaderTextHorizontalAlignment = HorizontalAlignment.Right};
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.DayViewHeaderStyle">
            <summary>
            Gets or sets the Day view header style.
            </summary>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.DayViewHeaderStyle = new ScheduleDayViewHeaderStyle { DayViewHeaderBackground = new SolidColorBrush(Colors.Violet) , DayViewHeaderTextColor = new SolidColorBrush(Colors.White),DayViewHeaderTextHorizontalAlignment = HorizontalAlignment.Right};
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.TimeLineViewHeaderStyle">
            <summary>
            Gets or sets the TimeLine view header style.
            </summary>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.TimeLineViewHeaderStyle = new ScheduleTimeLineViewHeaderStyle { TimeLineViewHeaderBackground = new SolidColorBrush(Colors.Violet) , TimeLineViewHeaderTextColor = new SolidColorBrush(Colors.White),TimeLineViewHeaderTextHorizontalAlignment = HorizontalAlignment.Right};
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.WeekViewHeaderStyle">
            <summary>
            Gets or sets the Week view header style.
            </summary>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.WeekViewHeaderStyle = new ScheduleWeekViewHeaderStyle { WeekViewHeaderBackground = new SolidColorBrush(Colors.Violet) , WeekViewHeaderTextColor = new SolidColorBrush(Colors.White),WeekViewHeaderTextHorizontalAlignment = HorizontalAlignment.Right};
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.ScheduleAppointmentStyle">
            <summary>
            Gets or sets the Schedule Appointemnt style.
            </summary>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.ScheduleExpandedAppointmentStyle">
            <summary>
            Gets or sets the Schedule inline appointemnt style.
            </summary>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.HeaderVisibility">
            <summary>
            Gets or sets the visibility of a Schedule Header.
            </summary>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.HeaderVisibility = Visibility.Visible;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MonthBlockOutDates">
            <summary>
            Gets or sets the BlockOutDates in Month view.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.MonthBlockOutDates"/>
            <example>
            using System;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.MonthBlockOutDates.Add(new DateTime(2015, 11, 19);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MinimumDisplayDate">
            <summary>
            Gets or sets the minimum display date in Schedule.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.MinimumDisplayDate"/>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.MinimumDisplayDate = (new DateTime(2015, 11, 16));
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MaximumDisplayDate">
            <summary>
            Gets or sets the maximum display date in Schedule.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.MaximumDisplayDate"/>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.MaximumDisplayDate = (new DateTime(2016, 11, 16));
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.EnableNavigation">
            <summary>
            Gets or sets a value to enable/disable navigation.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.EnableNavigation"/>
            <value>
            <see langword="true" /> if ; otherwise, <see langword="false" />.
            </value>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.EnableNavigation = false;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.EnableNavigationProperty">
            <summary>
            Using a DependencyProperty as the backing store for EnableNavigation.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.CurrentTimeIndicatorLocation">
            <summary>
            Gets or sets the location to Current time indicator.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.CurrentTimeIndicatorLocation"/>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.CurrentTimeIndicatorLocation = CurrentTimeIndicatorLocation.OnTimeLine;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.ScheduleType">
            <summary>
            Gets or sets the type of schedule view.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleType"/>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.ScheduleType = ScheduleType.TimeLine;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.ScheduleTypeProperty">
            <summary>
            Using a DependencyProperty as the backing store for ScheduleType.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.AllowEditing">
            <summary>
            Gets or sets a value to indicating whether the appointment editor should be allowed
            to create or edit appointment.
            </summary>
            <value>
            <see langword="true" /> if ; otherwise, <see langword="false" />.
            </value>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.AllowEditing = false;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.AllowEditingProperty">
            <summary>
            Using a DependencyProperty as the backing store for AllowAppointmentEditor.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.CellSelectionBrush">
            <summary>
            Gets or sets a brush that provides the background of the SfSchedule cell selection.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.CellSelectionBrush"/>
            <example>
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.CellSelectionBrush = new SolidColorBrush(Colors.Gray);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.CellSelectionBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for MonthViewLineStroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentBehavior">
            <summary>
            Gets or sets the behavior of all-day appointments
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.AppointmentBehavior"/>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.AppointmentBehavior = AppointmentBehavior.Default;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentSelectionBrush">
            <summary>
            Gets or sets a brush that describes the border background of schedule appointment.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.AppointmentSelectionBrush"/>
            <example>
            using System;
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.Appointments.Add(new ScheduleAppointment
                        {
                            Subject = "Meeting",
                            StartTime = DateTime.Now.Date.AddHours(9),
                            EndTime = DateTime.Now.Date.AddHours(12)
                        });
                        schedule.AppointmentSelectionBrush = new SolidColorBrush(Colors.Yellow);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentSelectionBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for AppointmentSelectionBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentTemplate">
            <summary>
            Gets or sets the template for customizing schedule appointment.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.AppointmentTemplate"/>
            <example>
            using System;
            using Windows.UI.Xaml;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.Appointments.Add(new ScheduleAppointment
                        {
                            Subject = "Meeting",
                            StartTime = DateTime.Now.Date.AddHours(9),
                            EndTime = DateTime.Now.Date.AddHours(12)
                        });
                        schedule.AppointmentTemplate = (DataTemplate)this.Resources["AppointmentTemplate"];
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for AppointmentTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.Appointments">
            <summary>
            Gets or sets the schedule appointments.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentCollection"/>
            <example>
            using System;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.Appointments.Add(new ScheduleAppointment
                        {
                            Subject = "Meeting",
                            StartTime = DateTime.Now.Date.AddHours(9),
                            EndTime = DateTime.Now.Date.AddHours(12)
                        });
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentsProperty">
            <summary>
            Using a DependencyProperty as the backing store for Appointments.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentStatusCollection">
            <summary>
            Gets or sets the collection of status required for prioritize the schedule appointments.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentStatusCollection"/>
            <example>
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.AppointmentStatusCollection = new ScheduleAppointmentStatusCollection
                        {
                            new ScheduleAppointmentStatus{Status="Idle", Brush = new SolidColorBrush(Colors.Pink)},
                            new ScheduleAppointmentStatus{Status="Busy", Brush = new SolidColorBrush(Colors.Red)}
                        };
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentStatusCollectionProperty">
            <summary>
            Using a DependencyProperty as the backing store for AppointmentStatusCollection.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentMapping">
            <summary>
            Gets or sets the AppointmentMapping attributes to map the properties in 
            underlying the ItemsSource of Schedule.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentMapping"/>
            <example>
            using System;
            using System.Collections.ObjectModel;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        ObservableCollection<MappedAppointment> mappedAppointments = new ObservableCollection</MappedAppointment>
                        {
                            new MappedAppointment{MappedSubject = "Meeting", MappedStartTime = DateTime.Now.Date.AddHours(10), 
                                                    MappedEndTime = DateTime.Now.Date.AddHours(13)},
                            new MappedAppointment{MappedSubject = "Conference", MappedStartTime = DateTime.Now.Date.AddHours(15), 
                                                    MappedEndTime = DateTime.Now.Date.AddHours(18)},
                        };
                        schedule.ItemsSource = mappedAppointments;
                        schedule.AppointmentMapping = new ScheduleAppointmentMapping
                        {
                            SubjectMapping = "MappedSubject",
                            StartTimeMapping = "MappedStartTime",
                            EndTimeMapping = "MappedEndTime"
                        };
                        Layout.Children.Add(schedule);
                    }
                }
                public class MappedAppointment
                {
                    public string MappedSubject { get; set; }
                    public DateTime MappedStartTime { get; set; }
                    public DateTime MappedEndTime { get; set; }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentMappingProperty">
            <summary>
            Using a DependencyProperty as the backing store for AppointmentMapping.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.ItemsSource">
            <summary>
            Gets or sets the items collection for adding mapped appointments.
            </summary>
            <remarks>
            Attributes of ApppointmentMapping should be specified to add mapped
            appointments.
            </remarks>
            <example>
            using System;
            using System.Collections.ObjectModel;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        ObservableCollection<MappedAppointment> mappedAppointments = new ObservableCollection</MappedAppointment>
                        {
                            new MappedAppointment{MappedSubject = "Meeting", MappedStartTime = DateTime.Now.Date.AddHours(10), 
                                                    MappedEndTime = DateTime.Now.Date.AddHours(13)},
                            new MappedAppointment{MappedSubject = "Conference", MappedStartTime = DateTime.Now.Date.AddHours(15), 
                                                    MappedEndTime = DateTime.Now.Date.AddHours(18)},
                        };
                        schedule.ItemsSource = mappedAppointments;
                        schedule.AppointmentMapping = new ScheduleAppointmentMapping
                        {
                            SubjectMapping = "MappedSubject",
                            StartTimeMapping = "MappedStartTime",
                            EndTimeMapping = "MappedEndTime"
                        };
                        Layout.Children.Add(schedule);
                    }
                }
                public class MappedAppointment
                {
                    public string MappedSubject { get; set; }
                    public DateTime MappedStartTime { get; set; }
                    public DateTime MappedEndTime { get; set; }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.ItemsSourceProperty">
            <summary>
            Using a DependencyProperty as the backing store for ItemsSource.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MonthHeaderDateFormat">
            <summary>
            Gets or sets the date format in schedule month view.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.MonthHeaderDateFormat"/>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.ScheduleType = ScheduleType.Month;
                        schedule.MonthHeaderDateFormat = "MMM dd yyyy";
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.MonthHeaderDateFormatProperty">
            <summary>
            Using a DependencyProperty as the backing store for MonthHeaderDateFormat.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.HeaderDateFormat">
            <summary>
            Gets or sets the DateTime format of date displayed in schedule header.
            </summary>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.HeaderDateFormat = "MMM dd yyyy";
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.HeaderDateFormatProperty">
            <summary>
            Using a DependencyProperty as the backing store for HeaderDateFormat.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MinorTickTimeFormat">
            <summary>
            Gets or sets the DateTime format of schedule minor ticks
            which is used to represents the minutes in timeslot.
            </summary>
            <remarks>
            TimeInterval must be specified other than OneHour to view the minor ticks.
            </remarks>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.TimeInterval = TimeInterval.ThirtyMin;
                        schedule.MinorTickTimeFormat = "mm:ss";
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.MinorTickTimeFormatProperty">
            <summary>
            Using a DependencyProperty as the backing store for MinorTickTimeFormat.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MajorTickTimeFormat">
            <summary>
            Gets or sets the DateTime format of schedule major ticks
            which is used to represents the hour in timeslot.
            </summary>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.MajorTickTimeFormat = "hh:mm tt";
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.MajorTickTimeFormatProperty">
            <summary>
            Using a DependencyProperty as the backing store for MajorTickTimeFormat.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MinorTickVisibility">
            <summary>
            Gets or sets the visibility of schedule minor ticks which represents minute in time slot.
            </summary>
            <remarks>
            TimeInterval must be specified other than OneHour to view the minor ticks.
            </remarks>
            <example>
            using Windows.UI.Xaml;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.TimeInterval = TimeInterval.ThirtyMin;
                        schedule.MinorTickVisibility = Visibility.Collapsed;
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.MinorTickVisibilityProperty">
            <summary>
            Using a DependencyProperty as the backing store for MinorTickVisibility.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MajorTickVisibility">
            <summary>
            Gets or sets the visibility of major ticks which represents hour in time slot.
            </summary>
            <example>
            using Windows.UI.Xaml;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.MajorTickVisibility = Visibility.Collapsed;
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.MajorTickVisibilityProperty">
            <summary>
            Using a DependencyProperty as the backing store for MajorTickVisibility.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MinorTickStroke">
            <summary>
            Gets or sets the Brush that specifies the color of schedule minor ticks.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.MinorTickStroke"/>
            <example>
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.MinorTickStroke = new SolidColorBrush(Colors.Gray);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MajorTickStroke">
            <summary>
            Gets or sets the Brush that specifies the color of schedule major ticks.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.MajorTickStroke"/>
            <example>
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.MajorTickStroke = new SolidColorBrush(Colors.Gray);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MinorTickLabelStroke">
            <summary>
            Gets or sets the Brush to apply to the minor tick label content of schedule.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.MinorTickLabelStroke"/>
            <example>
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.MinorTickLabelStroke = new SolidColorBrush(Colors.Gray);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MajorTickLabelStroke">
            <summary>
            Gets or sets the Brush to apply to the major tick label content of schedule.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.MajorTickLabelStroke"/>
            <example>
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.MajorTickLabelStroke = new SolidColorBrush(Colors.Gray);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MajorTickLabelSize">
            <summary>
            Gets or sets the size of Schedule MajorTick label .
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.MajorTickLabelStroke"/>
            <example>
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.MajorTickLabelSize = 15;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MinorTickLabelSize">
            <summary>
            Gets or sets the size of Schedule MinorTick label .
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.MajorTickLabelStroke"/>
            <example>
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.MinorTickLabelSize = 15;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MinorTickStrokeDashArray">
            <summary>
            Gets or sets the dashed line pattern of Schedule minor tick.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.MinorTickStrokeDashArray"/>
            <example>
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.MinorTickStrokeDashArray = new DoubleCollection(){10,10};
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MajorTickStrokeDashArray">
            <summary>
            Gets or sets the dashed line pattern of Schedule major tick.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.MajorTickStrokeDashArray"/>
            <example>
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.MajorTickStrokeDashArray = new DoubleCollection(){10,10};
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.ShowAllDay">
            <summary>
            Gets or sets a value indicating whether the AllDay panel should be shown.
            </summary>
            <remarks>
            AllDay panel is viewed only in day view and week view.
            </remarks>
            <value>
            <see langword="true" /> if ; otherwise, <see langword="false" />.
            </value>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.ShowAllDay = false;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.ShowAllDayProperty">
            <summary>
            Using a DependencyProperty as the backing store for ShowAllDay.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.ShowCalendar">
            <summary>
            Gets or sets a value indicating that whether the date picker should be shown.
            </summary>
            <value>
            <see langword="true" /> if ; otherwise, <see langword="false" />.
            </value>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.ShowCalendar = false;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.ShowAppointmentsInline">
            <summary>
            Gets or sets a value indicating whether the appointment's 
            should be shown in expanded control.
            </summary>
            <value>
            <see langword="true" /> if ; otherwise, <see langword="false" />.
            </value>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.ShowAppointmentsInline = true;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.ShowWeekNumber">
            <summary>
            Gets or sets a value to display week number of the year in month view
            </summary>
            <remarks>
            ShowWeekNumber is only applicable in month view.
            </remarks>
            <value>
            <see langword="false" /> if ; otherwise, <see langword="true" />.
            </value>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.ShowWeekNumber = false;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.FocusedMonth">
            <summary>
            Gets or sets a brush that provides the background for current month dates in schedule.
            </summary>
            <example>
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.ScheduleType = ScheduleType.Month;
                        schedule.FocusedMonth = new SolidColorBrush(Colors.Gray);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.FocusedMonthProperty">
            <summary>
            Using a DependencyProperty as the backing store for FocusedMonth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.NonFocusedMonth">
            <summary>
            Gets or sets a brush that provides the background for previous and next month dates in current view.
            </summary>
            <example>
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.ScheduleType = ScheduleType.Month;
                        schedule.NonFocusedMonth = new SolidColorBrush(Colors.LightGray);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.NonFocusedMonthProperty">
            <summary>
            Using a DependencyProperty as the backing store for NonFocusedMonth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.MonthViewLineStroke">
            <summary>
            Gets or sets the Brush that specifies the painted  
            horizontal and vertical line's in month view.
            </summary>
            <example>
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.MonthViewLineStroke = new SolidColorBrush(Colors.Gray);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.MonthViewLineStrokeProperty">
            <summary>
            Using a DependencyProperty as the backing store for MonthViewLineStroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.DayViewVerticalLineStroke">
            <summary>
             Gets or sets the Brush that specifies the painted  
             vertical lines that separate dates in the week view.
            </summary>
            <example>
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.DayViewVerticalLineStroke = new SolidColorBrush(Colors.Gray);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.DayViewVerticalLineStrokeProperty">
            <summary>
            Using a DependencyProperty as the backing store for DayViewVerticalLineStroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.HeaderBackground">
            <summary>
            Gets or sets the Brush that provide the background for schedule's header.
            </summary>
            <example>
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.HeaderBackground = new SolidColorBrush(Colors.Green);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.HeaderBackgroundProperty">
            <summary>
            Using a DependencyProperty as the backing store for HeaderBackground.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.CurrentDateForeground">
            <summary>
             Gets or sets the Brush to apply to the current date of Schedule.
            </summary>
            <example>
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.CurrentDateForeground = new SolidColorBrush(Colors.Green);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.CurrentDateBackground">
            <summary>
            Gets or sets the Brush that provide the background for schedule current date.
            </summary>
            <example>
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.CurrentDateBackground = new SolidColorBrush(Colors.Blue);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.CurrentDateBackgroundProperty">
            <summary>
            Using a DependencyProperty as the backing store for CurrentDateBackground.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.NonWorkingDays">
            <summary>
            Gets or sets the collection of non working days.
            </summary>
            <remarks>
            IsHighlightWorkingHours of schedule must be set as "True" to view non working days.
            </remarks>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.NonWorkingDays = "Thursday,Friday";
                        schedule.IsHighLightWorkingHours = true;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.NonWorkingDaysProperty">
            <summary>
            Using a DependencyProperty as the backing store for NonWorkingDays.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.NonWorkingHourBrush">
            <summary>
            Gets or sets the brush for highlighting non working hours.
            </summary>
            <remarks>
            IsHighlightWorkingHours of schedule must be set as "True" to view non working hours.
            </remarks>
            <example>
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.NonWorkingHourBrush = new SolidColorBrush(Colors.Brown);
                        schedule.IsHighLightWorkingHours = true;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.NonWorkingHourBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for NonWorkingHourBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.ShowNonWorkingHours">
            <summary>
            Gets or sets a value indicating whether the non working hours should be shown.
            </summary>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.ShowNonWorkingHours = false;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.ShowNonWorkingHoursProperty">
            <summary>
            Using a DependencyProperty as the backing store for ShowNonWorkingHours.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.WorkStartHour">
            <summary>
            Gets or sets the start hour time of working hours.
            </summary>
            <remarks>
            IsHighlightWorkingHours of schedule must be set as "True" to view working hours.
            </remarks>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.WorkStartHour = 10;
                        schedule.IsHighLightWorkingHours = true;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.WorkStartHourProperty">
            <summary>
            Using a DependencyProperty as the backing store for WorkStartHour.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.WorkEndHour">
            <summary>
            Gets or sets the end hour time of working hours.
            </summary>
            <remarks>
            IsHighlightWorkingHours of schedule must be set as "True" to view working hours.
            </remarks>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.WorkEndHour = 17;
                        schedule.IsHighLightWorkingHours = true;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.WorkEndHourProperty">
            <summary>
            Using a DependencyProperty as the backing store for WorkEndHour.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.IsHighLightWorkingHours">
            <summary>
            Gets or sets a value indicating whether the working hours should be highlighted.
            </summary>
            <value>
            <see langword="true" /> if this instance ; otherwise, <see langword="false" />.
            </value>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.IsHighLightWorkingHours = true;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.IsHighLightWorkingHoursProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsHightLightWorkingHours.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.TimeMode">
            <summary>
            Gets or sets the time mode which may be 12 hrs or 24 hrs.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.TimeModes"></seealso>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.TimeMode = TimeModes.TwelveHours;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.TimeModeProperty">
            <summary>
            Using a DependencyProperty as the backing store for TimeMode.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.TimeInterval">
            <summary>
            Gets or sets the time interval which may differs based on enum "TimeInterval" of Schedule.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.TimeInterval"></seealso>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.TimeInterval = TimeInterval.ThirtyMin;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.TimeIntervalProperty">
            <summary>
            Using a DependencyProperty as the backing store for TimeInterval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.CustomTimeInterval">
            <summary>
            Gets or sets the Custom TimeInterval for Schedule.
            </summary>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.TimeInterval = TimeInterval.Custom;
                        schedule.CustomTimeInterval = 30;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.AllDayAppointmentPanelBrush">
            <summary>
            Gets or sets a brush that provides the background of AllDayAppointmentPanel.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.CellSelectionBrush"/>
            <example>
            using Windows.UI;
            using Windows.UI.Xaml.Media;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.AllDayAppointmentPanelBrush = new SolidColorBrush(Colors.Gray);
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.AllDayAppointmentPanelBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for MonthViewLineStroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.IntervalHeight">
            <summary>
            Gets or sets the height of interval set for Schedule.
            </summary>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.IntervalHeight = 30;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.IntervalHeightProperty">
            <summary>
            Using a DependencyProperty as the backing store for IntervalHeight.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.ContextMenuType">
            <summary>
            Gets or sets the type of context menu which may be default menu or radial menu.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.MenuType"></seealso>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.ContextMenuType = MenuType.RadialMenu;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.ContextMenuTypeProperty">
            <summary>
            Using a DependencyProperty as the backing store for ContextMenuType.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.CurrentTimeIndicatorTemplate">
            <summary>
            Gets or sets the template for customizing current time indicator.
            </summary>
            <remarks>
            CurrentTimeIndicatorVisibility of Schedule should be set as Visible to view the
            current time indicator.
            </remarks>
            <example>
            using Windows.UI.Xaml;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.CurrentTimeIndicatorVisibility = Visibility.Visible;
                        schedule.CurrentTimeIndicatorTemplate = (DataTemplate)this.Resources["CurrentTimeIndicatorTemplate"];
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.CurrentTimeIndicatorTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for CurrentTimeIndicatorTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.CurrentTimeIndicatorVisibility">
            <summary>
            Gets or sets the visibility of current time indicator.
            </summary>
            <example>
            using Windows.UI.Xaml;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.CurrentTimeIndicatorVisibility = Visibility.Visible;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.CurrentTimeIndicatorVisibilityProperty">
            <summary>
            Using a DependencyProperty as the backing store for CurrentTimeIndicatorVisibility.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.EnableReminderTimer">
            <summary>
            Gets or sets a value indicating whether the reminder timer should be enabled.
            </summary>
            <value>
            <see langword="true" /> if ; otherwise, <see langword="false" />.
            </value>
            <example>
            using System;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.Appointments.Add(new ScheduleAppointment
                        {
                            Subject = "Meeting",
                            StartTime = DateTime.Now.AddHours(1),
                            EndTime = DateTime.Now.AddHours(2),
                            ReminderTime = ReminderTimeType.OneHour
                        });
                        schedule.EnableReminderTimer = false;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.EnableReminderTimerProperty">
            <summary>
            Using a DependencyProperty as the backing store for EnableReminderTimer.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.EnableAutoFormat">
            <summary>
            Gets or sets a value indicating whether the auto format for headers should be enabled while resizing.
            </summary>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.EnableAutoFormat = false;
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.EnableAutoFormatProperty">
            <summary>
            Using a DependencyProperty as the backing store for EnableAutoFormat.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.ScheduleDateRange">
            <summary>
            Gets or sets the dates that need to be displayed in day view and timeline view of schedule.
            </summary>
            <remarks>
            CustomVisibleDate property helps user to view particular dates in a single view.
            </remarks>
            <example>
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.ScheduleDateRange.Add(new DateTime(2013, 11, 21));
                        schedule.ScheduleDateRange.Add(new DateTime(2013, 11, 23));
                        schedule.ScheduleDateRange.Add(new DateTime(2013, 11, 25));
                        schedule.ScheduleDateRange.Add(new DateTime(2013, 11, 27));  
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.CollapsedHours">
            <summary>
            Gets or sets the hour's that need to be collapsed in day view and timeline view of schedule.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.CollapsedHourCollection"/>
            <example>
            using System;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.CollapsedHours.Add(new CollapsedHour
                        {
                            StartHour = 2,
                            EndHour = 4,
                        });
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.NonAccessibleBlocks">
            <summary>
            Gets or sets the non accessible blocks in schedule
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.NonAccessibleBlockCollection"/>
            <example>
            using System;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.NonAccessibleBlocks.Add(new NonAccessibleBlock
                        {
                            StartHour = 2,
                            EndHour = 4,
                            Label = "Main Block",
                        });
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.NonAccessibleBlockTemplate">
            <summary>
            Gets or sets the template for customizing non accessible blocks of schedule.
            </summary>
            <example>
            using System;
            using Windows.UI.Xaml;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.NonAccessibleBlocks.Add(new NonAccessibleBlock
                        {
                            StartHour = 2,
                            EndHour = 4,
                            Label = "Main Block",
                        });
                        schedule.NonAccessibleBlockTemplate = (DataTemplate)this.Resources["NonAccessibleBlockTemplate"];
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.FirstDayOfWeek">
            <summary>
            Gets or sets the day of the week in Schedule.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.FirstDayOfWeek"/>
            <example>
            using System;
            using Syncfusion.UI.Xaml.Schedule;
            namespace ScheduleDemo
            {
                public sealed partial class ScheduleSample
                {
                    public ScheduleSample()
                    {
                        this.InitializeComponent();
                        SfSchedule schedule = new SfSchedule();
                        schedule.FirstDayOfWeek = DayOfWeek.Friday; 
                        Layout.Children.Add(schedule);
                    }
                }
            }
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.TimeZoneCollection">
            <summary>
            Gets the collection of time zones available in schedule.
            </summary>
            <seealso
            cref="T:Syncfusion.UI.Xaml.Schedule.TimeZoneCollection">TimeZoneCollection</seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.TimeZoneCollectionProperty">
            <summary>
            Using a DependencyProperty as the backing store for TimeZoneCollection.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.NonWorkingDateCollection">
            <summary>
            Gets the collection of non-working days.
            </summary>
            <seealso cref="T:System.DayOfWeek"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.NonWorkingDateCollectionProperty">
            <summary>
            Using a DependencyProperty as the backing store for NonWorkingDateCollection.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.SfSchedule.VisibleDates">
            <summary>
            Gets the visible dates of Schedule's current view.
            </summary>
            <seealso cref="T:System.DateTime"></seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.VisibleDatesProperty">
            <summary>
            Using a DependencyProperty as the backing store for VisibleDates.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.SfSchedule.HeaderFormatProperty">
            <summary>
            Using a DependencyProperty as the backing store for HeaderFormat.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.AddNewAppointment">
            <summary>
            Method to Add new appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.DeleteAppointment">
            <summary>
            Method to delete the selected appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CopyAppointment">
            <summary>
            Method to copy the selected appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.ResizeAppointment">
            <summary>
            Method to resize the selected appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.MoveToNextAppointment">
            <summary>
            Method to move to next appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.MoveToPreviousAppointment">
            <summary>
            Method to move to previous appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.MoveToTime(System.TimeSpan)">
            <summary>
            Method to navigate to the specified time in schedule.
            </summary>
            <param name="span">TimeSpan value that needs to be scroll.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.Forward">
            <summary>
            Method to forward dates to next.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.Backward">
            <summary>
            Method to backward dates to previous.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.MoveToDate(System.DateTime)">
            <summary>
            Method to navigate to the specified date in schedule.
            </summary>
            <param name="moveToDate">The date that needs to be shown.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.ImportICS">
            <summary>
            Method to import the required .ics file as schedule.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.ExportICS">
            <summary>
            Method to export the schedule information as .ics file.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.Refresh">
            <summary>
            Method to refresh the schedule appointment's.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.Dispose">
            <summary>
            Method to release allocated resources of Schedule.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentCollectionChanged">
            <summary>
            Occurs when the SfSchedule appointments collection will be changed. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CanTriggerAppointmentCollectionChangedEvent">
            <summary>
            To check Whether the AppointmentCollectionChanged Event triggered or not.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.ItemsSourceChanged">
            <summary>
            Occurs when SfSchedule ItemsSource collection will be changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentEditorOpening">
            <summary>
             Occurs when opening the SfSchedule appointment editor . 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CanTriggerAppointmentEditorOpeningEvent">
            <summary>
            To check Whether the AppointmentEditorOpening Event triggered or not.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentEditorClosed">
            <summary>
             Occurs when the SfSchedule appointment editor will be closed. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CanTriggerAppointmentEditorClosedEvent">
            <summary>
            To check Whether the AppointmentEditorClosed Event triggered or not.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.RaisedAppointmentEditorOpeningEvents(Syncfusion.UI.Xaml.Schedule.AppointmentEditorOpeningEventArgs)">
            <summary>
            Gets the appointment editor opening events.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.UI.Xaml.Schedule.AppointmentEditorOpeningEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.RaisedAppointmentEditorClosedEvents(Syncfusion.UI.Xaml.Schedule.AppointmentEditorClosedEventArgs)">
            <summary>
            Gets the appointment editor closed events.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.UI.Xaml.Schedule.AppointmentEditorClosedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.ContextMenuOpening">
            <summary>
            Occurs when opening the SfSchedule Context Menu.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CanTriggerContextMenuOpeningEvent">
            <summary>
            To check Whether the ContextMenuOpening Event triggered or not.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.ContextMenuClosed">
            <summary>
            Occurs when the SfSchedule Context Menu will be closed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CanTriggerContextMenuClosedEvent">
            <summary>
            To check Whether the ContextMenuClosed Event triggered or not.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.ScheduleTapped">
            <summary>
            Occurs when tapping the SfSchedule.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.ScheduleDoubleTapped">
            <summary>
            Occurs when double tapping the SfSchedule.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CanTriggerScheduleTappedEvent">
            <summary>
            To check Whether the ScheduleTapped Event triggered or not.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CanTriggerScheduleDoubleTappedEvent">
            <summary>
            To check Whether the ScheduleDoubleTapped Event triggered or not.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.DragStarting">
            <summary>
            Occurs when darg the Schedule appointment.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentStartDragging">
            <summary>
            Occurs when start to drag the SfSchedule appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CanTriggerAppointmentStartDraggingEvent">
            <summary>
            To check Whether the AppointmentStartDragging Event triggered or not.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentDragging">
            <summary>
            Occurs when dragging the SfSchedule appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CanTriggerAppointmentDraggingEvent">
            <summary>
            To check Whether the AppointmentDragging Event triggered or not.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentEndDragging">
            <summary>
            Occurs when dropped the SfSchedule appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CanTriggerAppointmentEndDraggingEvent">
            <summary>
            To check Whether the AppointmentEndDragging Event triggered or not.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentStartResizing">
            <summary>
            Occurs when start to resize the SfSchedule appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CanTriggerAppointmentStartResizingEvent">
            <summary>
            To check Whether the AppointmentStartResizing Event triggered or not.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentResizing">
            <summary>
            Occurs when resizing the SfSchedule appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CanTriggerAppointmentResizingEvent">
            <summary>
            To check Whether the AppointmentResizing Event triggered or not.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.AppointmentEndResizing">
            <summary>
            Occurs when release the resized SfSchedule appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CanTriggerAppointmentEndResizingEvent">
            <summary>
            To check Whether the AppointmentEndResizing Event triggered or not.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.VisibleDatesChanging">
            <summary>
            Occurs when SfSchedule visible dates will be changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CanTriggerVisibleDatesChangingEvent">
            <summary>
            To check Whether the VisibleDatesChanging Event triggered or not.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.ScheduleTypeChanging">
            <summary>
            Occurs when changing the ScheduleType.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CanTriggerScheduleTypeChangingEvent">
            <summary>
            To check Whether the ScheduleTypeChanging Event triggered or not.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.MonthCellLoaded">
            <summary>
            Occurs when Month Cell Style will be changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CanTriggerMonthCellLoadedEvent">
            <summary>
            To check Whether the MonthCellLoaded Event triggered or not.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.HeaderStyleChanging">
            <summary>
            Occurs when SfSchedule Header Style will be changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.DayViewHeaderStyleChanging">
            <summary>
            Occurs when SfSchedule day view header Style will be changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.TimeLineViewHeaderStyleChanging">
            <summary>
            Occurs when SfSchedule TimeLine view header Style will be changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.MonthViewHeaderStyleChanging">
            <summary>
            Occurs when SfSchedule Month view header Style will be changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.WeekViewHeaderStyleChanging">
            <summary>
            Occurs when SfSchedule Week view header Style will be changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.ScheduleAppointmentLoaded">
            <summary>
            Occurs when SfSchedule day view header Style will be changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CanTriggerScheduleAppointmentLoadedEvent">
            <summary>
            To check Whether the ScheduleAppointmentLoaded Event triggered or not.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.ScheduleExpandedAppointmentStyleChanging">
            <summary>
            Occurs when SfSchedule day view header Style will be changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CanTriggerScheduleExpandedAppointmentStyleChangingEvent">
            <summary>
            To check Whether the ScheduleExpandedAppointmentStyleChanging Event triggered or not.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.SfSchedule.InlineLoaded">
            <summary>
            Occurs when SfSchedule Inline loaded event loaded.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.CanTriggerInlineLoadedEvent">
            <summary>
            To check Whether the InlineLoaded Event triggered or not.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.SfSchedule.IsTapNonAccessibleBlock(System.DateTime)">
            <summary>
            Check whether the non accessible block fall or not in tapping region.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.WeekViewHeaderStyleChangingEventArgs">
            <summary>
            Provides Style for Schedule Week view Header.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.MonthCellLoadedEventArgs">
            <summary>
            Provides Style for Month Cell Style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellLoadedEventArgs.MonthCellStyle">
            <summary>
            Gets and sets style value for month cell for the particular day.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellLoadedEventArgs.MonthCellDate">
            <summary>
            Gets date value for month cell for the particular day.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellLoadedEventArgs.IsToday">
            <summary>
            Get a value indicating whether particular day is current day.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellLoadedEventArgs.IsPreviousMonth">
            <summary>
            Get a value indicating whether particular day is in previous month.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellLoadedEventArgs.IsNextMonth">
            <summary>
            Get a value indicating whether particular day is in next month.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellLoadedEventArgs.IsBlackOutDay">
            <summary>
            Get a value indicating whether particular day is blackout date.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellLoadedEventArgs.Appointments">
             <summary>
            Gets value for collection of appointments in the particular day.
             </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellLoadedEventArgs.View">
             <summary>
            Gets or sets value for custom view to load in the month cell for the particular day.
             </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.DayViewHeaderStyleChangingEventArgs">
            <summary>
            Provides Style for Schedule day view Header.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.TimeLineViewHeaderStyleChangingEventArgs">
            <summary>
            Provides Style for Schedule TimeLine view Header.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.MonthViewHeaderStyleChangingEventArgs">
            <summary>
            Provides Style for Schedule Month view Header.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentLoadedEventArgs">
            <summary>
            Provides Style for Schedule day view Header.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleExpandedAppointmentStyleChangingEventArgs">
            <summary>
            Provides Style for Schedule day view Header.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.InLineLoadedEventArgs">
            <summary>
            Provides Style for Schedule day view Header.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.HeaderStyleChangingEventArgs">
            <summary>
            Provides Style for Schedule Header.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.AppointmentEditorOpeningEventArgs">
            <summary>
            Provides data for a AppointmentEditorOpening event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.AppointmentEditorClosedEventArgs">
            <summary>
            Provides data for a AppointmentEditorClosed event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ContextMenuOpeningEventArgs">
            <summary>
            Provides data for a ContextMenuOpening event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ContextMenuClosedEventArgs">
            <summary>
            Provides data for a ContextMenuClosed event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleTappedEventArgs">
            <summary>
            Provides data for a ScheduleTapped event.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTappedEventArgs.Appointment">
            <summary>
            Gets the schedule appointment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTappedEventArgs.Appointments">
            <summary>
            Gets the schedule appointment collection.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.UI.Xaml.Schedule.DragStartingEventArgs" -->
        <member name="T:Syncfusion.UI.Xaml.Schedule.AppointmentStartDraggingEventArgs">
            <summary>
            Provides data for a AppointmentStartDragging event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.AppointmentDraggingEventArgs">
            <summary>
            Provides data for a AppointmentDragging event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.AppointmentEndDraggingEventArgs">
            <summary>
            Provides data for a AppointmentEndDragging event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.AppointmentStartResizingEventArgs">
            <summary>
            Provides data for a AppointmentStartResizing event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.AppointmentResizingEventArgs">
            <summary>
            Provides data for a AppointmentResizing event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.AppointmentEndResizingEventArgs">
            <summary>
            Provides data for a AppointmentEndResizing event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.VisibleDatesChangingEventArgs">
            <summary>
            Provides data for a VisibleDatesChanging event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleTypeChangingEventArgs">
            <summary>
            Provides data for a ScheduleTypeChanging event.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentEditor">
            <summary>
            Represents the Schedule Appointment Editor.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentEditor">ScheduleAppointmentEditor</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentEditor.isNewAppointment">
            <summary>
            Checks whether the appointment editor opened for new appointment or not.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentEditor.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentEditor.IsEditingAllowed">
            <summary>
            Gets or sets a value indicating whether the appointment can be edited or not.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentEditor.IsEditingAllowedProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsEditingAllowed.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentEditor.OpenEditorForAddAppointment(System.DateTime,System.DateTime,Syncfusion.UI.Xaml.Schedule.SfSchedule)">
            <summary>
            Method to Open AppointmentEditor to add new appointment.
            </summary>
            <param name="selectedDate">Selected date to add appointment.</param>
            <param name="EndDate">Selected end date to add appointment.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentEditor.OpenEditorForEditAppointment(Syncfusion.UI.Xaml.Schedule.ScheduleAppointment,Syncfusion.UI.Xaml.Schedule.SfSchedule)">
            <summary>
            Method to Open AppointmentEditor for editing selected appointment.
            </summary>
            <param name="scheduleAppointment">Selected appointment.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentEditor.UpdateEditorForRecursiveApp(Syncfusion.UI.Xaml.Schedule.SfSchedule)">
            <summary>
            Method to update recursive appointment details.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentEditor.Dispose">
            <summary>
            Method to release allocated resources of ScheduleAppointmentEditor.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleCommands.AddNewCommand">
            <summary>
             Defines a command to add schedule appointment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleCommands.EditCommand">
            <summary>
             Defines a command to edit the schedule appointment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleCommands.DeleteCommand">
            <summary>
             Defines a command to delete the selected schedule appointment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleCommands.DragAndDropCommand">
            <summary>
             Defines a command to drag schedule appointment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleCommands.CopyCommand">
            <summary>
             Defines a command to copy the selected schedule appointment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleCommands.PasteCommand">
            <summary>
             Defines a command to paste the copied schedule appointment.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Schedule.ScheduleCommand.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleCommand.#ctor(System.Action{System.Object},System.Func{System.Object,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleCommand"/> class.
            </summary>
            <param name="executeAction">The action to be executed.</param>
            <param name="canExecute">The can execute.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. 
            </param>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. 
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleHeaderStyle">
            <summary>
            Represents the schedule's Header Style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleHeaderStyle.HeaderBackground">
            <summary>
            Gets or sets the Schedule Header Background Color.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleHeaderStyle.HeaderHeight">
            <summary>
            Gets or sets Height for Schedule Header.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleHeaderStyle.HeaderTextStyle">
            <summary>
            Gets or sets FontWeight for Schedule Header Text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleHeaderStyle.HeaderTextSize">
            <summary>
            Gets or sets TextSize for Schedule Header Text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleHeaderStyle.HeaderTextColor">
            <summary>
            Gets or sets Foreground for Schedule Header Text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleHeaderStyle.HeaderTextHorizontalAlignment">
            <summary>
            Gets or sets HorizontalAlignment to Schedule Header Text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleHeaderStyle.HeaderTextVerticalAlignment">
            <summary>
            Gets or sets VerticalAlignment to Schedule Header Text.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleHelper">
            <summary>
            Represents a helper for handling recurrence appointments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleHelper.GetRecurrenceDateTimeCollection(System.String,System.DateTime)">
            <summary>
            Method to get recurrence appointment's date-time collection.
            </summary>
            <param name="RRule">RRule of Recurrence appointment's.</param>
            <param name="RecStartDate">RangeStartDate of ScheduleAppointment's RecurrenceProperites.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleHelper.RRuleGenerator(Syncfusion.UI.Xaml.Schedule.RecurrenceProperties,System.DateTime,System.DateTime)">
            <summary>
            Method to generate RRule for recurrence appointment's.
            </summary>
            <param name="RecProp">RecurrenceProperties for an appointment.</param>
            <param name="AppStartTime">Starttime of recurrence appointment</param>
            <param name="AppEndTime">Endtime of recurrence appointment</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleHelper.RRuleParser(System.String,System.DateTime)">
            <summary>
            Method to get the RecurrenceProperties of recurrence appointment's.
            </summary>
            <param name="RRule">RRule of Recurrence appointment's.</param>
            <param name="RecStartDate">RangeStartDate of ScheduleAppointment's RecurrenceProperites.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleHelper.ConvertToNativeTime(System.DateTime)">
            <summary>
             Convert the System.DateTime to native iOS NSDate,native Android JavaCalendar,native UWP DateTime
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleHelper.ConvertToDateTime(System.DateTime)">
            <summary>
            Convert Native Date to Forms DateTime
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleSelectionStyle">
            <summary>
            Represents the cell selection Customization in schedule.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleSelectionStyle.View">
            <summary>
            Gets or sets the custom view for Schedule cell selection.
            </summary>
            
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleSelectionStyle.Background">
            <summary>
            Gets or sets the Background for Schedule cell selection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleSelectionStyle.BorderBrush">
            <summary>
            Gets or sets the BorderBrush for Schedule cell selection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleSelectionStyle.BorderThickness">
            <summary>
            Gets or sets the BorderThickness for Schedule cell selection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleSelectionStyle.BorderCornerRadius">
            <summary>
            Gets or sets the BorderCornerRadius for Schedule cell selection.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.AllDayAppointmentItemscontrol">
            <summary>
            Represents an items control for arranging all day appointment collection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.AllDayAppointmentItemscontrol.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.AllDayAppointmentItemscontrol">AllDayAppointmentItemscontrol</see> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.AllDayAppointmentItemscontrol.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.AllDayAppointmentItemscontrol.AppointmentTemplate">
            <summary>
            Gets or sets the template for schedule appointment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.AllDayAppointmentItemscontrol.AppointmentTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for AppointmentTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.AllDayAppointmentItemscontrol.ChildCollection">
            <summary>
            Gets or sets the list of schedule appointment.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointment"></seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.AllDayAppointmentItemscontrol.ChildCollectionProperty">
            <summary>
            Using a DependencyProperty as the backing store for ChildCollection.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.AllDayAppointmentItemscontrol.DayViewVerticalLineStrokeProperty">
            <summary>
            Using a DependencyProperty as the backing store for DayViewVerticalLineStroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.AllDayAppointmentItemscontrol.Dispose">
            <summary>
            Method to release allocated resources of Schedule.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.CollapsedScheduleAppointment">
            <summary>
            Represents a schedule appointment which is collapsed.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.DayViewHandler">
            <summary>
            Helper Class for DayView Elements.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.DayViewHandler.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.DayViewHeaderStyle">
            <summary>
            Gets or sets the day view header style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.CurrentScheduleType">
            <summary>
            Gets or sets the Schedule type of current view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.DayViewHandler.CurrentScheduleTypeProperty">
            <summary>
            Using a DependencyProperty as the backing store for CurrentScheduleType.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.SelectedDates">
            <summary>
            Gets or sets the collection of selected dates in day view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.DayViewHandler.SelectedDatesProperty">
            <summary>
            Using a DependencyProperty as the backing store for SelectedDates.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.DayViewHeader">
            <summary>
            Gets or sets the day view Header.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.TimelineItems">
            <summary>
            Gets or sets the TimelineItems to ScheduleTimeLineItemsControl.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.TimelineLabels">
            <summary>
            Gets or sets the TimelineLabels to ScheduleTimeLineItemsControl.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.Height">
            <summary>
            Gets or sets the Height to ScheduleDayView Childrens.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.IntervalHeight">
            <summary>
            Gets or sets the interval height of horizontal time slot.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.DayViewHandler.IntervalHeightProperty">
            <summary>
            Using a DependencyProperty as the backing store for IntervalHeight.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.HorizontalTimeSlots">
            <summary>
            Gets or sets the items to horizontal time slot.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.VerticalTimeSlots">
            <summary>
            Gets or sets the items to vertical time slot.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.TimeInterval">
            <summary>
            Gets or sets the time interval of horizontal time slot.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.DayViewHandler.TimeIntervalProperty">
            <summary>
            Using a DependencyProperty as the backing store for TimeInterval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.MajorTickStrokeDashArray">
            <summary>
            Gets or sets the collection of double values that indicates the pattern of dashes and gaps for major tick lines.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.DayViewHandler.MajorTickStrokeDashArrayProperty">
            <summary>
            Using a DependencyProperty as the backing store for MajorTickStrokeDashArray.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.MinorTickStrokeDashArray">
            <summary>
            Gets or sets the collection of double values that indicates the pattern of dashes and gaps for minor tick lines.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.DayViewHandler.MinorTickStrokeDashArrayProperty">
            <summary>
            Using a DependencyProperty as the backing store for MinorTickStrokeDashArray.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.NonAccessibleBlocks">
            <summary>
            Gets or sets the non accessible blocks in schedule.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.NonworkingDaysItems">
            <summary>
            Gets or sets the items to NonworkingDaysItems contol.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.IsHighLightWorkingHours">
            <summary>
            Gets or sets a value indicating whether the working hours should be highlighted.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.NonWorkingDateCollection">
            <summary>
            Gets or sets the items to NonWorkingDateCollection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.VisibleAppointments">
            <summary>
            Gets or sets the collection of visible appointments in day view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.DayViewHandler.VisibleAppointmentsProperty">
            <summary>
            Using a DependencyProperty as the backing store for VisibleAppointments.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.AllDaysAppointmentItems">
            <summary>
            Gets or sets the items to AllDaysAppointmentItems.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.DayViewHandler.DayAppointmentCollection">
            <summary>
            Gets or sets the schedule days appointments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DayViewHandler.GenerateDayHeaderItems">
            <summary>
            Method to generate the items to schedule day view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DayViewHandler.UpdateTimeSlotHeight">
            <summary>
            Method to update the TimeSlot Height.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DayViewHandler.UpdateHorizontalTimeSlots">
            <summary>
            Method to update the HorizontalTimeSlots.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DayViewHandler.GenerateHorizontalTimeSlots(System.Double)">
            <summary>
            Method to Generate the HorizontalTimeSlots items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DayViewHandler.GenerateVerticalTimeSlot(System.Int32)">
            <summary>
            Method to Generate the Vertical TimeSlots items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DayViewHandler.GenerateTimeLineHours">
            <summary>
            Method to Generate the TimeLine Hours.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DayViewHandler.GenerateAllDayItems(Syncfusion.UI.Xaml.Schedule.AllDayAppointmentItemscontrol)">
            <summary>
            Method to Generate the all day items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DayViewHandler.GenerateNonworkingDaysItems">
            <summary>
            Method to Generate the NonWorkingdaysItems.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DayViewHandler.SetupAppointments">
            <summary>
            Method to Generate the appointments to day view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DayViewHandler.SetNonAccessibleBlocks">
            <summary>
            Method to Set NonAccessibleBlocks in day view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DayViewHandler.UpdateDayAppointmentBasedOnTimeSpan(Windows.UI.Xaml.Controls.ScrollViewer)">
            <summary>
            Method to update appointment collection on scrolling.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DayViewHandler.FindStartspan(System.Double)">
            <summary>
            Method to find start timespan value on scrolling.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DayViewHandler.FindEndspan(System.Double)">
            <summary>
            Method to find end timespan value on scrolling.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DayViewHandler.FindExactEndspan(System.Double)">
            <summary>
            Method to find exact end timespan value on scrolling.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DayViewHandler.ClearAllDaysAppointments">
            <summary>
            Method to clear allday appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DayViewHandler.ClearAppointments">
            <summary>
            Method to clear days appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DayViewHandler.Dispose">
            <summary>
            Method to release allocated resources of handler.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.DayViewItemHeader">
            <summary>
            Represent a day view item header.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.DayViewItemHeader.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.DayViewItemHeader">DayViewItemHeader</see>
            class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ResourceHeaderItemsControl">
            <summary>
            Represents an items control for arranging resource headers.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ResourceHeaderItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ResourceHeaderItemsControl">ResourceHeaderItemsControl</see>
            class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleAllDaysAppointmentItemsControl">
            <summary>
            Represents an items control for arranging all day appointments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleAllDaysAppointmentItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleAllDaysAppointmentItemsControl">ScheduleAllDaysAppointmentItemsControl</see>
            class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleAllDaysAppointmentLayoutPanel">
            <summary>
            Represents a layout panel for arranging all day appointments.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentLayoutItemsControl">
            <summary>
            Represents a layout items control for arranging appointments in day view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentLayoutItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentLayoutItemsControl">ScheduleDaysAppointmentLayoutItemsControl</see>
            class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentLayoutItemsControl.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentLayoutItemsControl.AppointmentTemplate">
            <summary>
            Gets or sets the template for customizing day view appointment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentLayoutItemsControl.AppointmentTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for AppointmentTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentLayoutPanel">
            <summary>
            Represents a layout panel for arranging appointments in day view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentLayoutPanel.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentLayoutPanel">ScheduleDaysAppointmentLayoutPanel</see>
            class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentLayoutPanel.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentLayoutPanel.MeasureOverride(Windows.Foundation.Size)">
            <summary>
            Provides the behavior for the "measure" pass of Silverlight layout. Classes can override this method to define their own measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of child object allotted sizes.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentLayoutPanel.ArrangeOverride(Windows.Foundation.Size)">
            <summary>
            Provides the behavior for the "arrange" pass of Silverlight layout. Classes can override this method to define their own arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentLayoutPanel.ArrangeChildItems(Windows.Foundation.Size,System.Double,System.Double,System.Double,System.Double,System.Collections.ObjectModel.ObservableCollection{System.DateTime},System.Collections.Generic.List{Syncfusion.UI.Xaml.Schedule.ScheduleAppointment}[],System.String,System.Collections.Generic.List{System.Collections.ObjectModel.ObservableCollection{Syncfusion.UI.Xaml.Schedule.Resource}})">
            <summary>
            Arrangement of appointment UI collection.
            </summary>
            <param name="finalSize"></param>
            <param name="hourHeight"></param>
            <param name="intervalHeight"></param>
            <param name="interval"></param>
            <param name="colWidth"></param>
            <param name="selecteddates"></param>
            <param name="appcollection"></param>
            <param name="resourcetype"></param>
            <param name="levelrescoll"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.AppointmentPositionInfo">
            <summary>
            Represents a information regarding appointment's position.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentViewControl">
            <summary>
            Represents a day view appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentViewControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentViewControl">ScheduleDaysAppointmentViewControl</see>
            class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentViewControl.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentViewControl.AppointmentTemplate">
            <summary>
            Gets or sets the template for customizing appointment in day view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentViewControl.AppointmentTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for AppointmentTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentViewControl.CustomTemplateDataContext">
            <summary>
            Gets or sets the data context for custom appointment in day view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentViewControl.CustomTemplateDataContextProperty">
            <summary>
            Using a DependencyProperty as the backing store for CustomTemplateDataContext.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDaysAppointmentViewControl.Dispose">
            <summary>
            Method to release allocated resources of ScheduleDaysAppointmentViewControl.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewControl">
            <summary>
            Represents a header in day view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewControl">ScheduleDaysHeaderViewControl</see>
            class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewControl.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewControl.Format">
            <summary>
            Gets or Sets header date format in the day view , which can be used to modify the header date format.
            </summary>s
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewControl.DayText">
            <summary>
            Gets or Sets the header text in the day view.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewControl.TextForeground">
            <summary>
            Gets or Sets the foreground of header text in the day view.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewControl.DateTime">
            <summary>
            Gets or sets the header date in the day view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewControl.DateTimeProperty">
            <summary>
            Using a DependencyProperty as the backing store for DateTime.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewControl.IsCurrentDate">
            <summary>
            Gets or sets a value indicating whether the header date will be current date.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewControl.IsCurrentDateProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsCurrentDate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewControl.DayViewVerticalLineStroke">
            <summary>
            Gets or Sets brush to day view vertical line.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewControl.DayViewVerticalLineStrokeProperty">
            <summary>
            Using a DependencyProperty as the backing store for DayViewVerticalLineStroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewControl.Dispose">
            <summary>
            Method to release allocated resources of ScheduleDaysHeaderViewControl.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewItemsControl">
            <summary>
            Represents an items control for arranging day view headers.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewItemsControl">ScheduleDaysHeaderViewItemsControl</see>
            class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewItemsControl.prevsize">
            <summary>
            Gets and Sets previous ScheduleDaysHeaderViewItemsControl size.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewLayoutPanel">
            <summary>
            Represents a layout panel for arranging day view headers.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewLayoutPanel.maxElementWidth">
            <summary>
            Gets and Sets the maximum width for an element to check the header auto format when resizing.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDaysHeaderViewLayoutPanel.Dispose">
            <summary>
            Method to release allocated resources of ScheduleDaysHeaderViewLayoutPanel.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView">
            <summary>
            Represents a schedule's day view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.#ctor(Syncfusion.UI.Xaml.Schedule.SfSchedule)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView">ScheduleDaysView</see>
            class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.VisibleAppointments">
            <summary>
            Gets or sets the collection of visible appointments in day view.
            </summary>
            <seealso
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentCollection">ScheduleAppointmentCollection</seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.VisibleAppointmentsProperty">
            <summary>
            Using a DependencyProperty as the backing store for VisibleAppointments.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.SelectedDates">
            <summary>
            Gets or sets the selected dates of day view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.SelectedDatesProperty">
            <summary>
            Using a DependencyProperty as the backing store for SelectedDates.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.CellSelectionBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for MonthViewLineStroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.MinorTickVisibility">
            <summary>
            Gets the visibility of minor ticks which represents minute in time slot.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.MinorTickVisibilityProperty">
            <summary>
            Using a DependencyProperty as the backing store for MinorTickVisibility.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.MajorTickVisibility">
            <summary>
            Gets the visibility of major ticks which represent hour in time slot.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.MajorTickVisibilityProperty">
            <summary>
            Using a DependencyProperty as the backing store for MajorTickVisibility.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.IntervalHeight">
            <summary>
            Gets the height of interval in day view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.IntervalHeightProperty">
            <summary>
            Using a DependencyProperty as the backing store for IntervalHeight.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.TimeMode">
            <summary>
            Gets the time mode of day view which may be 12 hrs or 24 hrs.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.TimeModeProperty">
            <summary>
            Using a DependencyProperty as the backing store for TimeMode.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.TimeInterval">
            <summary>
            Gets the time interval of day view which may differs based on schedule's enum "TimeInterval".
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.TimeInterval"></seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.TimeIntervalProperty">
            <summary>
            Using a DependencyProperty as the backing store for TimeInterval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.CurrentScheduleType">
            <summary>
            Gets the schedule type of current view. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.CurrentScheduleTypeProperty">
            <summary>
            Using a DependencyProperty as the backing store for CurrentScheduleType.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.AllDayAppointmentPanelBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for MonthViewLineStroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.DayViewHeaderStyle">
            <summary>
            Gets or sets the day view header style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.DayViewHeader">
            <summary>
            Gets or sets the day view Header.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.DayViewVerticalLineStrokeProperty">
            <summary>
            Using a DependencyProperty as the backing store for DayViewVerticalLineStroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.UpdateTimeSlotsAndTimeLines">
            <summary>
            Method to Generate the HorizontalTimeSlots and Timeline items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView.Dispose">
            <summary>
            Method to release allocated resources of ScheduleDayView.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleDayViewHeaderStyle">
            <summary>
            Represents the schedule's Day view Header Style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDayViewHeaderStyle.DayViewHeaderBackground">
            <summary>
            Gets or sets the background for Day view header.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDayViewHeaderStyle.DayViewHeaderHeight">
            <summary>
            Gets or sets the Dayview header height.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDayViewHeaderStyle.DayViewHeaderTextFontStyle">
            <summary>
            Gets or sets the fontweight Dayview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDayViewHeaderStyle.DayViewHeaderFontWeight">
            <summary>
            Gets or sets the fontweight Dayview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDayViewHeaderStyle.DayViewHeaderFontFamily">
            <summary>
            Gets or sets the FontFamily for day view header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDayViewHeaderStyle.DayViewHeaderTextSize">
            <summary>
            Gets or sets the font size for Dayview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDayViewHeaderStyle.DayViewHeaderTextColor">
            <summary>
            Gets or sets the foreground for Dayview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDayViewHeaderStyle.DayViewHeaderTextHorizontalAlignment">
            <summary>
            Gets or sets the HorizontalAlignment for Dayview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDayViewHeaderStyle.DayViewHeaderTextVerticalAlignment">
            <summary>
            Gets or sets the VerticalAlignment for Dayview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDayViewHeaderStyle.DayViewCurrentDateBackground">
            <summary>
            Gets or sets the Background for Dayview header CurrentDate.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleDayViewHeaderStyle.DayViewCurrentDateForeground">
            <summary>
            Gets or sets the Foreground for Dayview header CurrentDate.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeSlotItemsControl">
            <summary>
            Represents an items control for arranging items in day view's horizontal time slot.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeSlotItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeSlotItemsControl">ScheduleHorizontalTimeSlotItemsControl</see>
            class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeSlotItemsControl.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeSlotItemsControl.Dispose">
            <summary>
            Method to release allocated resources of ScheduleHorizontalTimeSlotItemsControl.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleNonworkingDayItemsControl">
            <summary>
            Represents an items control for arranging non working days in day view.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleNonworkingDayPanel">
            <summary>
            Represents a panel for arranging non working days in day view.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineItemsControl">
            <summary>
            Represents an items control for arranging time lines.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineItemsControl">ScheduleTimeLineItemsControl</see>
            class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineItemsControl.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineItemsControl.TimelineItems">
            <summary>
            Gets or sets the TimelineItems to ScheduleTimeLineItemsControl.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineItemsControl.TimelineLabels">
            <summary>
            Gets or sets the TimelineLabels to ScheduleTimeLineItemsControl.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleVerticalTimeSlotItemsControl">
            <summary>
            Represents an items control for arranging items in day view's vertical time slot.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleVerticalTimeSlotItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleVerticalTimeSlotItemsControl">ScheduleVerticalTimeSlotItemsControl</see>
            class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.MonthCellStyle">
            <summary>
            Represents the schedule's month cell Style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellStyle.MonthCellTextSize">
            <summary>
            Gets or sets the font size for month cell text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellStyle.MonthCellTextFontWeight">
            <summary>
            Gets or sets the fontweight for month cell text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellStyle.MonthCellTextFontFamily">
            <summary>
            Gets or sets the FontFamily for month cell text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellStyle.CellTextHorizontalAlignment">
            <summary>
            Gets or sets the HorizontalAlignment for month cell text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellStyle.CellTextVerticalAlignment">
            <summary>
            Gets or sets the VerticalAlignment for month cell text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellStyle.PreviousMonthCellBackground">
            <summary>
            Gets or sets the background for Previous MonthCell Background.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellStyle.CurrentMonthCellBackground">
            <summary>
            Gets or sets the background for Current MonthCell Background.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellStyle.NextMonthCellBackground">
            <summary>
            Gets or sets the background for Next MonthCell Background.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellStyle.PreviousMonthTextForeground">
            <summary>
            Gets or sets the foreground for PreviousMonth TextForeground.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellStyle.CurrentMonthTextForeground">
            <summary>
            Gets or sets the foreground for CurrentMonth TextForeground.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellStyle.NextMonthTextForeground">
            <summary>
            Gets or sets the foreground for Next MonthText Foreground.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellStyle.CurrentDateTextForeground">
            <summary>
            Gets or sets the foreground for CurrentDate TextForeground.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellStyle.CurrentDateCellBackground">
            <summary>
            Gets or sets the Background for CurrentDate Cell Background.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthCellStyle.CurrentDateHighlight">
            <summary>
            Gets or sets the Color to Current Date.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthChildItemControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.MonthChildItemControl">MonthChildItemControl</see>
            class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.MonthChildItems">
            <summary>
            Represents a  MonthChildItems.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthChildItems.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.MonthChildItems">MonthChildItems</see> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthChildItems.Dates">
            <summary>
            Gets or sets the Dates for schedule month View.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthChildItems.AppointmentCollection">
            <summary>
            Gets or sets the appointment for schedule WeekView appointment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthChildItems.CurrentDateBackground">
            <summary>
            Gets the background for current date in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.MonthChildItems.CurrentDateBackgroundProperty">
            <summary>
            Using a DependencyProperty as the backing store for CurrentDateBackground.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthChildItems.IsCurrentDate">
            <summary>
            Gets or sets a value indicating whether the date in month view will be current date.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.MonthChildItems.IsCurrentDateProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsCurrentDate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthChildItems.IsCurrentMonth">
            <summary>
            Gets or sets a value indicating whether the date will be in current month.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.MonthChildItems.IsCurrentMonthProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsCurrentMonth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.MonthViewHandler">
            <summary>
            Helper Class for MonthView Elements.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.SelectedDates">
            <summary>
            Gets the collection of selected dates in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.SelectedDatesProperty">
            <summary>
            Using a DependencyProperty as the backing store for SelectedDates.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.MonthHeaderDateFormat">
            <summary>
            Gets the DateTime format for header in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.MonthHeaderDateFormatProperty">
            <summary>
            Using a DependencyProperty as the backing store for MonthHeaderDateFormat.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.AutoHeaderFormat">
            <summary>
            Gets the DateTime format for header in Auto view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.AutoHeaderFormatProperty">
            <summary>
            Using a DependencyProperty as the backing store for AutoHeaderFormat.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.WeekNumbersInMonth">
            <summary>
            Gets the Week Numbers in month.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.MonthViewCells">
            <summary>
            Gets the Month view cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.MonthAppointmentsViewCollection">
            <summary>
            Gets the month appointments view control.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.MonthViewHeader">
            <summary>
            Sets the month view header.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.MonthViewHeaderStyle">
            <summary>
            Gets or sets the monthview header style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.FirstDayOfWeek">
            <summary>
            Gets the First day of week.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.WeekNumberStyle_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Updating WeekNumber Style Property Values.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.GenerateChildForDesktop">
            <summary>
            Method to generate the child for desktop.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.GetMonthCell">
            <summary>
            Method to get the month cells for desktop.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.LoadDefaultAppointments">
            <summary>
            Method to load default appointment control for desktop.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.child_SizeChanged(System.Object,Windows.UI.Xaml.SizeChangedEventArgs)">
            <summary>
            SizeChanged Event for ScheduleMonthAppointmentViewControl item.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.ScheduleMonthView_PointerPressed(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            PointerPressed Event for ScheduleMonthAppointmentViewControl item.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.SetAppointmentsForDesktop(System.Collections.ObjectModel.ObservableCollection{Syncfusion.UI.Xaml.Schedule.ScheduleMonthAppointmentViewControl})">
            <summary>
            Method to set the appointments for desktop.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.GenerateChildForPhone">
            <summary>
            Method to generates children for phone.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.SetAppointmentForPhone">
            <summary>
            Method to set the appointments for phone.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.child_Tapped(System.Object,Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
            <summary>
            Tapped event for MonthChildItems.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.GenerateHeaderDays">
            <summary>
            Method to get the Week days in month.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.GenerateMonthViewHeaderStyles">
            <summary>
            Method to set the style to month view header.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.GetWeekNumber">
            <summary>
            Method to get the Week numbers in month.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthViewHandler.Dispose">
            <summary>
            Method to release allocated resources of MonthViewHandler.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.MonthViewItem">
            <summary>
            Represents a month view item.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthViewItem.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.MonthViewItem">MonthViewItem</see> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.MonthViewItem.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthViewItem.Appointments">
            <summary>
            Gets or sets the appointments of date in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.MonthViewItem.AppointmentsProperty">
            <summary>
            Using a DependencyProperty as the backing store for VisibleAppointments.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.MonthViewItem.MonthViewLineStrokeProperty">
            <summary>
            Using a DependencyProperty as the backing store for MonthViewLineStroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthViewItem.WeekNumbersInMonth">
            <summary>
            Gets the Week Numbers in month.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthViewItem.MonthViewCells">
            <summary>
            Gets the Month view cells.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.MonthViewItem.MonthAppointmentsViewCollection">
            <summary>
            Gets the month appointments view collecion.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthViewItem.Dispose">
            <summary>
            Method to release allocated resources of MonthViewItem.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.MonthViewItemHeader">
            <summary>
            Represents a header for month view item.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthViewItemHeader.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.MonthViewItemHeader">MonthViewItemHeader</see>
            class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.MonthViewItemPanel">
            <summary>
            Represents a layout panel for arranging monthview childitems.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.MonthViewItemPanel.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.MonthViewItemPanel">MonthViewItemPanel</see> class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleMonthAppointmentLayoutItemsControl">
            <summary>
            Represents a layout items control for arranging appointments in month view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleMonthAppointmentLayoutItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleMonthAppointmentLayoutItemsControl">ScheduleMonthAppointmentLayoutItemsControl</see>
            class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleMonthAppointmentLayoutPanel">
            <summary>
            Represents a layout panel for arranging month view appointments.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleMonthAppointmentViewControl">
            <summary>
            Represents a appointment in month view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleMonthAppointmentViewControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleMonthAppointmentViewControl">ScheduleMonthAppointmentViewControl</see>
            class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthAppointmentViewControl.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthAppointmentViewControl.AppointmentTemplate">
            <summary>
            Gets or sets the template for customizing month view appointment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthAppointmentViewControl.AppointmentTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for AppointmentTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthAppointmentViewControl.CustomTemplateDataContext">
            <summary>
            Gets or sets the data context for custom appointment in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthAppointmentViewControl.CustomTemplateDataContextProperty">
            <summary>
            Using a DependencyProperty as the backing store for CustomTemplateDataContext.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthAppointmentViewControl.EventCount">
            <summary>
            Gets or sets the count of events in a month view item.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthAppointmentViewControl.EventCountProperty">
            <summary>
            Using a DependencyProperty as the backing store for EventCount.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthAppointmentViewControl.TextForeground">
            <summary>
            Gets or sets the foreground for specifying number of events in a month view item.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthAppointmentViewControl.TextForegroundProperty">
            <summary>
            Using a DependencyProperty as the backing store for TextForeground.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleMonthAppointmentViewControl.Dispose">
            <summary>
            Method to release allocated resources of ScheduleMonthAppointmentViewControl.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl">
            <summary>
            Represents a date in month view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl">ScheduleMonthDateContentControl</see>
            class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.MonthDateFormat">
            <summary>
            Gets or sets the DateTime format for date in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.MonthDateFormatProperty">
            <summary>
            Using a DependencyProperty as the backing store for MonthDateFormat.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.Date">
            <summary>
            Gets or sets the date for date in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.DateProperty">
            <summary>
            Using a DependencyProperty as the backing store for Date.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.DateText">
            <summary>
            Gets or sets the date as text for date in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.DateTextProperty">
            <summary>
            Using a DependencyProperty as the backing store for DateText.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.ScheduleBackground">
            <summary>
            Gets or sets the background for date in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.ScheduleBackgroundProperty">
            <summary>
            Using a DependencyProperty as the backing store for ScheduleBackground.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.MonthViewLineStrokeProperty">
            <summary>
            Using a DependencyProperty as the backing store for MonthViewLineStroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.StrokeLine">
            <summary>
            Gets or sets the border color of date in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.StrokeLineProperty">
            <summary>
            Using a DependencyProperty as the backing store for StrokeLine.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.StrokeThickness">
            <summary>
            Gets or sets the border thickness of date in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.StrokeThicknessProperty">
            <summary>
            Using a DependencyProperty as the backing store for StrokeThickness.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.IsCurrentDate">
            <summary>
            Gets or sets a value indicating whether the date in month view will be current date.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.IsCurrentDateProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsCurrentDate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.IsCurrentMonth">
            <summary>
            Gets or sets a value indicating whether the date will be in current month.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.IsCurrentMonthProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsCurrentMonth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleMonthDateContentControl.Dispose">
            <summary>
            Method to release allocated resources of ScheduleMonthDateContentControl.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleMonthView">
            <summary>
            Represents the schedule's month view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleMonthView.#ctor(Syncfusion.UI.Xaml.Schedule.SfSchedule)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleMonthView">ScheduleMonthView</see>
            class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthView.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthView.SelectedDates">
            <summary>
            Gets the collection of selected dates in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthView.SelectedDatesProperty">
            <summary>
            Using a DependencyProperty as the backing store for SelectedDates.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthView.AppointmentTemplate">
            <summary>
            Gets or sets the template for customizing month view appointment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthView.AppointmentTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for AppointmentTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthView.VisibleAppointments">
            <summary>
            Gets or sets the collection of appointments that are visible in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthView.VisibleAppointmentsProperty">
            <summary>
            Using a DependencyProperty as the backing store for VisibleAppointments.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthView.CellSelectionBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for MonthViewLineStroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthView.MonthViewLineStrokeProperty">
            <summary>
            Using a DependencyProperty as the backing store for MonthViewLineStroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthView.ExpandingControlIndex">
            <summary>
            Sets the ExpandingControlIndex to WindowsPhone while tap.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthView.MonthViewCells">
            <summary>
            Sets the MonthViewCells to WindowsPhone.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthView.WeekNumbersInMonth">
            <summary>
            Gets the Week Numbers in month.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthView.MonthViewHeader">
            <summary>
            Sets the month view header.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthView.MonthViewHeaderStyle">
            <summary>
            Gets or sets the monthview header style.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleMonthView.GenerateChildItems">
            <summary>
            Method to Generate Child Items for Desktop.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleMonthView.Dispose">
            <summary>
            Method to release allocated resources of ScheduleMonthView.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderControl">
            <summary>
            Represents a month view header.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderControl">ScheduleMonthViewHeaderControl</see>
            class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderControl.DayText">
            <summary>
            Gets or sets the month view header.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderControl.DayTextProperty">
            <summary>
            Using a DependencyProperty as the backing store for DayText.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderControl.DayOfWeek">
            <summary>
            Gets or sets the day of week header in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderControl.DayOfWeekProperty">
            <summary>
            Using a DependencyProperty as the backing store for DayOfWeek.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderItemsControl">
            <summary>
            Represents an items control for arranging month view headers.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderItemsControl">ScheduleMonthViewHeaderItemsControl</see>
            class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderItemsLayoutPanel">
            <summary>
            Represents a layout panel for arranging month view headers.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderStyle">
            <summary>
            Represents the schedule's monthview header Style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderStyle.MonthViewHeaderBackground">
            <summary>
            Gets or sets the background for month view header.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderStyle.MonthViewHeaderHeight">
            <summary>
            Gets or sets the monthview header height.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderStyle.MonthViewHeaderTextStyle">
            <summary>
            Gets or sets the fontweight monthview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderStyle.MonthViewHeaderTextSize">
            <summary>
            Gets or sets the font size for monthview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderStyle.MonthViewHeaderTextColor">
            <summary>
            Gets or sets the foreground for monthview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderStyle.MonthViewHeaderTextHorizontalAlignment">
            <summary>
            Gets or sets the HorizontalAlignment for monthview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderStyle.MonthViewHeaderTextVerticalAlignment">
            <summary>
            Gets or sets the VerticalAlignment for monthview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewHeaderStyle.MonthViewHeaderTextMargin">
            <summary>
            Gets or sets the Margin for monthview header text.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewItemsControl">
            <summary>
            Represents an items control for arranging month view items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewItemsControl">ScheduleMonthViewItemsControl</see>
            class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewItemsControl.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleMonthViewItemsControl.Dispose">
            <summary>
            Method to release allocated resources of ScheduleMonthViewItemsControl.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleRectangleBorder">
            <summary>
            Represents a border for date in month view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleRectangleBorder.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleRectangleBorder">ScheduleRectangleBorder</see>
            class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleRectangleBorder.LeftBrush">
            <summary>
            Gets or sets the color of left border for date in month view
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleRectangleBorder.LeftBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for LeftBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleRectangleBorder.RightBrush">
            <summary>
            Gets or sets the color of right border for date in month view
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleRectangleBorder.RightBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for RightBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleRectangleBorder.TopBrush">
            <summary>
            Gets or sets the color of top border for date in month view
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleRectangleBorder.TopBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for TopBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleRectangleBorder.BottomBrush">
            <summary>
            Gets or sets the color of bottom border for date in month view
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleRectangleBorder.BottomBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for BottomBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.WeekNumberInMonth.WeekNumber">
            <summary>
            Gets or sets the WeekNumber in month.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.WeekNumberInMonth.WeekNumberProperty">
            <summary>
            Using a DependencyProperty as the backing store for DayText.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.WeekNumberStyle">
            <summary>
            Represents the week number style Customization in month view.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.WeekNumberStyle.FontSize">
            <summary>
            Gets or sets the font size for Week Number.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.WeekNumberStyle.FontFamily">
            <summary>
            Gets or sets the FontFamily for Week Number.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.WeekNumberStyle.FontWeight">
            <summary>
            Gets or sets the FontWeight for Week Number.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.WeekNumberStyle.Background">
            <summary>
            Gets or sets the Background for Week Number.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.WeekNumberStyle.Foreground">
            <summary>
            Gets or sets the Foreground for Week Number.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalAppointmentLayoutItemsControl">
            <summary>
            Represents a layout items control for arranging appointments in timeline view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalAppointmentLayoutItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalAppointmentLayoutItemsControl">ScheduleHorizontalAppointmentLayoutItemsControl</see>
            class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalAppointmentLayoutPanel">
            <summary>
            Represents a layout panel for arranging timeline view appointments.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalAppointmentViewControl">
            <summary>
            Represents a timeline view appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalAppointmentViewControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalAppointmentViewControl">ScheduleHorizontalAppointmentViewControl</see>
            class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalAppointmentViewControl.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalAppointmentViewControl.Dispose">
            <summary>
            Method to release allocated resources of ScheduleHorizontalAppointmentViewControl.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalDaysHeaderViewControl">
            <summary>
            Represents a timeline view header.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalDaysHeaderViewControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalDaysHeaderViewControl">ScheduleHorizontalDaysHeaderViewControl</see>
            class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalDaysHeaderViewControl.TextForeground">
            <summary>
            Gets or sets the text color for timeline view header.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalDaysHeaderViewControl.TextForegroundProperty">
            <summary>
            Using a DependencyProperty as the backing store for TextForeground.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalDaysHeaderViewControl.HeaderBrush">
            <summary>
            Gets or sets the background color for timeline view header.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalDaysHeaderViewControl.HeaderBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for HeaderBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalDaysHeaderViewItemsControl">
            <summary>
            Represents an items control for arranging timeline view headers.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalDaysHeaderViewItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalDaysHeaderViewItemsControl">ScheduleHorizontalDaysHeaderViewItemsControl</see> class. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineHourControl.MinValue">
            <summary>
            Minimum value of <see cref="P:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineHourControl.Hour"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineHourControl.MaxValue">
            <summary>
            Maximum value of <see cref="P:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineHourControl.Hour"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineHourControl.Hour">
            <summary>
            Gets or sets the hour of day.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineHourControl.HourProperty">
            <summary>
            The identifier for the <see cref="!:TimelineHour.Hour"/> dependency property. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineHourControl.IsAmPmTimeMode">
            <summary>
            Gets or sets a value indicating whether hour is showed in 24 hours or AM/PM time format.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineHourControl.IsAmPmTimeModeProperty">
            <summary>
            The identifier for the <see cref="!:TimelineHour.IsAmPmTimeMode"/> dependency property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineHourControl.LinesStrokeProperty">
            <summary>
            The identifier for the <see cref="!:TimeLineHourControl.LinesStroke"/> dependency property. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineHourControl.LinesStroke">
            <summary>
            Gets or sets the lines' stroke.
            </summary>
            <value>The lines stroke.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineHourControl.HourStrokeProperty">
            <summary>
            The identifier for the <see cref="!:TimeLineHourControl.HourStroke"/> dependency property. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineHourControl.HourStroke">
            <summary>
            Gets or sets the Hour' stroke.
            </summary>
            <value>The Hour stroke.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineHourControl.TimeInterval">
            <summary>
            Gets or sets TimeInterval.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineHourControl.TimeIntervalProperty">
            <summary>
            The identifier for the <see cref="!:TimelineHour.TimeInterval"/> dependency property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineHourControl.TimelineVisibilityProperty">
            <summary>
            Gets / Sets the ScheduleTimelineVisibility.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineHourControl.TimelineHourDivisionVisibility">
            <summary>
            Gets / Sets the ScheduleTimelineHourDivisionVisibility.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineItemsControl">
            <summary>
            Represents an items control for arranging items in timeline view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineItemsControl">ScheduleHorizontalTimeLineItemsControl</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineItemsControl.TimelineItems">
            <summary>
            Gets or sets the TimelineItems to ScheduleTimeLineItemsControl.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleHorizontalTimeLineItemsControl.TimelineLabels">
            <summary>
            Gets or sets the TimelineLabels to ScheduleTimeLineItemsControl.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineNonworkingDayPanel">
            <summary>
            Represents a panel for arranging non working days in timeline view.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleTimelineTimeSlotItemsControl">
            <summary>
            Represents an items control for arranging items in time slot of timeline view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleTimelineTimeSlotItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleTimelineTimeSlotItemsControl">ScheduleTimelineTimeSlotItemsControl</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimelineTimeSlotItemsControl.MajorTickStroke">
            <summary>
            Gets the stroke color for major ticks that represent hour in time slot.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleTimelineTimeSlotItemsControl.MajorTickStrokeProperty">
            <summary>
            Using a DependencyProperty as the backing store for MajorTickStroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView">
            <summary>
            Represents a schedule's timeline view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.#ctor(Syncfusion.UI.Xaml.Schedule.SfSchedule)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView">ScheduleTimeLineView</see> class. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.AppointmentTemplate">
            <summary>
            Gets or sets the template for customizing appointment in timeline view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.AppointmentTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for AppointmentTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.VisibleAppointments">
            <summary>
            Gets or sets the appointments that are visible in timeline view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.VisibleAppointmentsProperty">
            <summary>
            Using a DependencyProperty as the backing store for VisibleAppointments.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.SelectedDates">
            <summary>
            Gets or sets the selected dates in timeline view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.SelectedDatesProperty">
            <summary>
            Using a DependencyProperty as the backing store for SelectedDates.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.CellSelectionBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for MonthViewLineStroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.MinorTickVisibility">
            <summary>
            Gets the visibility of minor ticks that represent minute in time slot.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.MinorTickVisibilityProperty">
            <summary>
            Using a DependencyProperty as the backing store for MinorTickVisibility.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.MajorTickVisibility">
            <summary>
            Gets the visibility of major ticks that represent hour in time slot.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.MajorTickVisibilityProperty">
            <summary>
            Using a DependencyProperty as the backing store for MajorTickVisibility.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.IntervalHeight">
            <summary>
            Gets the height of the interval in timeline view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.IntervalHeightProperty">
            <summary>
            Using a DependencyProperty as the backing store for IntervalHeight.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.TimeMode">
            <summary>
            Gets the time mode of the timeline view.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.TimeModes"></seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.TimeModeProperty">
            <summary>
            Using a DependencyProperty as the backing store for TimeMode.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.TimeInterval">
            <summary>
            Gets the time interval of timeline view.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.TimeInterval"></seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.TimeIntervalProperty">
            <summary>
            Using a DependencyProperty as the backing store for TimeInterval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.CurrentScheduleType">
            <summary>
            Gets the schedule type of current view.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleType"></seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.CurrentScheduleTypeProperty">
            <summary>
            Using a DependencyProperty as the backing store for CurrentScheduleType.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.TimeLineViewHeaderStyle">
            <summary>
            Gets or sets the TimeLine view header style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.NonworkingDaysItems">
            <summary>
            Gets or sets the items to NonworkingDaysItems contol.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.HorizontalTimeSlots">
            <summary>
            Gets or sets the items to horizontal time slot.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.TimeLineAppointmentCollection">
            <summary>
            Gets or sets the schedule TimeLine appointments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.TimeLineViewHeaderItems">
            <summary>
            Gets or sets the TimeLine view Header Items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.UpdateTimeSlotsAndTimeLines">
            <summary>
            Method to Generate the HorizontalTimeSlots and Timeline items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.UpdateCurrentTimeIndicatorVisibility">
            <summary>
            Method to Update CurrentTimeIndicator Visibility.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineView.Dispose">
            <summary>
            Define a method to release allocated resources of ScheduleTimeLineView.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineViewHeaderStyle">
            <summary>
            Represents the schedule's TimeLine view Heade Style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineViewHeaderStyle.TimeLineViewHeaderBackground">
            <summary>
            Gets or sets the background for TimeLine view header.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineViewHeaderStyle.TimeLineViewHeaderHeight">
            <summary>
            Gets or sets the TimeLineview header height.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineViewHeaderStyle.TimeLineViewHeaderTextFontStyle">
            <summary>
            Gets or sets the fontweight TimeLineview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineViewHeaderStyle.TimeLineViewHeaderFontWeight">
            <summary>
            Gets or sets the fontweight TimeLineview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineViewHeaderStyle.TimeLineViewHeaderFontFamily">
            <summary>
            Gets or sets the FontFamily for TimeLine view header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineViewHeaderStyle.TimeLineViewHeaderTextSize">
            <summary>
            Gets or sets the font size for TimeLineview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineViewHeaderStyle.TimeLineViewHeaderTextColor">
            <summary>
            Gets or sets the foreground for TimeLineview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineViewHeaderStyle.TimeLineViewHeaderTextHorizontalAlignment">
            <summary>
            Gets or sets the HorizontalAlignment for TimeLineview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineViewHeaderStyle.TimeLineViewHeaderTextVerticalAlignment">
            <summary>
            Gets or sets the VerticalAlignment for TimeLineview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineViewHeaderStyle.TimeLineViewCurrentDateBackground">
            <summary>
            Gets or sets the Background for TimeLineview header CurrentDate.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleTimeLineViewHeaderStyle.TimeLineViewCurrentDateForeground">
            <summary>
            Gets or sets the Foreground for TimeLineview header CurrentDate.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler">
            <summary>
            Helper Class for TimeLineView Elements.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.NonworkingDaysItems">
            <summary>
            Gets or sets the items to NonworkingDaysItems contol.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.NonAccessibleBlocks">
            <summary>
            Gets or sets the non accessible blocks in schedule.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.MajorTickStrokeDashArray">
            <summary>
            Gets or sets the collection of double values that indicates the pattern of dashes and gaps for major tick lines.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.MajorTickStrokeDashArrayProperty">
            <summary>
            Using a DependencyProperty as the backing store for MajorTickStrokeDashArray.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.MinorTickStrokeDashArray">
            <summary>
            Gets or sets the collection of double values that indicates the pattern of dashes and gaps for minor tick lines.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.MinorTickStrokeDashArrayProperty">
            <summary>
            Using a DependencyProperty as the backing store for MinorTickStrokeDashArray.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.SelectedDates">
            <summary>
            Gets or sets the selected dates in timeline view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.SelectedDatesProperty">
            <summary>
            Using a DependencyProperty as the backing store for SelectedDates.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.TimeInterval">
            <summary>
            Gets or sets the time interval for timeline view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.TimeIntervalProperty">
            <summary>
            Using a DependencyProperty as the backing store for TimeInterval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.TimeLineViewHeaderItems">
            <summary>
            Gets or sets the TimeLine view Header Items.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.TimelineItems">
            <summary>
            Gets or sets the TimelineItems to ScheduleTimeLineItemsControl.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.TimelineLabels">
            <summary>
            Gets or sets the TimelineLabels to ScheduleTimeLineItemsControl.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.TimeSlotWidth">
            <summary>
            Gets or sets the Width to ScheduleTimeLineView Childrens.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.IntervalHeight">
            <summary>
            Gets or sets the interval height of horizontal time slot.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.IntervalHeightProperty">
            <summary>
            Using a DependencyProperty as the backing store for IntervalHeight.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.HorizontalTimeSlots">
            <summary>
            Gets or sets the items to horizontal time slot.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.TimeLineAppointments">
            <summary>
            Gets the TimeLine appointments view control.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.VisibleAppointments">
            <summary>
            Gets or sets the collection of visible appointments in day view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.VisibleAppointmentsProperty">
            <summary>
            Using a DependencyProperty as the backing store for VisibleAppointments.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.TimeLineViewHeaderStyle">
            <summary>
            Gets or sets the TimeLine view header style.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.GenerateHeaderItems(System.Int32)">
            <summary>
            Method to generate the header items to schedule TimeLine view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.GetCollapsedHour">
            <summary>
            Method to find the CollapsedHour.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.GenerateTimeLineHours">
            <summary>
            Method to Generate the TimeLine Hours.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.UpdateWidth">
            <summary>
            Method to update TimeSlot width.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.UpdateHorzontalTimeSlot">
            <summary>
            Method to Update HorzontalTimeSlots.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.SetNonAccessibleBlocks">
            <summary>
            Method to Set NonAccessibleBlocks in TimeLine view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.GetTimePosition(System.Double,System.Int32)">
            <summary>
            Method to Get TimePosition to Set NonAccessibleBlocks in TimeLine view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.GenerateNonworkingdaysItems">
            <summary>
            Method to Generating Non-Working Days Items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.SetupAppointments">
            <summary>
            Method to Generate Appointments in TimeLine view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.TimeLineViewHandler.Dispose">
            <summary>
            Method to release allocated resources of handler.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.TimeLineViewItemHeader">
            <summary>
            Represents a header in timeline view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.TimeLineViewItemHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Schedule.TimeLineViewItemHeader">TimeLineViewItemHeader</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentViewControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentViewControl">ExpandedAppointmentViewControl</see>
            class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentViewControl.AppointmentTemplate">
            <summary>
            Gets or sets the template for customizing month view appointment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentViewControl.AppointmentTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for AppointmentTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentViewControl.CustomTemplateDataContext">
            <summary>
            Gets or sets the data context for custom appointment in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentViewControl.CustomTemplateDataContextProperty">
            <summary>
            Using a DependencyProperty as the backing store for CustomTemplateDataContext.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentViewControl.EventCount">
            <summary>
            Gets or sets the count of events in a month view item.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentViewControl.EventCountProperty">
            <summary>
            Using a DependencyProperty as the backing store for EventCount.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentViewControl.TextForeground">
            <summary>
            Gets or sets the foreground for specifying number of events in a month view item.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentViewControl.TextForegroundProperty">
            <summary>
            Using a DependencyProperty as the backing store for TextForeground.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentViewControl.TimeFontFamily">
            <summary>
            Gets or sets the FontFamily for ExpandedAppointment header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentViewControl.TimeTextSize">
            <summary>
            Gets or sets the font size for ExpandedAppointment Time text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandedAppointmentViewControl.TimeForeground">
            <summary>
            Gets or sets the foreground for ExpandedAppointment time text.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ExpandingControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ExpandingControl">ExpandingControl</see> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandingControl.AppointmentCollection">
            <summary>
            Gets or sets the appointment for schedule appointment.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Syncfusion.UI.Xaml.Schedule.ExpandingControl.AppointmentCollectionProperty" -->
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandingControl.VisibleAppointments">
            <summary>
            Gets or sets the collection of appointments that are visible in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ExpandingControl.VisibleAppointmentsProperty">
            <summary>
            Using a DependencyProperty as the backing store for VisibleAppointments.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandingControl.AppointmentTemplate">
            <summary>
            Gets or sets the template for customizing month view appointment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ExpandingControl.AppointmentTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for AppointmentTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ExpandingItemControl.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ExpandingItemControl">ExpandingItemControl</see>
            class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ExpandingItemControl.AppointmentTemplate">
            <summary>
            Gets or sets the template for customizing month view appointment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ExpandingItemControl.AppointmentTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for AppointmentTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Syncfusion.UI.Xaml.Schedule.ExpandingItemControl.AppointmentCollectionProperty" -->
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView">
            <summary>
            Represents a schedule's Week view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView">ScheduleWeekView</see>
            class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView.VisibleAppointments">
            <summary>
            Gets or sets the collection of visible appointments in Week view.
            </summary>
            <seealso
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleAppointmentCollection">ScheduleAppointmentCollection</seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView.VisibleAppointmentsProperty">
            <summary>
            Using a DependencyProperty as the backing store for VisibleAppointments.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView.SelectedDates">
            <summary>
            Gets or sets the selected dates of Week view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView.SelectedDatesProperty">
            <summary>
            Using a DependencyProperty as the backing store for SelectedDates.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView.MinorTickVisibility">
            <summary>
            Gets the visibility of minor ticks which represents minute in time slot.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView.MinorTickVisibilityProperty">
            <summary>
            Using a DependencyProperty as the backing store for MinorTickVisibility.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView.MajorTickVisibility">
            <summary>
            Gets the visibility of major ticks which represent hour in time slot.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView.MajorTickVisibilityProperty">
            <summary>
            Using a DependencyProperty as the backing store for MajorTickVisibility.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView.IntervalHeight">
            <summary>
            Gets the height of interval in Week view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView.IntervalHeightProperty">
            <summary>
            Using a DependencyProperty as the backing store for IntervalHeight.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView.TimeMode">
            <summary>
            Gets the time mode of Week view which may be 12 hrs or 24 hrs.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView.TimeModeProperty">
            <summary>
            Using a DependencyProperty as the backing store for TimeMode.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView.TimeInterval">
            <summary>
            Gets the time interval of Week view which may differs based on schedule's enum "TimeInterval".
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Schedule.TimeInterval"></seealso>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView.TimeIntervalProperty">
            <summary>
            Using a DependencyProperty as the backing store for TimeInterval.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView.CurrentScheduleType">
            <summary>
            Gets the schedule type of current view. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView.CurrentScheduleTypeProperty">
            <summary>
            Using a DependencyProperty as the backing store for CurrentScheduleType.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleWeekView.DayViewVerticalLineStrokeProperty">
            <summary>
            Using a DependencyProperty as the backing store for DayViewVerticalLineStroke.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewHeaderStyle">
            <summary>
            Represents the schedule's Week view Header Style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewHeaderStyle.WeekViewHeaderBackground">
            <summary>
            Gets or sets the background for Week view header.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewHeaderStyle.WeekViewHeaderHeight">
            <summary>
            Gets or sets the Weekview header height.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewHeaderStyle.WeekViewHeaderTextFontStyle">
            <summary>
            Gets or sets the fontweight Weekview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewHeaderStyle.WeekViewHeaderFontWeight">
            <summary>
            Gets or sets the fontweight Weekview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewHeaderStyle.WeekViewHeaderFontFamily">
            <summary>
            Gets or sets the FontFamily for Week view header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewHeaderStyle.WeekViewHeaderTextSize">
            <summary>
            Gets or sets the font size for Weekview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewHeaderStyle.WeekViewHeaderTextColor">
            <summary>
            Gets or sets the foreground for Weekview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewHeaderStyle.WeekViewHeaderTextHorizontalAlignment">
            <summary>
            Gets or sets the HorizontalAlignment for Weekview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewHeaderStyle.WeekViewHeaderTextVerticalAlignment">
            <summary>
            Gets or sets the VerticalAlignment for Weekview header text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewHeaderStyle.WeekViewCurrentDateBackground">
            <summary>
            Gets or sets the Background for Weekview header CurrentDate.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewHeaderStyle.WeekViewCurrentDateForeground">
            <summary>
            Gets or sets the Foreground for Weekview header CurrentDate.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewHeaderStyle.WeekViewCurrentDateHeight">
            <summary>
            Gets or sets the Background for WeekView CurrentDate Height.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewItemsControl.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewItemsControl.VisibleAppointments">
            <summary>
            Gets or sets the collection of appointments that are visible in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewItemsControl.VisibleAppointmentsProperty">
            <summary>
            Using a DependencyProperty as the backing store for VisibleAppointments.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewItemsControl.SelectedDates">
            <summary>
            Gets the collection of selected dates in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewItemsControl.SelectedDatesProperty">
            <summary>
            Using a DependencyProperty as the backing store for SelectedDates.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewItemsControl.AppointmentBackground">
            <summary>
            Gets or sets the background for an appointment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewItemsControl.AppointmentBackgroundProperty">
            <summary>
            Using a DependencyProperty as the backing store for AppointmentBackground.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewItemsControl.AppointmentCollection">
            <summary>
            Gets or sets the appointment for schedule WeekView appointment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewItemsControl.CurrentDateBackground">
            <summary>
            Gets the background for current date in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.ScheduleWeekViewItemsControl.CurrentDateBackgroundProperty">
            <summary>
            Using a DependencyProperty as the backing store for CurrentDateBackground.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.VisibleAppointmentsPanel.VisibleAppointmentCollection">
            <summary>
            Gets or sets the appointment for schedule WeekView appointment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.WeekViewItem.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.WeekViewItem">WeekViewItem</see> class.
            </summary>      
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.WeekViewItem.Dates">
            <summary>
            Gets or sets the Dates for schedule Week View.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.WeekViewItem.EventCount">
            <summary>
            Gets or sets the Dates for schedule Week View.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.WeekViewItem.AppointmentCollection">
            <summary>
            Gets or sets the appointment for schedule WeekView appointment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.WeekViewItem.AppointmentVisibility">
            <summary>
            Gets the AppointmentVisibility for current date in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.WeekViewItem.AppointmentVisibilityProperty">
            <summary>
            Using a DependencyProperty as the backing store for CurrentDateBackground.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.WeekViewItem.Days">
            <summary>
            Gets or sets the Days for schedule Week View.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.WeekViewItem.CurrentDateBackground">
            <summary>
            Gets the background for current date in month view.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.WeekViewItem.CurrentDateBackgroundProperty">
            <summary>
            Using a DependencyProperty as the backing store for CurrentDateBackground.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Schedule.WeekViewItem.WeekViewCurrentDateHeight">
            <summary>
            Gets or sets the Background for WeekView CurrentDate Height.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.WeekViewPanel.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.UI.Xaml.Schedule.ScheduleDaysView">ScheduleDaysView</see>
            class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.WeekViewPanel.element_Tapped(System.Object,Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
            <summary>
            Executes when WeekView elements Tapped
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.YearHeaderView.disposed">
            <summary>
            checks whether managed resources are disposed or not 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.YearHeaderView.YearHeaderTextProperty">
            <summary>
            Using a DependencyProperty as the backing store for HeaderText.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Schedule.YearHeaderView.SelectedDatesProperty">
            <summary>
            Using a DependencyProperty as the backing store for SelectedDates.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.YearHeaderView.Dispose">
            <summary>
            Method to release allocated resources of YearHeaderView.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.Syncfusion_SfSchedule_UWP_2015_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.Type)">
            <summary>
            GetXamlType(Type)
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.Syncfusion_SfSchedule_UWP_2015_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.String)">
            <summary>
            GetXamlType(String)
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Schedule.Syncfusion_SfSchedule_UWP_2015_XamlTypeInfo.XamlMetaDataProvider.GetXmlnsDefinitions">
            <summary>
            GetXmlnsDefinitions()
            </summary>
        </member>
    </members>
</doc>
