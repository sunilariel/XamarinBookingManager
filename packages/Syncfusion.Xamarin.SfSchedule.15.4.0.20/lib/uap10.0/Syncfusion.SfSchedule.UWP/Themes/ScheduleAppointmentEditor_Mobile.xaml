<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:navigation="using:Syncfusion.UI.Xaml.Controls.Navigation"
                    xmlns:syncfusion="using:Syncfusion.UI.Xaml.Controls.Input"
                    xmlns:converter="using:Syncfusion.UI.Xaml.Converters"
                    xmlns:controls="using:Syncfusion.UI.Xaml.Controls"
                    xmlns:local="using:Syncfusion.UI.Xaml.Schedule">

    <local:BoolToBoolConverter x:Key="BooltoBool"/>
    <local:BoolToVisibilityConverter x:Key="BooltoVis"/>
    <local:ValueToIndexConverter x:Key="ValuetoIndex"/>

    <Thickness x:Key="SyncfusionUpDownBorderThemeThickness">1</Thickness>
    <Thickness x:Key="SyncfusionDropDownButtonBorderThemeThickness">2 0 0 0</Thickness>
    <SolidColorBrush x:Key="SyncfusionTextBoxExtErrorThemeBrush" Color="Red" />
    <SolidColorBrush x:Key="AccentBrush" Color="#FF1FAEFF" />
    <SolidColorBrush x:Key="SyncfusionRatingItemPointerOverThemeBrush" Color="#FF8152EF"/>
    <Thickness x:Key="SyncfusionTransitionContentCotnrolThemePadding">5 0 0 0</Thickness>
    <converter:TimeFormater x:Key="timeFormater"/>
    <converter:DateTimeFormater x:Key="Formater"/>
    <converter:InvertBooleanConverter x:Key="BooleanConverter"/>
    <converter:OrientationToAngleConverter x:Key="AngleConverter"/>
    <converter:PrecisionToVisibilityConverter x:Key="VisibilityConverter"/>
    <converter:PrecisionToVisibilityInverseConverter x:Key="InverseConverter"/>
    <converter:Inverter x:Key="Inverter"/>
    <converter:ToolTipVisibilityConverter x:Key="ToolTipConverter"/>
    <converter:BooleanToVisibilityConverter x:Key="BooleanVisibilityConverter"/>
    <converter:InverseBooleanToVisibilityConverter x:Key="InverseBooleanVisibilityConverter" />
    <converter:BrushToColorConverter x:Key="BrushConverter"/>
    <converter:CalendarHeaderFormatter x:Key="HeaderFormatter"/>
    <converter:EmptyStringToVisibilityConverter x:Key="EmptyStringVisibilityConverter" />
    <syncfusion:VisibilityToBooleanConverter x:Key="VisibilityToBooleanConverter"/>
    <syncfusion:NameToScopeConverter x:Key="NameToScope"/>

    <DataTemplate x:Key="DefaultMonthCellTemplate">
        <StackPanel HorizontalAlignment="Left" Margin="2" VerticalAlignment="Bottom">
            <TextBlock FontSize="30" FontWeight="SemiBold" Margin="2 0 0 -3" Text="{Binding MonthNumber}"/>
            <TextBlock FontSize="18" FontWeight="Light" Text="{Binding MonthName}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="DefaultDayCellTemplate">
        <StackPanel HorizontalAlignment="Left" Margin="2" VerticalAlignment="Bottom">
            <TextBlock FontSize="30" FontWeight="SemiBold" Margin="2 0 0 -3" Text="{Binding DayNumber}"/>
            <TextBlock FontSize="18" FontWeight="Light" Text="{Binding DayName}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="DefaultYearCellTemplate">
        <StackPanel HorizontalAlignment="Left" Margin="2" VerticalAlignment="Bottom">
            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="2 0 0 -3" 
                       Text="{Binding YearNumber}" FontWeight="SemiBold" FontSize="30"/>
            <TextBlock FontSize="18" FontWeight="Light" Text=""/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="DefaultHourCellTemplate">
        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="5 0 0 5" 
                   Text="{Binding HourNumber}" FontWeight="SemiBold" FontSize="30" />
    </DataTemplate>

    <DataTemplate x:Key="DefaultMinuteCellTemplate">
        <TextBlock Margin="5 0 0 5" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                   Text="{Binding MinuteNumber}" FontWeight="SemiBold" FontSize="30" />
    </DataTemplate>

    <DataTemplate x:Key="DefaultSecondCellTemplate">
        <TextBlock Margin="5 0 0 5" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                   Text="{Binding SecondNumber}" FontWeight="SemiBold" FontSize="30"/>
    </DataTemplate>

    <DataTemplate x:Key="DefaultMeridiemCellTemplate">
        <TextBlock Margin="5 0 0 5" HorizontalAlignment="Left"  VerticalAlignment="Bottom"
                   Text="{Binding AmPmString}" FontWeight="SemiBold" FontSize="30"/>
    </DataTemplate>

    <Style TargetType="controls:LoopingSelectorItem" x:Key="LoopingSelectorItemStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="root" Opacity="0" Padding="{TemplateBinding Padding}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="root" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="background" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                        <ColorAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="{Binding Foreground,Converter={StaticResource BrushConverter},ConverterParameter=ContentBrushnull,RelativeSource={RelativeSource Mode=TemplatedParent}}" Duration="0"/>
                                        <ColorAnimation Storyboard.TargetName="background" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" To="Transparent" Duration="0"/>
                                        <ColorAnimation Storyboard.TargetName="Part_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{Binding Foreground,Converter={StaticResource BrushConverter},ConverterParameter=ContentBrushnull,RelativeSource={RelativeSource Mode=TemplatedParent}}" Duration="0"/>
                                        <ColorAnimation Storyboard.TargetName="Part_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="root" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="background" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                        <ColorAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="{Binding SelectedForeground,Converter={StaticResource BrushConverter},ConverterParameter=ContentBrushnull,RelativeSource={RelativeSource Mode=TemplatedParent}}" Duration="0"/>
                                        <ColorAnimation Storyboard.TargetName="background" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" To="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border.RenderTransform>
                            <TranslateTransform x:Name="Transform"/>
                        </Border.RenderTransform>
                        <Grid>
                            <Rectangle x:Name="background" Opacity="0" Fill="Transparent"/>
                            <Rectangle x:Name="Part_Disabled" Height="{Binding ElementName=Part_Border,Path=ActualHeight}"
                                       Width="{Binding ElementName=Part_Border,Path=ActualWidth}" Opacity="1" Fill="Gray"/>
                            <Border x:Name="Part_Border" BorderThickness="2" 
                                    BorderBrush="{Binding AccentBrush,Converter={StaticResource BrushConverter},ConverterParameter=AccentBrushnull, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                    Background="{Binding AccentBrush,Converter={StaticResource BrushConverter},ConverterParameter=AccentBrushnull, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                <ContentPresenter Margin="1 0" x:Name="contentPresenter" Foreground="White"/>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DropDownButtonStyle" TargetType="RepeatButton">
        <Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"/>
        <Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.9" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="path">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"  Background="{TemplateBinding Background}">

                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
											  ContentTransitions="{TemplateBinding ContentTransitions}"                                              
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  MinWidth="32" Foreground="White"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Path x:Name="path" Data="F1M181.297,177.841L181.205,177.746 181.385,177.563 202.804,156.146 202.804,135.07 178.497,159.373 170.847,167.026 170.666,167.205 163.107,159.653 138.804,135.345 138.804,156.42 160.219,177.841 170.76,188.379 181.297,177.841z" Stretch="Uniform" Fill="#FFFFFFFF" Width="10" Height="10" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5"/>
                            </ContentPresenter>
                        </Border>
                        <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="DateSelectorButton">
        <Setter Property="Foreground" Value="#000000"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="AutomationProperties.ItemType" Value="App Bar Button"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid x:Name="RootGrid" Width="50" Height="50" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ApplicationViewStates">
                                <VisualState x:Name="FullScreenLandscape"/>
                                <VisualState x:Name="Filled"/>
                                <VisualState x:Name="FullScreenPortrait">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Snapped">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ColorAnimation
												Storyboard.TargetName="BackgroundGlyph"
												Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
												To="LightGray"
												Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation
												Storyboard.TargetName="BackgroundGlyph"
												Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
												To="#000000"
												Duration="0"/>
                                        <ColorAnimation
												Storyboard.TargetName="Content"
												Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
												To="#FFFFFF"
												Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
												Storyboard.TargetName="FocusVisualWhite"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0"/>
                                        <DoubleAnimation
												Storyboard.TargetName="FocusVisualBlack"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Opacity"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedGlyph" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <StackPanel VerticalAlignment="Center"  >
                            <Grid Width="34" Height="34" Margin="8,8,5,5"  HorizontalAlignment="Center">
                                <TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" FontFamily="Segoe UI Symbol" FontStyle="Normal" FontSize="45" Margin="-4,-19,0,0" Foreground="{StaticResource AppBarItemBackgroundThemeBrush}"/>
                                <TextBlock x:Name="OutlineGlyph" Text="&#xE0A7;" FontFamily="Segoe UI Symbol" FontStyle="Normal" FontSize="45" Margin="-4,-19,0,0"/>
                                <ContentPresenter x:Name="Content" HorizontalAlignment="Center" Margin="-2,-4,0,0" FontStyle="Normal" VerticalAlignment="Center"/>
                            </Grid>
                        </StackPanel>
                        <Ellipse x:Name="FocusVisualWhite" Margin="0 0 0 2" Height="42" Width="42"  IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        <Ellipse x:Name="FocusVisualBlack" Margin="0 0 0 2" Height="42" Width="42"  IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Content" Value="1"/>
    </Style>

    <Style x:Key="DefaultDateSelectorStyle" TargetType="syncfusion:SfDateSelector">
        <Setter Property="SelectedForeground" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="DayCellTemplate" Value="{StaticResource DefaultDayCellTemplate}"/>
        <Setter Property="MonthCellTemplate" Value="{StaticResource DefaultMonthCellTemplate}"/>
        <Setter Property="YearCellTemplate" Value="{StaticResource DefaultYearCellTemplate}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="syncfusion:SfDateSelector">
                    <Border  BorderThickness="2" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid Background="{TemplateBinding Background}" x:Name="PART_Root" 
							  Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}}"
							  Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid HorizontalAlignment="Center" x:Name="LoopingSelectorGrid" Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <controls:LoopingSelector x:Name="PART_Month" IsTabStop="False" SelectedForeground="{Binding SelectedForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                          ItemContainerStyle="{StaticResource LoopingSelectorItemStyle}"
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding MonthCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding MonthCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                </controls:LoopingSelector>
                                <controls:LoopingSelector Grid.Column="1" x:Name="PART_Date" IsTabStop="False" SelectedForeground="{Binding SelectedForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                          ItemContainerStyle="{StaticResource LoopingSelectorItemStyle}"
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding DayCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding DayCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                </controls:LoopingSelector>
                                <controls:LoopingSelector Grid.Column="2" x:Name="PART_Year" IsTabStop="False" SelectedForeground="{Binding SelectedForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                          ItemContainerStyle="{StaticResource LoopingSelectorItemStyle}"
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding YearCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding YearCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}"  
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                </controls:LoopingSelector>
                            </Grid>

                            <Grid x:Name="FooterGrid"  HorizontalAlignment="Center" Width="100" Grid.Row="1" Margin="2 2 6 5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button  Style="{StaticResource DateSelectorButton}" Foreground="White" IsTabStop="False" x:Name="PART_DoneButton" Margin="0 0 0 0 " Padding="20 3 20 3" Content="&#xE10B;" Grid.Column="0" HorizontalAlignment="Center"
									Visibility="{Binding ShowDoneButton, Converter={StaticResource BooleanVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Button Style="{StaticResource DateSelectorButton}" Foreground="White" IsTabStop="False" x:Name="PART_CancelButton" Margin="0 0 0 0" Padding="20 3 20 3"  Content="&#xE10A;" Grid.Column="1" HorizontalAlignment="Center" 
									Visibility="{Binding ShowCancelButton, Converter={StaticResource BooleanVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DateSelectorStyle" TargetType="syncfusion:SfDateSelector">
        <Setter Property="SelectedForeground" Value="White"/>
        <Setter Property="Foreground" Value="#848484"/>
        <Setter Property="DayCellTemplate" Value="{StaticResource DefaultDayCellTemplate}"/>
        <Setter Property="MonthCellTemplate" Value="{StaticResource DefaultMonthCellTemplate}"/>
        <Setter Property="YearCellTemplate" Value="{StaticResource DefaultYearCellTemplate}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="syncfusion:SfDateSelector">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid Background="{TemplateBinding Background}"
							  Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}}"
							  Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <Grid HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <controls:LoopingSelector x:Name="PART_Month" IsTabStop="False" 
                                                          ItemContainerStyle="{StaticResource LoopingSelectorItemStyle}"
                                                          SelectedForeground="{Binding SelectedForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding MonthCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding MonthCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                </controls:LoopingSelector>
                                <controls:LoopingSelector Grid.Column="1" x:Name="PART_Date" IsTabStop="False"
                                                          ItemContainerStyle="{StaticResource LoopingSelectorItemStyle}"
                                                          SelectedForeground="{Binding SelectedForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding DayCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding DayCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                </controls:LoopingSelector>
                                <controls:LoopingSelector Grid.Column="2" x:Name="PART_Year" IsTabStop="False" 
                                                          ItemContainerStyle="{StaticResource LoopingSelectorItemStyle}"
                                                          SelectedForeground="{Binding SelectedForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding YearCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding YearCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                </controls:LoopingSelector>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DatePickerStyle" TargetType="syncfusion:SfDatePicker">
        <Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"></Setter>
        <Setter Property="FormatString" Value="d" />
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="syncfusion:SfDatePicker">
                    <Grid x:Name="PART_DatePickerPage">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ErrorStates">
                                <VisualState x:Name="HasError">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="PART_TextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SyncfusionTextBoxExtErrorThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NoError"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <syncfusion:SfDateSelector x:Name="PART_DateSelector" Background="{TemplateBinding Background}"
                                                   BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                                   Style="{StaticResource DateSelectorStyle}" 
                                                       FlowDirection="{TemplateBinding FlowDirection}"
										IsEnabled="{Binding IsEnabled,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        IsTabStop="{Binding IsTabStop,RelativeSource={RelativeSource Mode=TemplatedParent}}"
										AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}"
										SelectedDateTime="{Binding Value, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TimeSelectorStyle" TargetType="syncfusion:SfTimeSelector">
        <Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
        <Setter Property="SelectedForeground" Value="White"/>
        <Setter Property="Foreground" Value="#848484"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HourCellTemplate" Value="{StaticResource DefaultHourCellTemplate}"/>
        <Setter Property="MeridiemCellTemplate" Value="{StaticResource DefaultMeridiemCellTemplate}"/>
        <Setter Property="MinuteCellTemplate" Value="{StaticResource DefaultMinuteCellTemplate}"/>
        <Setter Property="SecondCellTemplate" Value="{StaticResource DefaultSecondCellTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="syncfusion:SfTimeSelector">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid Background="{TemplateBinding Background}"
							  Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}}"
							  Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <Grid HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <controls:LoopingSelector x:Name="PART_Hour" IsTabStop="False" SelectedForeground="{Binding SelectedForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                          ItemContainerStyle="{StaticResource LoopingSelectorItemStyle}"
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding HourCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding HourCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                </controls:LoopingSelector>
                                <controls:LoopingSelector Grid.Column="1" x:Name="PART_Minute" IsTabStop="False" SelectedForeground="{Binding SelectedForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                          ItemContainerStyle="{StaticResource LoopingSelectorItemStyle}"
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding MinuteCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding MinuteCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                </controls:LoopingSelector>
                                <controls:LoopingSelector Grid.Column="2" x:Name="PART_Second" IsTabStop="False" SelectedForeground="{Binding SelectedForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                          ItemContainerStyle="{StaticResource LoopingSelectorItemStyle}"
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding SecondCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding SecondCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                </controls:LoopingSelector>
                                <controls:LoopingSelector Grid.Column="3" x:Name="PART_Meridiem" IsTabStop="False" SelectedForeground="{Binding SelectedForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                          ItemContainerStyle="{StaticResource LoopingSelectorItemStyle}"
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding MeridiemCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding MeridiemCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                </controls:LoopingSelector>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TimePickerStyle" TargetType="syncfusion:SfTimePicker">
        <Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"></Setter>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"></Setter>
        <Setter Property="FormatString" Value="d" />
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="PART_TimePickerPage">
                        <syncfusion:SfTimeSelector x:Name="PART_TimeSelector" Background="{TemplateBinding Background}" 
                                                       BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"								
                                                       Style="{StaticResource TimeSelectorStyle}" 
                                                       FlowDirection="{TemplateBinding FlowDirection}"
										IsEnabled="{Binding IsEnabled,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        IsTabStop="{Binding IsTabStop,RelativeSource={RelativeSource Mode=TemplatedParent}}"
										AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										SelectedTime="{Binding Value, RelativeSource={RelativeSource Mode=TemplatedParent}}" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ErrorStates">
                                <VisualState x:Name="HasError">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="PART_TextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SyncfusionTextBoxExtErrorThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NoError"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleSwitchStyle" TargetType="ToggleSwitch">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleSwitch">
                    <Border BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <ContentPresenter x:Name="OffContentPresenter" Grid.Column="0" Opacity="0" IsHitTestVisible="False" 
                                                                                  FontSize="18" FontFamily="Segoe UI" FontWeight="Normal"
                                                                                  ContentTemplate="{TemplateBinding OffContentTemplate}" Content="{TemplateBinding OffContent}" 
                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            <ContentPresenter x:Name="OnContentPresenter" Grid.Column="0" Opacity="0" IsHitTestVisible="False" 
                                                                                  FontSize="18" FontFamily="Segoe UI" FontWeight="Normal"
                                                                                  ContentTemplate="{TemplateBinding OnContentTemplate}" Content="{TemplateBinding OnContent}"
                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            <Grid Background="Transparent" Grid.Column="1" Height="30" Margin="30 0"
                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="SwitchKnobBounds" >
                                    <Border x:Name="OuterBorder" BorderBrush="White" BorderThickness="2">
                                        <Border x:Name="InnerBorder" BorderBrush="White" BorderThickness="1" 
                                                Background="{StaticResource ToggleSwitchTrackBackgroundThemeBrush}">
                                            <ContentPresenter x:Name="SwitchCurtainBounds">
                                                <ContentPresenter x:Name="SwitchCurtainClip">
                                                    <Rectangle x:Name="SwitchCurtain" Fill="{StaticResource ToggleSwitchCurtainBackgroundThemeBrush}" Width="75">
                                                        <Rectangle.RenderTransform>
                                                            <TranslateTransform x:Name="CurtainTranslateTransform" X="-75"/>
                                                        </Rectangle.RenderTransform>
                                                    </Rectangle>
                                                </ContentPresenter>
                                            </ContentPresenter>
                                        </Border>
                                    </Border>

                                    <Rectangle x:Name="SwitchKnob" Fill="White" Width="20"  HorizontalAlignment="Left">
                                        <Rectangle.RenderTransform>
                                            <TranslateTransform x:Name="KnobTranslateTransform"/>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>

                                    <Rectangle x:Name="FocusVisualWhite" Margin="-3" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>

                                    <Rectangle x:Name="FocusVisualBlack" Margin="-3" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                                </Grid>

                                <Thumb x:Name="SwitchThumb">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Rectangle Fill="Transparent"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Grid>
                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="HeaderContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchHeaderDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="OffContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="OnContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchOuterBorderDisabledBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchTrackDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SwitchKnob">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchThumbDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SwitchKnob">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchThumbDisabledBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SwitchCurtain">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchCurtainDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ToggleStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition x:Name="DraggingToOnTransition" From="Dragging" GeneratedDuration="0" To="On">
                                        <Storyboard>
                                            <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobCurrentToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                            <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.CurtainCurrentToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchCurtain"/>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition x:Name="DraggingToOffTransition" From="Dragging" GeneratedDuration="0" To="Off">
                                        <Storyboard>
                                            <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobCurrentToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                            <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.CurtainCurrentToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchCurtain"/>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition x:Name="OnToOffTransition" From="On" GeneratedDuration="0" To="Off">
                                        <Storyboard>
                                            <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobOnToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                            <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.CurtainOnToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchCurtain"/>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition x:Name="OffToOnTransition" From="Off" GeneratedDuration="0" To="On">
                                        <Storyboard>
                                            <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobOffToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                            <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.CurtainOffToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchCurtain"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Dragging"/>
                                <VisualState x:Name="Off">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="-75" Storyboard.TargetProperty="X" Storyboard.TargetName="CurtainTranslateTransform"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="On">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="CurtainTranslateTransform"/>
                                        <DoubleAnimation Duration="0" To="60" Storyboard.TargetProperty="X" Storyboard.TargetName="KnobTranslateTransform"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ContentStates">
                                <VisualState x:Name="OffContent">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="OffContentPresenter"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="OffContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <x:Boolean>True</x:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OnContent">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="OnContentPresenter"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="OnContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <x:Boolean>True</x:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Region Schedule AppointmentEditor -->

    <Style TargetType="local:ScheduleAppointmentEditor">
        <Setter Property="AppointmentEditorBackground" Value="#1F1F1F"/>
        <Setter Property="AppointmentEditorForeground" Value="White"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ScheduleAppointmentEditor">
                    <Grid>
                        <Grid.Resources>

                            <Style TargetType="AppBarButton">
                                <Setter Property="Foreground" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
                                <Setter Property="VerticalAlignment" Value="Top"/>
                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                                <Setter Property="FontWeight" Value="Normal"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="AppBarButton">
                                            <StackPanel x:Name="LayoutRoot" Background="Transparent" Width="80">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="ApplicationViewStates">
                                                        <VisualState x:Name="FullSize"/>
                                                        <VisualState x:Name="Compact">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TextLabel">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="LayoutRoot">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="48"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Ellipse">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Ellipse">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPressedForegroundThemeBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Ellipse">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextLabel">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Grid HorizontalAlignment="Center" Height="38.5" Margin="0,12,0,4" Width="38.5">
                                                    <Ellipse x:Name="Ellipse" Fill="{ThemeResource AppBarItemBackgroundThemeBrush}" Height="38.5" Stroke="White" StrokeThickness="2.5" UseLayoutRounding="False" Width="38.5"/>
                                                    <Grid x:Name="ContentRoot" Background="Transparent">
                                                        <ContentPresenter x:Name="Content" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                                    </Grid>
                                                </Grid>
                                                <TextBlock x:Name="TextLabel" Foreground="White" FontSize="9.5" FontFamily="{TemplateBinding FontFamily}" Margin="0,0,0,10.5" TextAlignment="Center" TextWrapping="Wrap" Text="{TemplateBinding Label}" Width="70.5"/>
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style  TargetType="CheckBox">
                                <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}"/>
                                <Setter Property="BorderBrush" Value="{ThemeResource CheckBoxBorderThemeBrush}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
                                <Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                <Setter Property="VerticalContentAlignment" Value="Top"/>
                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                <Setter Property="VerticalAlignment" Value="Top"/>
                                 <Setter Property="Padding" Value="5"/>
                                <Setter Property="MinWidth" Value="{ThemeResource ComboBoxThemeMinWidth}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="CheckBox">
                                            <Grid Background="Transparent">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition From="Pressed" To="PointerOver">
                                                                <Storyboard>
                                                                    <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                                                </Storyboard>
                                                            </VisualTransition>
                                                            <VisualTransition From="PointerOver" To="Normal">
                                                                <Storyboard>
                                                                    <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                                                </Storyboard>
                                                            </VisualTransition>
                                                            <VisualTransition From="Pressed" To="Normal">
                                                                <Storyboard>
                                                                    <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                                                </Storyboard>
                                                            </VisualTransition>
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver"/>
                                                        <VisualState x:Name="PointerOver"/>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <PointerDownThemeAnimation Storyboard.TargetName="Grid"/>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="CheckBackground">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedBackgroundThemeBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedForegroundThemeBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedBackgroundThemeBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="CheckBackground">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledBorderThemeBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledForegroundThemeBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledBackgroundThemeBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledForegroundThemeBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="CheckStates">
                                                        <VisualState x:Name="Checked">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CheckGlyph">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unchecked"/>
                                                        <VisualState x:Name="Indeterminate">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="NormalRectangle">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Grid x:Name="Grid" Margin="5">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="25.5"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid Grid.Column="0" VerticalAlignment="Top">
                                                        <Border x:Name="CheckBackground" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Left" Height="25.5" IsHitTestVisible="False" VerticalAlignment="Center" Width="25.5"/>
                                                        <Rectangle x:Name="NormalRectangle" Fill="White" HorizontalAlignment="Center" Height="13" IsHitTestVisible="False" Visibility="Collapsed" VerticalAlignment="Center" Width="13"/>
                                                        <Path x:Name="CheckGlyph" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" Fill="White" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="17" IsHitTestVisible="False" Stretch="Fill" StrokeThickness="2.5" StrokeLineJoin="Round" Visibility="Collapsed" VerticalAlignment="Center" Width="18.5"/>
                                                    </Grid>
                                                    <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" Foreground="White" FontWeight="Normal" FontSize="{ThemeResource TextStyleLargeFontSize}" FontFamily="{ThemeResource PhoneFontFamilyNormal}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style TargetType="ComboBox">
                                <Setter Property="MinWidth" Value="{ThemeResource ComboBoxThemeMinWidth}" />
                                <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundAltMediumLowBrush}" />
                                <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundBaseMediumLowBrush}" />
                                <Setter Property="BorderThickness" Value="{ThemeResource ComboBoxBorderThemeThickness}" />
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ComboBox">
                                            <Grid x:Name="ComboBoxGrid">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
                                           Storyboard.TargetProperty="Background">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListMediumBrush}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
                                           Storyboard.TargetProperty="BorderBrush">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}" />
                                                                </ObjectAnimationUsingKeyFrames>

                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="UserControl">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="HeaderContentPresenter">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="FlyoutButton">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="UserControl">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PlaceholderTextBlock">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PlaceholderTextBlock"/>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PlaceholderTextContentPresenter">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    
                                                    <VisualStateGroup x:Name="DropDownStates">
                                                        <VisualState x:Name="Opened">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.25" EnableDependentAnimation="True" From="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" To="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" Storyboard.TargetProperty="Height" Storyboard.TargetName="ItemsPresenterHost">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="6"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                                <DoubleAnimation Duration="0:0:0.25" To="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" Storyboard.TargetProperty="Y" Storyboard.TargetName="ItemsPresenterTranslateTransform">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="6"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="UserControl">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="UserControl">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Closed">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.2" EnableDependentAnimation="True" From="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" To="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" Storyboard.TargetProperty="Height" Storyboard.TargetName="ItemsPresenterHost">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="6"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                                <DoubleAnimation Duration="0:0:0.2" To="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" Storyboard.TargetProperty="Y" Storyboard.TargetName="ItemsPresenterTranslateTransform">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="6"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="PresenterStates">
                                                        <VisualState x:Name="Full"/>
                                                        <VisualState x:Name="InlineNormal">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FlyoutButton">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ShortListOuterBorder">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="InlinePlaceholder">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FlyoutButton">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ShortListOuterBorder">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PlaceholderTextContentPresenter"/>
                                                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsPresenter"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                
                                                <ContentPresenter x:Name="HeaderContentPresenter" Foreground="White" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" FlowDirection="{TemplateBinding FlowDirection}" HorizontalAlignment="Left" Margin="0,0,0,-4.5"  Visibility="Collapsed"/>
                                                <Button x:Name="FlyoutButton" Foreground="White" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" FontWeight="Normal" FlowDirection="{TemplateBinding FlowDirection}" FontSize="{ThemeResource ContentControlFontSize}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left"  Padding="6.5,0,0,0" Grid.Row="1">
                                                    <ContentPresenter x:Name="ContentPresenter" Margin="0,0.8,0,0" MinHeight="32.5">
                                                        <TextBlock x:Name="PlaceholderTextBlock" Margin="0"  Text="{TemplateBinding PlaceholderText}"  Foreground="White"/>
                                                    </ContentPresenter>
                                                </Button>
                                                <Border x:Name="ShortListOuterBorder" Margin="5" Grid.Row="1" Visibility="Collapsed">
                                                    <Border x:Name="Background" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                                        <UserControl x:Name="UserControl" Foreground="White" FlowDirection="{TemplateBinding FlowDirection}" IsHitTestVisible="False">
                                                            <Canvas x:Name="ItemsPresenterHost" HorizontalAlignment="Left" >
                                                                <ContentPresenter  x:Name="PlaceholderTextContentPresenter" Content="{TemplateBinding PlaceholderText}"  Foreground="White" Opacity="0" />
                                                                    <ItemsPresenter x:Name="ItemsPresenter" Margin="0,0.8,0,0">
                                                                        <ItemsPresenter.RenderTransform>
                                                                            <TranslateTransform x:Name="ItemsPresenterTranslateTransform"/>
                                                                        </ItemsPresenter.RenderTransform>
                                                                    </ItemsPresenter>
                                                          
                                                            </Canvas>
                                                        </UserControl>
                                                    </Border>
                                                </Border>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style TargetType="RadioButton">
                                <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}"/>
                                <Setter Property="BorderBrush" Value="{ThemeResource RadioButtonBorderThemeBrush}"/>
                                <Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
                                <Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                <Setter Property="VerticalContentAlignment" Value="Top"/>
                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                <Setter Property="VerticalAlignment" Value="Top"/>
                                <Setter Property="MinWidth" Value="{ThemeResource ComboBoxThemeMinWidth}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="RadioButton">
                                            <Grid Background="Transparent">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver"/>
                                                        <VisualState x:Name="PointerOver"/>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <PointerDownThemeAnimation Storyboard.TargetName="Container"/>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckBackground">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedBackgroundThemeBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckMark">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedForegroundThemeBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="CheckBackground">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckMark">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="CheckStates">
                                                        <VisualState x:Name="Checked">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CheckMark">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unchecked"/>
                                                        <VisualState x:Name="Indeterminate"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Grid x:Name="Container" Margin="5">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="25.5"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid VerticalAlignment="Top">
                                                        <Ellipse x:Name="CheckBackground" Fill="{TemplateBinding Background}" HorizontalAlignment="Left" Height="25.5" IsHitTestVisible="False" Stroke="White"  VerticalAlignment="Center" Width="25.5"/>
                                                        <Ellipse x:Name="CheckMark" Fill="White" HorizontalAlignment="Center" Height="12.5" IsHitTestVisible="False" Visibility="Collapsed" VerticalAlignment="Center" Width="12.5"/>
                                                        <TextBlock/>
                                                    </Grid>
                                                    <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>


                        </Grid.Resources>
                        <Grid x:Name="FrontGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Grid Background="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <TextBlock x:Name="TitleTextBlock" Margin="20 10" FontSize="30"
                                           Foreground="White"/>

                                <ScrollViewer x:Name="ScrollView" Grid.Row="1" VerticalScrollBarVisibility="Auto" ZoomMode="Disabled">
                                    <StackPanel>
                                        <syncfusion:SfTextBoxExt x:Name="Subject" Height="45" Margin="20 10" Background="White" BorderBrush="Transparent" Foreground="Black" 
                                                             Text="{Binding EditedAppointment.Subject, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                             Watermark="{Binding [Subject], RelativeSource={RelativeSource TemplatedParent}}" 
                                                              IsReadOnly="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooltoBool}}"
                                                             TextWrapping="NoWrap" FontSize="18"/>

                                        <syncfusion:SfTextBoxExt x:Name="Notes" Height="85" Margin="20 10" Background="White" BorderBrush="Transparent" Foreground="Black" 
                                                             Text="{Binding EditedAppointment.Notes, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                             Watermark="{Binding [Notes], RelativeSource={RelativeSource TemplatedParent}}" 
                                                              IsReadOnly="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooltoBool}}"
                                                             TextWrapping="Wrap" FontSize="18"
                                                             AcceptsReturn="True" ScrollViewer.VerticalScrollBarVisibility="Auto"/>

                                        <syncfusion:SfTextBoxExt x:Name="Location" Height="45" Margin="20 10" Background="White" BorderBrush="Transparent" Foreground="Black" 
                                                             Text="{Binding EditedAppointment.Location,  RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" 
                                                             Watermark="{Binding [Location], RelativeSource={RelativeSource TemplatedParent}}" 
                                                             IsReadOnly="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooltoBool}}"
                                                             TextWrapping="Wrap" FontSize="18"/>

                                        <ToggleSwitch x:Name="AllDay" Margin="20 10" FontSize="18" TabIndex="1" ManipulationMode="Rotate" VerticalContentAlignment="Center"                                                  Style="{StaticResource ToggleSwitchStyle}"
                                                  IsOn="{Binding AllDay, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                  OffContent="{Binding [All_Day], RelativeSource={RelativeSource TemplatedParent}}" 
                                                  OnContent="{Binding [All_Day], RelativeSource={RelativeSource TemplatedParent}}" 
                                                  Foreground="White"
                                                  IsEnabled="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}">
                                        </ToggleSwitch>

                                        <Border x:Name="StartBorder" Height="45" Margin="20 10" BorderBrush="White" BorderThickness="1"
                                           IsHitTestVisible="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}"  >
                                            <Grid x:Name="StartGrid" Background="Transparent">
                                                <TextBlock Margin="10 0" FontSize="18" VerticalAlignment="Center"
                                                       Foreground="White">
                                                <Run Text="{Binding [Start], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Run Text=" - "/>
                                                <Run Text="{Binding StartDate, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"/>
                                                </TextBlock>
                                            </Grid>
                                        </Border>

                                        <Border x:Name="EndBorder" Height="45" Margin="20 10" BorderBrush="White" BorderThickness="1"
                                          IsHitTestVisible="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Grid x:Name="EndGrid" Background="Transparent">
                                                <TextBlock Margin="10 0" FontSize="18" VerticalAlignment="Center"
                                                       Foreground="White"  >
                                                <Run Text="{Binding [End], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Run Text=" - "/>
                                                <Run Text="{Binding EndDate, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                                </TextBlock>
                                            </Grid>
                                        </Border>

                                        <TextBlock Margin="20 10" Visibility="{Binding IsWarningMsgVisible, RelativeSource={RelativeSource TemplatedParent}}"
                                               Text="Appointment's EndTime is less than StartTime. Please check With the Start Time and End Time." 
                                               Height="Auto" TextWrapping="Wrap" FontSize="13" Foreground="Red"/>

                                        <Button x:Name="MoreDetailsButton" Height="45" Margin="20 10" FontSize="18" BorderThickness="1" BorderBrush="White"
                                                Content="{Binding [More_Details], RelativeSource={RelativeSource TemplatedParent}}" 
                                            Foreground="White"/>
                                        
                                        <StackPanel x:Name="ShowMoreStackPanel"
                                                    Visibility="{Binding ShowMoreStackPanelVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ToggleSwitch x:Name="isRecursive" Margin="20 10" FontSize="18" TabIndex="1" ManipulationMode="Rotate" VerticalContentAlignment="Center"
                                                          Style="{StaticResource ToggleSwitchStyle}"
                                                          Visibility="{Binding IsRecurrenceTypeEnabled, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooltoVis}}"
                                                          OffContent="{Binding [RecurrenceDisabled], RelativeSource={RelativeSource TemplatedParent}}"  
                                                          OnContent="{Binding [RecurrenceEnabled], RelativeSource={RelativeSource TemplatedParent}}"  
                                                          IsOn="{Binding EditedAppointment.IsRecursive, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                          IsEnabled="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}"
                                                          Foreground="White">
                                            </ToggleSwitch>

                                            <Border x:Name="RecurrenceSummaryBorder" Margin="20 10" BorderThickness="0" Visibility="Collapsed"
                                                    Background="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}">
                                                <TextBlock FontSize="18" TextWrapping="Wrap"
                                                           Text="{Binding RecurrenceSummary, RelativeSource={RelativeSource TemplatedParent}}"
                                                           Foreground="White"/>
                                            </Border>

                                            <TextBlock Height="30" Margin="20 0" FontSize="18" 
                                                   Text="{Binding [Reminder], RelativeSource={RelativeSource TemplatedParent}}" 
                                                   Foreground="White"/>

                                            <ComboBox x:Name="ReminderDeliveryTime" Margin="20 0 20 10" FontSize="18"  HorizontalAlignment="Stretch"
                                                  SelectedItem="{Binding ReminderTime, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}" 
                                          IsEnabled="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}"
                                                  />

                                            <TextBlock Height="30" Margin="20 0" FontSize="18" 
                                                   Text="{Binding [Status], RelativeSource={RelativeSource TemplatedParent}}" 
                                                   Foreground="White"/>


                                            <ComboBox x:Name="Status" Margin="15 0 20 10" FontSize="18"  PlaceholderText="Choose an item" HorizontalAlignment="Stretch"
                                                  DisplayMemberPath="DisplayMember" SelectedValuePath="ActualValue"
                                                  IsEnabled="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}"
                                                  SelectedItem="{Binding EditedAppointment.Status, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" 
                                                  />
                                        </StackPanel>
                                    </StackPanel>
                                </ScrollViewer>
                            </Grid>

                            <Grid Background="#2D2D2D" Grid.Row="1">
                                <Grid Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top">
                                    <TextBlock x:Name="GeneralOptionsBlock" Margin="10 -10 20 0" FontSize="22" FontWeight="ExtraBold" Text="..." 
                                               Width="100" Height="50" TextAlignment="Right" CharacterSpacing="100"
                                               Foreground="White">
                                    </TextBlock>
                                </Grid>

                                <Grid HorizontalAlignment="Center" Margin="0 10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <AppBarButton x:Name="Done" Grid.Column="0" IsCompact="True" Width="80" Icon="Save"
                                              Label="{Binding [Save], RelativeSource={RelativeSource TemplatedParent}}"
                                              Foreground="White"
                                             IsEnabled="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}">
                                    </AppBarButton>

                                    <AppBarButton x:Name="Delete" Grid.Column="1" IsCompact="True" Width="80" Icon="Delete"
                                              Label="{Binding [Delete], RelativeSource={RelativeSource TemplatedParent}}"
                                              Foreground="White"
                                      IsEnabled="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Visibility="{Binding DeleteButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                    </AppBarButton>

                                    <AppBarButton x:Name="Close" Grid.Column="2" IsCompact="True" Width="80" Icon="Cancel"
                                              Label="{Binding [Cancel], RelativeSource={RelativeSource TemplatedParent}}"
                                              Foreground="White">
                                    </AppBarButton>
                                </Grid>
                            </Grid>
                        </Grid>

                        <Grid x:Name="StartStackPanel"
                              Background="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}" 
                              Visibility="{Binding StartStackPanelVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.05*"/>
                                <RowDefinition Height="0.6*"/>
                                <RowDefinition Height="0.1*"/>
                                <RowDefinition Height="0.1*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Text="{Binding [Start_Date], RelativeSource={RelativeSource TemplatedParent}}" Margin="20 0" FontSize="17" FontFamily="Segoe UI" FontWeight="Normal"/>

                            <navigation:SfTabControl x:Name="StartDateTabControl" Grid.Row="1" Margin="0" SelectedIndex="0">
                                <navigation:SfTabItem Header="{Binding [Date], RelativeSource={RelativeSource TemplatedParent}}">
                                    <syncfusion:SfDatePicker x:Name="Startdate" Background="Transparent" BorderThickness="0" VerticalAlignment="Center"
                                                             Style="{StaticResource DatePickerStyle}" AccentBrush="Blue"
                                                             Value="{Binding start, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
                                                             Foreground="White"   
                                                             FontSize="18" FormatString="MMMM - d - dddd - yyyy"/>
                                </navigation:SfTabItem>

                                <navigation:SfTabItem Visibility="{Binding IsOn, ElementName=StartTimeAllDay, Converter={StaticResource BooltoVis}, ConverterParameter=Inverse}">
                                    <navigation:SfTabItem.Header>
                                        <TextBlock Text="{Binding [Time], RelativeSource={RelativeSource TemplatedParent}}"
                                                   Visibility="{Binding IsOn, ElementName=StartTimeAllDay, Converter={StaticResource BooltoVis}, ConverterParameter=Inverse}"/>
                                    </navigation:SfTabItem.Header>
                                    <syncfusion:SfTimePicker x:Name="Starttime" Background="Transparent" BorderBrush="#FFB2B2B2" BorderThickness="0"
                                                             Style="{StaticResource TimePickerStyle}" AccentBrush="Blue"
                                                             Value="{Binding start, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
                                                             IsEnabled="{Binding EndDateEnable, RelativeSource={RelativeSource TemplatedParent}}" 
                                                             Foreground="White"                                                                        
                                                             FontSize="18" FormatString="hh : mm   tt" SelectorFormatString="h:m:t"/>
                                </navigation:SfTabItem>
                            </navigation:SfTabControl>

                            <ToggleSwitch x:Name="StartTimeAllDay" Grid.Row="2" Margin="20 10" FontSize="18" TabIndex="1" ManipulationMode="Rotate" VerticalContentAlignment="Center"                                                  
                                          Style="{StaticResource ToggleSwitchStyle}"
                                                  OffContent="{Binding [All_Day], RelativeSource={RelativeSource TemplatedParent}}" 
                                                  OnContent="{Binding [All_Day], RelativeSource={RelativeSource TemplatedParent}}" 
                                                  Foreground="White">
                            </ToggleSwitch>

                            <ComboBox x:Name="starttimezone" Grid.Row="3" Margin="20 0" Background="Transparent" FontSize="16"
                                       IsEnabled="{Binding IsOn, ElementName=StartTimeAllDay, Mode=TwoWay,Converter={StaticResource BooltoBool}}"
                                      ItemsSource="{Binding TimeZoneCollection, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      SelectedItem="{Binding StartTimeZone,  RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"  
                                      DisplayMemberPath="TimeZoneValue"/>

                            <Grid Grid.Row="4" Background="#2D2D2D">
                                <Grid Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top">
                                    <TextBlock x:Name="StartOptionsBlock" Margin="10 -10 20 0" FontSize="22" FontWeight="ExtraBold" Text="..." 
                                               Width="100" Height="50" TextAlignment="Right" CharacterSpacing="100"
                                               Foreground="White">
                                    </TextBlock>
                                </Grid>

                                <Grid HorizontalAlignment="Center" Margin="0 10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <AppBarButton x:Name="StartStackPanel_Done" Grid.Column="0" IsCompact="True" Width="80" Icon="Save"
                                              Label="{Binding [Save], RelativeSource={RelativeSource TemplatedParent}}"
                                              Foreground="White"
                                             IsEnabled="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}">
                                    </AppBarButton>

                                    <AppBarButton x:Name="StartStackPanel_Cancel" Grid.Column="1" IsCompact="True" Width="80" Icon="Cancel"
                                              Label="{Binding [Cancel], RelativeSource={RelativeSource TemplatedParent}}"
                                              Foreground="White"
                                             IsEnabled="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}">
                                    </AppBarButton>
                                </Grid>
                            </Grid>
                        </Grid>

                        <Grid x:Name="EndStackPanel"
                              Background="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}" 
                              Visibility="{Binding EndStackPanelVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.05*"/>
                                <RowDefinition Height="0.6*"/>
                                <RowDefinition Height="0.1*"/>
                                <RowDefinition Height="0.1*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Text="{Binding [End_Date], RelativeSource={RelativeSource TemplatedParent}}" Margin="20 0" FontSize="17" FontFamily="Segoe UI" FontWeight="Normal"/>

                            <navigation:SfTabControl x:Name="EndDateTabControl" Grid.Row="1" Margin="0" SelectedIndex="0">
                                <navigation:SfTabItem Header="{Binding [Date], RelativeSource={RelativeSource TemplatedParent}}">
                                    <syncfusion:SfDatePicker x:Name="Enddate" Background="Transparent" BorderBrush="#FFB2B2B2" BorderThickness="0" VerticalAlignment="Center"
                                                             Style="{StaticResource DatePickerStyle}" AccentBrush="Blue"
                                                             Value="{Binding end, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
                                                             Foreground="White"                                                                        
                                                             FontSize="18" FormatString="MMMM - d - dddd - yyyy"/>
                                </navigation:SfTabItem>

                                <navigation:SfTabItem Visibility="{Binding IsOn, ElementName=EndTimeAllDay, Converter={StaticResource BooltoVis}, ConverterParameter=Inverse}">
                                    <navigation:SfTabItem.Header>
                                        <TextBlock Text="{Binding [Time], RelativeSource={RelativeSource TemplatedParent}}" 
                                                   Visibility="{Binding IsOn, ElementName=EndTimeAllDay, Converter={StaticResource BooltoVis}, ConverterParameter=Inverse}"/>
                                    </navigation:SfTabItem.Header>
                                    <syncfusion:SfTimePicker x:Name="Endtime" Background="Transparent" BorderBrush="#FFB2B2B2" BorderThickness="0"
                                                             Style="{StaticResource TimePickerStyle}" AccentBrush="Blue"
                                                             IsEnabled="{Binding EndDateEnable, RelativeSource={RelativeSource TemplatedParent}}" 
                                                             Foreground="White"                                                                        
                                                             Value="{Binding end, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
                                                             FontSize="18" FormatString="hh : mm   tt" SelectorFormatString="h:m:t"/>
                                </navigation:SfTabItem>
                            </navigation:SfTabControl>

                            <ToggleSwitch x:Name="EndTimeAllDay" Grid.Row="2" Margin="20 10" FontSize="18" TabIndex="1" ManipulationMode="Rotate" VerticalContentAlignment="Center"                                                  
                                          Style="{StaticResource ToggleSwitchStyle}"
                                          OffContent="{Binding [All_Day], RelativeSource={RelativeSource TemplatedParent}}" 
                                          OnContent="{Binding [All_Day], RelativeSource={RelativeSource TemplatedParent}}" 
                                          Foreground="White">
                            </ToggleSwitch>

                            <ComboBox x:Name="endtimezone" Grid.Row="3" Margin="20 0" Background="Transparent" FontSize="16" 
                                          ItemsSource="{Binding TimeZoneCollection, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                          IsEnabled="{Binding IsOn, ElementName=EndTimeAllDay, Mode=TwoWay,Converter={StaticResource BooltoBool}}"
                                          SelectedItem="{Binding EndTimeZone,  RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                          DisplayMemberPath="TimeZoneValue"/>

                            <Grid Grid.Row="4" Background="#2D2D2D">
                                <Grid Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top">
                                    <TextBlock x:Name="EndOptionsBlock" Margin="10 -10 20 0" FontSize="22" FontWeight="ExtraBold" Text="..." 
                                               Width="100" Height="50" TextAlignment="Right" CharacterSpacing="100"
                                               Foreground="White">
                                    </TextBlock>
                                </Grid>

                                <Grid HorizontalAlignment="Center" Margin="0 10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <AppBarButton x:Name="EndStackPanel_Done" Grid.Column="0" IsCompact="True" Width="80" Icon="Save"
                                              Label="{Binding [Save], RelativeSource={RelativeSource TemplatedParent}}"
                                              Foreground="White"
                                            IsEnabled="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}">
                                    </AppBarButton>

                                    <AppBarButton x:Name="EndStackPanel_Cancel" Grid.Column="1" IsCompact="True" Width="80" Icon="Cancel"
                                              Label="{Binding [Cancel], RelativeSource={RelativeSource TemplatedParent}}"
                                              Foreground="White"
                                        IsEnabled="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}">
                                    </AppBarButton>
                                </Grid>
                            </Grid>
                        </Grid>

                        <Grid x:Name="RecursiveStackPanel"
                              Background="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}" 
                              IsHitTestVisible="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}"
                              Visibility="{Binding RecursiveStackPanelVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" FontSize="20" VerticalAlignment="Center" Margin="0 10"
                                       Text="{Binding [Recurrence], RelativeSource={RelativeSource TemplatedParent}}" 
                                       Foreground="White"/>


                            <ComboBox x:Name="RecurrenceComboBox" Grid.Row="1" Margin="0 0" FontSize="18" HorizontalAlignment="Stretch"
                                          Foreground="White"/>

                            <ScrollViewer x:Name="RecurrenceScrollViewer" Grid.Row="2" VerticalScrollBarVisibility="Auto" ZoomMode="Disabled">
                                <StackPanel>
                                    <StackPanel x:Name="DailyStackPanel" 
                                            Visibility="{Binding RecurrenceDaily, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooltoVis}, Mode=TwoWay}">
                                        <StackPanel Orientation="Horizontal" Margin="10 10">
                                            <RadioButton x:Name="EveryXDays" GroupName="RecSubDaily" MinWidth="80" FontSize="15" 
                                                                     Content="{Binding [Every], RelativeSource={RelativeSource TemplatedParent}}"  
                                                                     Foreground="White"  Background="Transparent"
                                                                     IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsDailyEveryNDays, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"/>

                                            <syncfusion:SfNumericUpDown x:Name="EveryDayGap" Height="40" VerticalAlignment="Center" Foreground="Black"  
                                                                        IsEnabled="{Binding IsChecked, ElementName=EveryXDays, Mode=TwoWay}" 
                                                                        Minimum="1" Maximum="1000" FormatString="0" AutoReverse="false" Background="LightGray"
                                                                        Value="{Binding EditedAppointment.RecurrenceProperites.DailyNDays, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                                                        AccentBrush="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}"/>

                                            <TextBlock x:Name="DaysTextBlock" Height="30" Margin="0" FontSize="15" VerticalAlignment="Center"
                                                       Text="{Binding [Day(s)], RelativeSource={RelativeSource TemplatedParent}}"
                                                       Foreground="White"/>
                                        </StackPanel>

                                        <RadioButton x:Name="EveryWeekDay" GroupName="RecSubDaily" FontSize="15"  Margin="10 0"
                                                                 Foreground="White"  Background="Transparent"
                                                                 Content="{Binding [EveryWeekDays], RelativeSource={RelativeSource TemplatedParent}}"    
                                                                 IsChecked="{Binding ElementName=EveryXDays, Path=IsChecked, Mode=TwoWay, Converter={StaticResource BooltoBool}}"/>
                                    </StackPanel>

                                    <StackPanel x:Name="WeeklyStackPanel" 
                                            Visibility="{Binding RecurrenceWeekly, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooltoVis}, Mode=TwoWay}">
                                        <StackPanel Orientation="Horizontal" Margin="10 10">
                                            <TextBlock Height="30" Width="90" FontSize="15" VerticalAlignment="Center"
                                                                   Text="{Binding [RecurEvery], RelativeSource={RelativeSource TemplatedParent}}"  
                                                                   Foreground="White"  FontFamily="Segoe UI" FontWeight="Normal"/>
                                            <StackPanel Width="130">
                                            <syncfusion:SfNumericUpDown x:Name="EveryWeekGap" Height="40" Background="LightGray" VerticalAlignment="Center" Foreground="Black"
                                                                                    Minimum="1" Maximum="1000" FormatString="0" AutoReverse="false" 
                                                                                    Value="{Binding EditedAppointment.RecurrenceProperites.WeeklyEveryNWeeks, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                                                                    AccentBrush="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}"/>

                                            </StackPanel>
                                                <TextBlock Height="30"  FontSize="15" VerticalAlignment="Center"
                                                                   Text="{Binding [Week(s)on], RelativeSource={RelativeSource TemplatedParent}}" 
                                                                   Foreground="White"/>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal" Margin="10,10,0,0">
                                            <CheckBox x:Name="sunday" FontSize="15"  BorderThickness="1"  Width="130"
                                                                  Content="{Binding [Sunday], RelativeSource={RelativeSource TemplatedParent}}" 
                                                                  Foreground="White" Background="Transparent"
                                                                  IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsWeeklySunday, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"/>

                                            <CheckBox x:Name="monday" FontSize="15" BorderThickness="1" 
                                                                  Content="{Binding [Monday], RelativeSource={RelativeSource TemplatedParent}}" 
                                                                  Foreground="White" Background="Transparent"
                                                                  IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsWeeklyMonday, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"/>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal" Margin="10,10,0,0">
                                            <CheckBox x:Name="tuesday" FontSize="15"  BorderThickness="1"  Width="130"
                                                                  Content="{Binding [Tuesday], RelativeSource={RelativeSource TemplatedParent}}"
                                                                  Foreground="White"  Background="Transparent"
                                                                  IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsWeeklyTuesday, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"/>

                                            <CheckBox x:Name="wednesday" FontSize="15" BorderThickness="1"
                                                                  Content="{Binding [Wednesday], RelativeSource={RelativeSource TemplatedParent}}" 
                                                                  Foreground="White" Background="Transparent" 
                                                                  IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsWeeklyWednesday, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"/>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal" Margin="10,10,0,0">
                                            <CheckBox x:Name="thursday" FontSize="15"  BorderThickness="1" Width="130"
                                                                  Content="{Binding [Thursday], RelativeSource={RelativeSource TemplatedParent}}" 
                                                                  Foreground="White"   Background="Transparent"
                                                                  IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsWeeklyThursday, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"/>

                                            <CheckBox x:Name="friday" FontSize="15" BorderThickness="1"
                                                                  Content="{Binding [Friday], RelativeSource={RelativeSource TemplatedParent}}" 
                                                                  Foreground="White" Background="Transparent" 
                                                                  IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsWeeklyFriday, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"/>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal" Margin="10,10,0,0">
                                            <CheckBox x:Name="saturday" FontSize="15" BorderThickness="1"
                                                                  Content="{Binding [Saturday], RelativeSource={RelativeSource TemplatedParent}}" 
                                                                  Foreground="White"  Background="Transparent"
                                                                  IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsWeeklySaturday, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"/>
                                        </StackPanel>
                                    </StackPanel>

                                    <StackPanel x:Name="MonthlyStackPanel" 
                                            Visibility="{Binding RecurrenceMonthly, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooltoVis}, Mode=TwoWay}">
                                        <StackPanel Orientation="Horizontal" Margin="10 10">
                                            <TextBlock Height="30" Width="90" FontSize="15" VerticalAlignment="Center"
                                                                   Text="{Binding [RecurEvery], RelativeSource={RelativeSource TemplatedParent}}"  
                                                                   Foreground="White"/>
                                            <StackPanel Width="130">
                                                <syncfusion:SfNumericUpDown x:Name="EveryMonthGap" Height="40" Background="LightGray" VerticalAlignment="Center" Foreground="Black"
                                                                                    Minimum="1" Maximum="1000" FormatString="0" AutoReverse="false"
                                                                                    Value="{Binding EditedAppointment.RecurrenceProperites.MonthlyEveryNMonths, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                                                                    AccentBrush="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            </StackPanel>
                                            <TextBlock Height="30" FontSize="15" VerticalAlignment="Center"
                                                                   Text="{Binding [Month(s)on], RelativeSource={RelativeSource TemplatedParent}}" 
                                                                   Foreground="White"/>
                              
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal" Margin="10 0">
                                            <StackPanel Width="65">
                                            <RadioButton x:Name="EveryXMonths" GroupName="RecSubMontly" MinWidth="100" FontSize="15"
                                                                     Content="{Binding [Day], RelativeSource={RelativeSource TemplatedParent}}"
                                                                     IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsMonthlySpecific, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                                     Foreground="White" Background="Transparent"/>
                                            </StackPanel>
                                            <ComboBox x:Name="EveryMonthDay" Width="120" FontSize="15" Foreground="White" Margin="2 0 0 0"
                                                                  SelectedIndex="{Binding EditedAppointment.RecurrenceProperites.MonthlySpecificMonthDay, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay, Converter={StaticResource ValuetoIndex}}">
                                                <ComboBox.Items>
                                                    <ComboBoxItem Content="1"/>
                                                    <ComboBoxItem Content="2"/>
                                                    <ComboBoxItem Content="3"/>
                                                    <ComboBoxItem Content="4"/>
                                                    <ComboBoxItem Content="5"/>
                                                    <ComboBoxItem Content="6"/>
                                                    <ComboBoxItem Content="7"/>
                                                    <ComboBoxItem Content="8"/>
                                                    <ComboBoxItem Content="9"/>
                                                    <ComboBoxItem Content="10"/>
                                                    <ComboBoxItem Content="11"/>
                                                    <ComboBoxItem Content="12"/>
                                                    <ComboBoxItem Content="13"/>
                                                    <ComboBoxItem Content="14"/>
                                                    <ComboBoxItem Content="15"/>
                                                    <ComboBoxItem Content="16"/>
                                                    <ComboBoxItem Content="17"/>
                                                    <ComboBoxItem Content="18"/>
                                                    <ComboBoxItem Content="19"/>
                                                    <ComboBoxItem Content="20"/>
                                                    <ComboBoxItem Content="21"/>
                                                    <ComboBoxItem Content="22"/>
                                                    <ComboBoxItem Content="23"/>
                                                    <ComboBoxItem Content="24"/>
                                                    <ComboBoxItem Content="25"/>
                                                    <ComboBoxItem Content="26"/>
                                                    <ComboBoxItem Content="27"/>
                                                    <ComboBoxItem Content="28"/>
                                                    <ComboBoxItem Content="29"/>
                                                    <ComboBoxItem Content="30"/>
                                                    <ComboBoxItem Content="31"/>
                                                </ComboBox.Items>
                                            </ComboBox>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal" Margin="10 0">
                                            <StackPanel Width="65">
                                                <RadioButton x:Name="EveryMonth" GroupName="RecSubMontly" MinWidth="80" FontSize="15"
                                                                     Content="{Binding [The], RelativeSource={RelativeSource TemplatedParent}}" 
                                                                     IsChecked="{Binding ElementName=EveryXMonths, Path=IsChecked, Mode=TwoWay, Converter={StaticResource BooltoBool}}"
                                                                     Foreground="White" Background="Transparent"/>
                                            </StackPanel>
                                            <ComboBox x:Name="Howmanyth" Width="120" FontSize="15" Foreground="White"
                                                                  SelectedIndex="{Binding EditedAppointment.RecurrenceProperites.MonthlyNthWeek, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay, Converter={StaticResource ValuetoIndex}}">
                                                <ComboBox.Items>
                                                    <ComboBoxItem Content="{Binding [First], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Second], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Third], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Fourth], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Last],RelativeSource={RelativeSource TemplatedParent}}"   />
                                                </ComboBox.Items>
                                            </ComboBox>

                                            <ComboBox x:Name="Weekday" Margin="15 0 0 0" FontSize="15" Foreground="White"
                                                                  SelectedIndex="{Binding EditedAppointment.RecurrenceProperites.MonthlyWeekDay, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}">
                                                <ComboBox.Items>
                                                    <ComboBoxItem Content="{Binding [Sunday], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Monday], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Tuesday], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Wednesday], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Thursday], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Friday], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Saturday], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </ComboBox.Items>
                                            </ComboBox>
                                        </StackPanel>
                                    </StackPanel>

                                    <StackPanel x:Name="YearlyStackPanel" 
                                            Visibility="{Binding RecurrenceYearly, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooltoVis}, Mode=TwoWay}">
                                        <StackPanel Orientation="Horizontal" Margin="10 10">
                                            <TextBlock Height="30" Width="100" FontSize="15" VerticalAlignment="Center"
                                                                   Text="{Binding [RecurEvery], RelativeSource={RelativeSource TemplatedParent}}"  
                                                                   Foreground="White"/>
                                            <StackPanel Width="130">
                                                <syncfusion:SfNumericUpDown x:Name="EveryYearGap" Height="40" Background="LightGray" VerticalAlignment="Center" Foreground="Black" 
                                                                                    Minimum="1" Maximum="1000" FormatString="0" AutoReverse="false"
                                                                                    Value="{Binding EditedAppointment.RecurrenceProperites.YearlyEveryNYears, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                                                                    AccentBrush="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            </StackPanel>

                                            <TextBlock Height="30" FontSize="15" VerticalAlignment="Center"
                                                                   Text="{Binding [Year(s)on], RelativeSource={RelativeSource TemplatedParent}}" 
                                                                   Foreground="White"/>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal" Margin="10 0">
                                            <StackPanel Width="65">
                                                <RadioButton x:Name="SpecificDate" GroupName="RecSubYearly" MinWidth="100" FontSize="15"
                                                                     Content="{Binding [on], RelativeSource={RelativeSource TemplatedParent}}"
                                                                     IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsYearlySpecific, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                                     Foreground="White" Background="Transparent"/>
                                            </StackPanel>
                                            <ComboBox x:Name="YrSpMonth" Width="120" FontSize="15" Foreground="White"
                                                                  SelectedIndex="{Binding EditedAppointment.RecurrenceProperites.YearlySpecificMonth, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay, Converter={StaticResource ValuetoIndex}}">
                                                <ComboBox.Items>
                                                    <ComboBoxItem Foreground="White" Content="{Binding [January], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [February], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [March], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [April], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [May], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [June], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [July], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [August], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [September], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [October], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [November], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [December], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </ComboBox.Items>
                                            </ComboBox>

                                            <ComboBox x:Name="YrSpDate" Margin="15 0 0 0" FontSize="15" Foreground="White"
                                                                  SelectedIndex="{Binding EditedAppointment.RecurrenceProperites.YearlySpecificMonthDay, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay, Converter={StaticResource ValuetoIndex}}">
                                                <ComboBox.Items>
                                                    <ComboBoxItem Foreground="White" Content="1"/>
                                                    <ComboBoxItem Content="2"/>
                                                    <ComboBoxItem Content="3"/>
                                                    <ComboBoxItem Content="4"/>
                                                    <ComboBoxItem Content="5"/>
                                                    <ComboBoxItem Content="6"/>
                                                    <ComboBoxItem Content="7"/>
                                                    <ComboBoxItem Content="8"/>
                                                    <ComboBoxItem Content="9"/>
                                                    <ComboBoxItem Content="10"/>
                                                    <ComboBoxItem Content="11"/>
                                                    <ComboBoxItem Content="12"/>
                                                    <ComboBoxItem Content="13"/>
                                                    <ComboBoxItem Content="14"/>
                                                    <ComboBoxItem Content="15"/>
                                                    <ComboBoxItem Content="16"/>
                                                    <ComboBoxItem Content="17"/>
                                                    <ComboBoxItem Content="18"/>
                                                    <ComboBoxItem Content="19"/>
                                                    <ComboBoxItem Content="20"/>
                                                    <ComboBoxItem Content="21"/>
                                                    <ComboBoxItem Content="22"/>
                                                    <ComboBoxItem Content="23"/>
                                                    <ComboBoxItem Content="24"/>
                                                    <ComboBoxItem Content="25"/>
                                                    <ComboBoxItem Content="26"/>
                                                    <ComboBoxItem Content="27"/>
                                                    <ComboBoxItem Content="28"/>
                                                    <ComboBoxItem Content="29"/>
                                                    <ComboBoxItem Content="30"/>
                                                    <ComboBoxItem Content="31"/>
                                                </ComboBox.Items>
                                            </ComboBox>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal" Margin="10 0" >
                                            <StackPanel Width="65">
                                                <RadioButton x:Name="EveryYear" GroupName="RecSubYearly" MinWidth="100" FontSize="15"
                                                                     Content="{Binding [The], RelativeSource={RelativeSource TemplatedParent}}"
                                                                     IsChecked="{Binding ElementName=SpecificDate, Path=IsChecked, Mode=TwoWay, Converter={StaticResource BooltoBool}}"
                                                                     Foreground="White" Background="Transparent"/>
                                            </StackPanel>
                                            <ComboBox x:Name="YrHowmanyth" Width="120" FontSize="15" Foreground="White" 
                                                                  SelectedIndex="{Binding EditedAppointment.RecurrenceProperites.YearlyNthWeek, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay, Converter={StaticResource ValuetoIndex}}">
                                                <ComboBox.Items>
                                                    <ComboBoxItem Content="{Binding [First], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Second], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Third], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Fourth], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Last],RelativeSource={RelativeSource TemplatedParent}}"   />
                                                </ComboBox.Items>
                                            </ComboBox>

                                            <ComboBox x:Name="YrWeekday" Margin="15 0 0 0" FontSize="15"  Foreground="White"
                                                                  SelectedIndex="{Binding EditedAppointment.RecurrenceProperites.YearlyWeekDay, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay, Converter={StaticResource ValuetoIndex}}">
                                                <ComboBox.Items>
                                                    <ComboBoxItem Content="{Binding [Sunday], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Monday], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Tuesday], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Wednesday], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Thursday], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Friday], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [Saturday], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </ComboBox.Items>
                                            </ComboBox>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal" Margin="10 0">
                                            <TextBlock Height="30"  Margin="35 0 0 0" FontSize="15" VerticalAlignment="Center"
                                                                   Text="{Binding [of], RelativeSource={RelativeSource TemplatedParent}}" 
                                                                   Foreground="White"/>

                                            <ComboBox x:Name="YrMonth" Width="120" FontSize="15" Foreground="White" Margin="20 0 0 0"
                                                                  SelectedIndex="{Binding EditedAppointment.RecurrenceProperites.YearlyGenericMonth, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay, Converter={StaticResource ValuetoIndex}}">
                                                <ComboBox.Items>
                                                    <ComboBoxItem Content="{Binding [January], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [February], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [March], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [April], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [May], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [June], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [July], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [August], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [September], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [October], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [November], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <ComboBoxItem Content="{Binding [December], RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </ComboBox.Items>
                                            </ComboBox>
                                        </StackPanel>
                                    </StackPanel>

                                    <Rectangle Margin="5" Height="1" StrokeThickness=".5" Stroke="White" Opacity="0.5"/>

                                    <StackPanel x:Name="RecurrenceRange" Margin="10 10 20 0" Orientation="Vertical" HorizontalAlignment="Left">
                                        <TextBlock Height="40" FontSize="15" VerticalAlignment="Center"
                                                               Text="{Binding [Range_Of_Recurrence], RelativeSource={RelativeSource TemplatedParent}}" 
                                                               Foreground="White"/>

                                        <StackPanel Orientation="Horizontal" Height="45">
                                            <TextBlock  FontSize="15" VerticalAlignment="Center"
                                                                   Text="{Binding [Start_Date], RelativeSource={RelativeSource TemplatedParent}}" 
                                                                   Foreground="White"/>
                                            <syncfusion:SfDatePicker x:Name="RangeStartdate" Margin="2 0 0 0" Height="40" Width="200" Background="#FFB2B2B2" BorderBrush="#FFB2B2B2" BorderThickness="0" FontSize="17"
                                                                     SelectorStyle="{StaticResource DefaultDateSelectorStyle}" AccentBrush="Blue"
                                                                     Value="{Binding EditedAppointment.RecurrenceProperites.RangeStartDate, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"/>
                                        </StackPanel>

                                        <StackPanel Orientation="Vertical" >
                                            <StackPanel Orientation="Horizontal" Margin="0 10">
                                                <StackPanel Width="65">
                                                    <RadioButton x:Name="EndAfter" GroupName="Range" MinWidth="130" FontSize="15"
                                                                         Content="{Binding [End_After], RelativeSource={RelativeSource TemplatedParent}}"
                                                                         IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsRangeRecurrenceCount, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" 
                                                                         Foreground="White" Background="Transparent"/>
                                                </StackPanel>
                                                <syncfusion:SfNumericUpDown Margin="2 0 0 0" x:Name="EndAfterCount" Height="40" Background="LightGray" VerticalAlignment="Center" Foreground="Black"
                                                                                        Minimum="1" Maximum="1000" FormatString="0" AutoReverse="false"
                                                                                        Value="{Binding EditedAppointment.RecurrenceProperites.RangeRecurrenceCount, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                                                                        AccentBrush="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}"/>

                                                <TextBlock x:Name="RecurrenceTextBlock" Height="30" FontSize="15" VerticalAlignment="Center" 
                                                                       Text="{Binding [Recurrence], RelativeSource={RelativeSource TemplatedParent}}"  
                                                                       Foreground="White"/>
                                            </StackPanel>


                                            <StackPanel Orientation="Horizontal" Margin="0 10">
                                                <StackPanel Width="65">
                                                    <RadioButton x:Name="EndBy" GroupName="Range" MinWidth="130" FontSize="15"
                                                                         Content="{Binding [End_By], RelativeSource={RelativeSource TemplatedParent}}"
                                                                         IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsRangeEndDate, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                                         Foreground="White" Background="Transparent"/>
                                                </StackPanel>
                                                <syncfusion:SfDatePicker Margin="2 0 0 0" x:Name="RangeEnddate" Height="40" Width="200" Background="#FFB2B2B2" BorderBrush="#FFB2B2B2" BorderThickness="0" FontSize="17"
                                                                         SelectorStyle="{StaticResource DefaultDateSelectorStyle}" AccentBrush="Blue"
                                                                         Value="{Binding EditedAppointment.RecurrenceProperites.RangeEndDate, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"/>
                                            </StackPanel>

                                                <RadioButton x:Name="NoEndDate" GroupName="Range" FontSize="15" Margin="0 10"
                                                                     Content="{Binding [No_End_Date], RelativeSource={RelativeSource TemplatedParent}}" 
                                                                     IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsRangeNoEndDate, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                                     Foreground="White" Background="Transparent"/>
                                        </StackPanel>
                                    </StackPanel>
                              
                                </StackPanel>
                            </ScrollViewer>

                            <Grid Grid.Row="3" Background="#2D2D2D">
                                <Grid Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top">
                                    <TextBlock x:Name="RecursiveOptionsBlock" Margin="10 -10 20 0" FontSize="22" FontWeight="ExtraBold" Text="..." 
                                               Width="100" Height="50" TextAlignment="Right" CharacterSpacing="100"
                                               Foreground="White">
                                    </TextBlock>
                                </Grid>

                                <Grid HorizontalAlignment="Center" Margin="0 10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <AppBarButton x:Name="RecursiveStackPanel_Done" Grid.Column="0" IsCompact="True" Width="80" Icon="Save"
                                              Label="{Binding [Save], RelativeSource={RelativeSource TemplatedParent}}"
                                              Foreground="White"
                                              IsEnabled="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}">
                                    </AppBarButton>

                                    <AppBarButton x:Name="RecursiveStackPanel_Cancel" Grid.Column="1" IsCompact="True" Width="80" Icon="Cancel"
                                              Label="{Binding [Cancel], RelativeSource={RelativeSource TemplatedParent}}"
                                              Foreground="White"
                                            IsEnabled="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}">
                                    </AppBarButton>
                                </Grid>
                            </Grid>
                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="MouseDown">
                                    <Storyboard x:Name="down">
                                        <DragItemThemeAnimation TargetName="StartGrid" Duration="00:00:0.5"  FillBehavior="Stop"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name ="MouseUp">
                                    <Storyboard x:Name="up">
                                        <PointerUpThemeAnimation Duration="00:00:0.1"  TargetName="StartStackPanel"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="StartOnClick">
                                    <Storyboard x:Name="Storyboard1">
                                        <PopInThemeAnimation Duration="00:10:00" FromHorizontalOffset="-3000" FromVerticalOffset="0" TargetName="StartStackPanel"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="EndOnClick">
                                    <Storyboard x:Name="Storyboard2">
                                        <PopInThemeAnimation Duration="00:10:00" FromHorizontalOffset="-3000" FromVerticalOffset="0" TargetName="EndStackPanel"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RecurrenceOn">
                                    <Storyboard x:Name="Storyboard4">
                                        <PopInThemeAnimation Duration="00:10:00" FromVerticalOffset="-1000" FromHorizontalOffset="0" TargetName="RecursiveStackPanel"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseLeft">
                                    <Storyboard x:Name="Storyboard3">
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- EndRegion -->

</ResourceDictionary>

