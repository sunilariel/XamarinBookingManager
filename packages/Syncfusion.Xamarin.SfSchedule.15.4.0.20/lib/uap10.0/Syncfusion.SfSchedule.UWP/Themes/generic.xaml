<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:local="using:Syncfusion.UI.Xaml.Schedule"
                    xmlns:radialmenu="using:Syncfusion.UI.Xaml.Controls.Navigation"
                    xmlns:syncfusion="using:Syncfusion.UI.Xaml.Controls.Input">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ms-appx:///Syncfusion.SfSchedule.UWP/Themes/ScheduleDaysViewresources.xaml" />
        <ResourceDictionary Source="ms-appx:///Syncfusion.SfSchedule.UWP/Themes/ScheduleAppointmentResources.xaml" />
        <ResourceDictionary Source="ms-appx:///Syncfusion.SfSchedule.UWP/Themes/ScheduleMonthViewResources.xaml" />
        <ResourceDictionary Source="ms-appx:///Syncfusion.SfSchedule.UWP/Themes/ScheduleTimeLineViewResources.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Light">
            <SolidColorBrush x:Key="TickStroke" Color="LightGray" />
            <SolidColorBrush x:Key="ScheduleBackground" Color="White" />
            <SolidColorBrush x:Key="NonWorkingHourBrush" Color="#FFF9F9F9" />
            <SolidColorBrush x:Key="DayViewVerticalLineStroke" Color="LightGray" />
            <SolidColorBrush x:Key="AllDayAppointmentPanelBrush" Color="White" />
            <SolidColorBrush x:Key="MonthViewLineStroke" Color="LightGray" />
            <SolidColorBrush x:Key="ButtonMouseOver" Color="#FFDEDEDE" />
            <SolidColorBrush x:Key="ButtonPointerPressed" Color="#FFCCCCCC" />
            <SolidColorBrush x:Key="ArrowFill" Color="Black" />
        </ResourceDictionary>
        <ResourceDictionary x:Key="Dark">
            <SolidColorBrush x:Key="TickStroke" Color="Black" />
            <SolidColorBrush x:Key="ScheduleBackground" Color="#FF1A1A1A" />
            <SolidColorBrush x:Key="NonWorkingHourBrush" Color="#FF212121" />
            <SolidColorBrush x:Key="DayViewVerticalLineStroke" Color="Black" />
          <SolidColorBrush x:Key="AllDayAppointmentPanelBrush" Color="#FF1A1A1A" />
            <SolidColorBrush x:Key="MonthViewLineStroke" Color="Black" />
            <SolidColorBrush x:Key="ButtonMouseOver" Color="#FF373737" />
            <SolidColorBrush x:Key="ButtonPointerPressed" Color="#FF262626" />
            <SolidColorBrush x:Key="ArrowFill" Color="White" />
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>
    <local:BoolToVisibilityConverter x:Key="BooltoVis"/>
    <local:BoolToBoolConverter x:Key="BooltoBool"/>
    <local:ValueToIndexConverter x:Key="ValuetoIndex"/>

    <SolidColorBrush x:Key="ButtonPointerover" Color="#FF929292" />
    <SolidColorBrush x:Key="pointerpressed" Color="Black" />
    <SolidColorBrush x:Key="pointerdisabled" Color="#FF2E2E2E" />

    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FF767676"/>
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Button.Foreground" Storyboard.TargetName="ContentContainer">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#FFFFFFFF"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonBackground" Storyboard.TargetProperty="Background" >
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPointerover}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentContainer"
                                                                       Storyboard.TargetProperty="Button.Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#FFFFFFFF" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonBackground"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource pointerpressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentContainer"
                                                                       Storyboard.TargetProperty="Button.Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#FF000000" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonBackground"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource pointerdisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <ContentControl x:Name="ContentContainer"  ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Add" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation  Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                        <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF42C4F5" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="LightGray" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                        <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" />

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="path" Width="63.956" Stroke="#FF303030" Stretch="Fill" Height="55.387" Fill="White" Data="F1M16.277,54.887L0.577,27.694 16.277,0.5 47.677,0.5 63.378,27.694 47.677,54.887z"/>
                        <Path x:Name="path1" Width="25" UseLayoutRounding="False" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Opacity="1" Height="25" Fill="White" Data="M19.833,0L32.5,0 32.5,19.833999 52.334,19.833999 52.334,32.500999 32.5,32.500999 32.5,52.333 19.833,52.333 19.833,32.500999 0,32.500999 0,19.833999 19.833,19.833999z"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Drag" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF42C4F5" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="LightGray" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                        <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" />

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="path" Width="63.956" Stroke="#FF303030" Height="55.387" Fill="White" Data="F1M16.277,54.887L0.577,27.694 16.277,0.5 47.677,0.5 63.378,27.694 47.677,54.887z"/>
                        <Path x:Name="path1" Width="22" Height="31" UseLayoutRounding="False" Stretch="Fill" RenderTransformOrigin="0.54,0.5" Opacity="1" Fill="White" Data="M15.981499,13.747002C18.05169,13.747002,19.73,15.426697,19.73,17.496992L19.73,29.981703 19.779463,29.852098C20.305013,28.579597 21.683165,27.672002 23.300499,27.672002 25.370689,27.672002 27.049,29.159006 27.049,30.994911L27.049,32.286549 27.098465,32.167931C27.624022,31.003298 29.002193,30.172002 30.619551,30.172002 32.689867,30.172002 34.368,31.533998 34.368,33.213693L34.368,42.065532 34.802896,37.581322C34.973396,35.815634 36.543791,34.521343 38.310686,34.693342 40.076281,34.862541 41.370577,36.435431 41.198677,38.201019L39.531998,55.4002 39.531998,56.770905C39.531998,60.763145,36.295256,64,32.301731,64L19.449066,64C16.080709,64,13.24998,61.695639,12.447613,58.577476L12.385349,58.30774 2.4728718,41.726652C1.7229061,40.474153 2.3947554,38.692953 3.9740238,37.750153 5.5534835,36.807454 7.4387784,37.057454 8.1887436,38.310053L12.233,45.075792 12.233,17.496992C12.232999,15.426697,13.91121,13.747002,15.981499,13.747002z M2.4651451,5.512001C3.0964394,5.512001,3.7279081,5.7528877,4.2096834,6.2346535L8.3473825,10.372528C9.3108721,11.336092 9.3108721,12.895937 8.3473825,13.859404 7.3840122,14.822868 5.821506,14.822868 4.8593559,13.859404L0.7216568,9.7214584C-0.2405529,8.7580528 -0.2405529,7.1982384 0.7216568,6.2346535 1.2027321,5.7528877 1.8338509,5.512001 2.4651451,5.512001z M29.787703,5.512001C30.419058,5.512001 31.050566,5.7528877 31.532339,6.2346535 32.495886,7.1982384 32.495886,8.7580528 31.532339,9.7214584L27.394133,13.859404C26.430585,14.822868 24.869307,14.822868 23.905759,13.859404 22.943411,12.895937 22.943411,11.336092 23.905759,10.372528L28.043965,6.2346535C28.525139,5.7528877,29.156345,5.512001,29.787703,5.512001z M16.182049,0C17.543967,0,18.648,1.1041412,18.647999,2.466156L18.647999,8.3178291C18.648,9.6823425 17.543967,10.784 16.182049,10.784 14.820132,10.784 13.715999,9.6823425 13.716,8.3178291L13.716,2.466156C13.715999,1.1041412,14.820132,0,16.182049,0z" Margin="19.5,11.5,22.5,12.5">
                            <Path.RenderTransform>
                                <CompositeTransform Rotation="-14.473"/>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Delete" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF42C4F5" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="LightGray" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                        <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" />

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="path" Width="63.956" Stroke="#FF303030" Height="55.387" Fill="White" Data="F1M16.277,54.887L0.577,27.694 16.277,0.5 47.677,0.5 63.378,27.694 47.677,54.887z"/>
                        <Path x:Name="path1" UseLayoutRounding="False" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Opacity="1" Height="25" Fill="White" Data="M33.977998,27.684L33.977998,58.102997 41.373998,58.102997 41.373998,27.684z M14.841999,27.684L14.841999,58.102997 22.237998,58.102997 22.237998,27.684z M4.0319996,22.433001L52.183,22.433001 52.183,63.999001 4.0319996,63.999001z M15.974,0L40.195001,0 40.195001,7.7260003 56.167001,7.7260003 56.167001,16.000999 0,16.000999 0,7.7260003 15.974,7.7260003z" Margin="23.5,14.5,23,15.5" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Edit" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF42C4F5" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="LightGray" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                        <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" />

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="path" Width="63.956" Stroke="#FF303030" Height="55.387" Fill="White" Data="F1M16.277,54.887L0.577,27.694 16.277,0.5 47.677,0.5 63.378,27.694 47.677,54.887z"/>
                        <Path x:Name="path1" UseLayoutRounding="False" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Opacity="1" Height="25" Fill="White" Data="M0,44.439791L18.98951,54.569246 0.47998798,62.66881z M17.428029,12.359973L36.955557,23.568769 21.957478,49.686174 20.847757,46.346189 15.11851,45.756407 14.138656,42.166935 8.5292659,41.966761 6.9493899,38.037481 2.4399572,38.477377z M26.812517,0.0009765625C27.350616,-0.012230873,27.875986,0.10826397,28.348372,0.3782568L42.175028,8.3180408C43.85462,9.2780154,44.234529,11.777948,43.02482,13.89789L41.375219,16.767812 21.460039,5.3381228 23.10964,2.4582005C23.979116,0.941679,25.437378,0.034730911,26.812517,0.0009765625z" Margin="29.167,15.5,25.286,14.5" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Copy" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF42C4F5" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="LightGray" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                        <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="path" Width="63.956" Stroke="#FF303030" Height="55.387" Fill="White" Data="F1M16.277,54.887L0.577,27.694 16.277,0.5 47.677,0.5 63.378,27.694 47.677,54.887z"/>
                        <Path x:Name="path1" Width="20" UseLayoutRounding="False" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Opacity="1" Height="25" Fill="White" Data="M31.687001,23.116L31.687001,31.394341C31.687001,31.394341,31.526705,36.832023,25.52624,36.359949L18.506,36.388395 18.506,49.587002 18.506001,54.153999 18.506,59.292614C18.506,59.812107,18.929218,60.233997,19.448625,60.233997L45.808704,60.233997C46.326101,60.233997,46.749998,59.812107,46.749998,59.292614L46.749998,24.057384C46.749998,23.539322,46.326101,23.116,45.808704,23.116z M20.552001,4.5669994L20.552001,14.60861C20.552001,14.60861,20.358706,21.203206,13.080177,20.631915L4.565999,20.665694 4.565999,48.4459C4.566,49.076302,5.0797424,49.587002,5.7100554,49.587002L14.742001,49.587002 14.742001,35.400336 18.161097,31.792807 18.166127,31.774705 26.474542,22.972 26.521163,22.972 29.953973,19.349999 38.822001,19.349999 38.822001,5.7076302C38.822001,5.0806808,38.309198,4.5669994,37.680792,4.5669994z M18.449971,0L37.680651,0C40.833681,0,43.391001,2.5571156,43.391001,5.707489L43.391001,19.349999 45.80884,19.349999C48.409018,19.35,50.517,21.458894,50.517,24.05704L50.517,59.292992C50.517,61.893593,48.409018,64,45.80884,64L19.448812,64C16.849223,64,14.742,61.893593,14.742001,59.292992L14.742001,54.153999 5.709774,54.153999C2.555994,54.153999,0,51.599316,0,48.445534L0,19.465691 4.1473293,15.090039 4.1532602,15.068708 14.229262,4.3929996 14.286199,4.3929996z"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Paste" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF42C4F5" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="LightGray" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" />
                                        <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" />

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="path" Width="63.956" Stroke="#FF303030" Height="55.387" Fill="White" Data="F1M16.277,54.887L0.577,27.694 16.277,0.5 47.677,0.5 63.378,27.694 47.677,54.887z"/>
                        <Path x:Name="path1" Width="20" UseLayoutRounding="False" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Opacity="1" Height="24" Fill="White" Data="M31.948999,57.859001L45.188999,57.859001 45.188999,59.699001 31.948999,59.699001z M31.948999,51.950001L45.188999,51.950001 45.188999,53.791 31.948999,53.791z M28.396044,35.408001C28.009256,35.408001,27.689001,35.726357,27.689001,36.116974L27.689001,62.648006C27.689001,63.039406,28.009256,63.357002,28.396044,63.357002L48.248085,63.357002C48.638691,63.357002,48.957001,63.039406,48.957001,62.648006L48.957001,45.402447 43.671608,45.381203C39.153995,45.736,39.033001,41.642223,39.033001,41.642223L39.033001,35.408001z M28.395853,32.571999L40.336986,32.571999 42.92213,35.299999 42.958431,35.299999 49.212662,41.928822 49.216327,41.942017 51.790001,44.657917 51.790001,62.648022C51.790001,64.605804,50.204025,66.191002,48.247158,66.191002L28.395853,66.191002C26.438854,66.191002,24.853,64.605804,24.853,62.648022L24.853,36.116901C24.853,34.16061,26.438854,32.571999,28.395853,32.571999z M23.4165,2.7189999C21.472765,2.7190001 19.896,4.211246 19.896,6.0526261 19.896,7.8918042 21.472765,9.3859997 23.4165,9.3859997 25.360433,9.3859997 26.936998,7.8918042 26.936998,6.0526261 26.936998,4.211246 25.360433,2.7190001 23.4165,2.7189999z M23.4165,0C26.836176,0,29.627563,2.5418639,29.798687,5.7406974L29.806993,6.0519996 35.229999,6.0519996 35.229999,7.9879994 46.833999,7.9879994 46.833999,34.156097 41.895698,28.945999 41.695999,28.945999 41.695999,14.389 35.229999,14.389 35.229999,20.865 11.604001,20.865 11.604001,14.389 5.136998,14.389 5.136998,59.294998 21.228,59.294998 21.228,62.648151C21.228,63.142387,21.27823,63.625092,21.373855,64.091423L21.431106,64.338997 0,64.338997 0,7.9879994 11.604001,7.9879994 11.604001,6.0519996 17.026007,6.0519996 17.034315,5.7406974C17.205442,2.5418639,19.996919,0,23.4165,0z"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="HorizontalNextTemplate" TargetType="Button">
        <Border x:Name="Root" BorderBrush="{StaticResource FlipViewButtonBorderThemeBrush}" BorderThickness="{StaticResource FlipViewButtonBorderThemeThickness}" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="PointerOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonMouseOver}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FlipViewButtonPointerOverBorderThemeBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ArrowFill}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPointerPressed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FlipViewButtonPressedBorderThemeBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ArrowFill}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="Arrow" Data="F1M0.707,20.651L0,19.944 9.619,10.326 0,0.707 0.707,0 11.033,10.326z" Fill="DarkGray" VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalPreviousTemplate" TargetType="Button">
        <Border x:Name="Root" BorderBrush="{StaticResource FlipViewButtonBorderThemeBrush}" BorderThickness="{StaticResource FlipViewButtonBorderThemeThickness}" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="PointerOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonMouseOver}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FlipViewButtonPointerOverBorderThemeBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ArrowFill}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPointerPressed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FlipViewButtonPressedBorderThemeBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ArrowFill}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path  x:Name="Arrow" Data="F1M10.325,20.651L0,10.325 10.325,0 11.032,0.707 1.414,10.325 11.032,19.944z" Fill="DarkGray" HorizontalAlignment="Center"   VerticalAlignment="Center"/>
        </Border>
    </ControlTemplate>

    <!-- Region Schedule -->

    <Style TargetType="local:SfSchedule">
        <Setter Property="MinWidth" Value="550"/>
        <Setter Property="MinHeight" Value="300"/>
        <Setter Property="Background" Value="{ThemeResource ScheduleBackground}"/>
        <Setter Property="MajorTickStroke" Value="{ThemeResource TickStroke}"/>
        <Setter Property="MinorTickStroke" Value="{ThemeResource TickStroke}"/>
        <Setter Property="NonWorkingHourBrush" Value="{ThemeResource NonWorkingHourBrush}"/>
        <Setter Property="DayViewVerticalLineStroke" Value="{ThemeResource DayViewVerticalLineStroke}"/>
        <Setter Property="MonthViewLineStroke" Value="{ThemeResource MonthViewLineStroke}"/>
      <Setter Property="AllDayAppointmentPanelBrush" Value="{ThemeResource AllDayAppointmentPanelBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:SfSchedule">
                    <Border x:Name="border"  Background="{TemplateBinding Background}" >
                        <Border.Resources>
                            <SolidColorBrush x:Key="FlipViewButtonBackgroundThemeBrush" Color="#59D5D5D5" />
                            <SolidColorBrush x:Key="FlipViewButtonBorderThemeBrush" Color="#59D5D5D5" />
                            <SolidColorBrush x:Key="FlipViewButtonForegroundThemeBrush" Color="#99000000" />
                            <SolidColorBrush x:Key="FlipViewButtonPointerOverBackgroundThemeBrush" Color="#F0D7D7D7" />
                            <SolidColorBrush x:Key="FlipViewButtonPointerOverBorderThemeBrush" Color="#9EC1C1C1" />
                            <SolidColorBrush x:Key="FlipViewButtonPointerOverForegroundThemeBrush" Color="#FF000000" />
                            <SolidColorBrush x:Key="FlipViewButtonPressedBackgroundThemeBrush" Color="#BD292929" />
                            <SolidColorBrush x:Key="FlipViewButtonPressedBorderThemeBrush" Color="#BD292929" />
                            <SolidColorBrush x:Key="FlipViewButtonPressedForegroundThemeBrush" Color="#FFFFFFFF" />
                        </Border.Resources>
                        <Grid x:Name="MainGrid" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}"
                              MaxWidth="{TemplateBinding MaxWidth}" MaxHeight="{TemplateBinding MaxHeight}">
                            <ItemsControl x:Name="Mainflip" HorizontalAlignment="Stretch">
                                <ItemsControl.Template>
                                    <ControlTemplate>
                                        <Grid>
                                            <ItemsPresenter/>
                                        </Grid>
                                    </ControlTemplate>
                                </ItemsControl.Template>
                                <ItemsControl.Items>
                                    <Grid x:Name="item1" Visibility="Collapsed">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <local:HeaderTitleBarView Grid.Row="0" x:Name="PART_Header" HorizontalAlignment="Stretch"
                                                 Visibility="{Binding HeaderVisibility,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                                   ShowCalendar="{Binding ShowCalendar, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                                  SelectedDates="{Binding Path=PrevSelectedDates,RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                        <ContentControl HorizontalContentAlignment="Stretch" x:Name="PART_MainViewItems" Margin="5" Grid.Row="1">
                                        </ContentControl>
                                    </Grid>
                                    <Grid x:Name="item2">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <local:HeaderTitleBarView x:Name="PART_Header1" Grid.Row="0" HorizontalAlignment="Stretch" 
                                                                  Visibility="{Binding HeaderVisibility,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                                                  ShowCalendar="{Binding ShowCalendar, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                                  SelectedDates="{Binding Path=CurrentSelectedDates,RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                        <ContentControl HorizontalContentAlignment="Stretch" x:Name="PART_MainViewItems1" Margin="5" Grid.Row="1"   >
                                        </ContentControl>
                                    </Grid>
                                    <Grid x:Name="item3" Visibility="Collapsed">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <local:HeaderTitleBarView x:Name="PART_Header2" Grid.Row="0" HorizontalAlignment="Stretch"
                                                                   Visibility="{Binding HeaderVisibility,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                                                  ShowCalendar="{Binding ShowCalendar, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                                  SelectedDates="{Binding Path=NextSelectedDates,RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                        <ContentControl HorizontalContentAlignment="Stretch" x:Name="PART_MainViewItems2" Margin="5" Grid.Row="1">
                                        </ContentControl>
                                    </Grid>
                                </ItemsControl.Items>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <local:LoopItemsPanel MinWidth="{Binding MinWidth, ElementName=MainGrid, RelativeSource={RelativeSource TemplatedParent}}"
                                                              MinHeight="{Binding MinHeight, ElementName=MainGrid, RelativeSource={RelativeSource TemplatedParent}}"
                                                              MaxWidth="{Binding MaxWidth, ElementName=MainGrid, RelativeSource={RelativeSource TemplatedParent}}"
                                                              MaxHeight="{Binding MaxHeight, ElementName=MainGrid, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>

                            <local:ScheduleAppointmentEditor x:Name="AppointmentEditor" Visibility="Collapsed" />
                            <Popup x:Name="RecursiveCheck" Height="100" Width="250" HorizontalAlignment="Left" VerticalAlignment="Top" >
                                <Popup.ChildTransitions>
                                    <TransitionCollection>
                                        <PopupThemeTransition />
                                    </TransitionCollection>
                                </Popup.ChildTransitions>
                                <Border BorderBrush="Black" BorderThickness="2">
                                    <Grid Height="100" Width="250" Background="#FF3A3A3A" >
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <TextBlock x:Name="RecurringEventText" Text="This is recurring event" Foreground="#FFCECECE" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                                            <Button x:Name="OpenOne" Margin="10 0 0 0" Height="40" Width="110" Content="Open One" 
                                                 Style="{StaticResource ButtonStyle}"  VerticalAlignment="Top"/>
                                            <Button x:Name="OpenSeries" Margin="10 0 10 0" Height="40" Width="110" Content="Open Series"  
                                                 Style="{StaticResource ButtonStyle}"  VerticalAlignment="Top"/>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </Popup>

                            <Canvas x:Name="DragDropCanvas" VerticalAlignment="Top" Visibility="Visible" local:Clip.ToBounds="True">
                            </Canvas>

                            <Popup x:Name="editpopup" />
                            <Popup x:Name="addnewpopup"/>

                            <Button x:Name="PreviousButtonHorizontal" HorizontalAlignment="Left" Height="40" IsTabStop="False" Template="{StaticResource HorizontalPreviousTemplate}" VerticalAlignment="Center" Width="70"/>
                            <Button x:Name="NextButtonHorizontal" HorizontalAlignment="Right" Height="40" IsTabStop="False" Template="{StaticResource HorizontalNextTemplate}" VerticalAlignment="Center" Width="70"/>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="NonAccessibleBlockTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Background="{Binding Background}">
                        <TextBlock Text="{Binding Label}" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                   FontSize="18" FontFamily="Segoe UI" FontWeight="SemiLight" Margin="0 0 30 10"/>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CurrentTimeIndicatorTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Rectangle Fill="#FF1BA1E2"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- EndRegion -->

    <!-- Region Schedule AppointmentEditor -->

    <Style TargetType="local:ScheduleAppointmentEditor">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType ="local:ScheduleAppointmentEditor">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="MouseDown">
                                    <Storyboard x:Name="down">
                                        <DragItemThemeAnimation TargetName="StartGrid" Duration="00:00:0.5"  FillBehavior="Stop" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name ="MouseUp">
                                    <Storyboard x:Name="up">
                                        <PointerUpThemeAnimation Duration="00:00:0.1"  TargetName="StartStackPanel" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="StartOnClick">
                                    <Storyboard x:Name="Storyboard1">
                                        <PopInThemeAnimation Duration="00:00:1"   FromVerticalOffset="-20" FromHorizontalOffset="0"  TargetName="StartStackPanel" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="EndOnClick">
                                    <Storyboard x:Name="Storyboard2">
                                        <PopInThemeAnimation Duration="00:00:1"   FromVerticalOffset="-20" FromHorizontalOffset="0"  TargetName="EndStackPanel" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RecurrenceOn">
                                    <Storyboard x:Name="Storyboard4">
                                        <PopInThemeAnimation Duration="00:00:1"   FromVerticalOffset="-20" FromHorizontalOffset="0"  TargetName="RecursiveStackPanel" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseLeft">
                                    <Storyboard x:Name="Storyboard3">
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="7.5*"/>
                            <ColumnDefinition Width="345"/>
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="EmptySpace">
                            <Rectangle Grid.Column="0" Fill="Transparent" Opacity="0.3" />
                        </Grid>
                        <Grid Grid.Column="1" >
                            <Grid Background="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="70"/>
                                    <RowDefinition Height="16*"/>
                                    <RowDefinition Height="3*"/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0"   Margin="40,25,40,0">
                                    <TextBlock x:Name="TitleTextBlock" Text="{Binding [AddEvent],RelativeSource={RelativeSource TemplatedParent}}" FontSize="30" 
                                                   Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}"  
                                                   FontFamily="Segoe UI" FontWeight="Light" />
                                </Grid>
                                <Grid Grid.Row="1">
                                    <ScrollViewer x:Name="ScrollView" VerticalScrollBarVisibility="Auto" ZoomMode="Disabled" Margin="0,5,0,0" >
                                        <StackPanel>
                                            <StackPanel    Margin="40,5,40,0">
                                                <StackPanel Visibility="{Binding IsWarningMsgVisible, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <TextBlock Text="Appointment's EndTime is less than StartTime. Please check With the Start Time and End Time." 
                                                   TextWrapping="Wrap" Width="auto" Height="auto" FontSize="13" Foreground="Red" 
                                                   />
                                                </StackPanel>
                                            </StackPanel>

                                            <StackPanel   Margin="0,0,0,30" >
                                                <syncfusion:SfTextBoxExt x:Name="Subject"  IsReadOnly="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooltoBool}}"
                                                                     Watermark="{Binding [Subject], RelativeSource={RelativeSource TemplatedParent}}" 
                                                                     Height="30" Margin="40,20,60,0" Background="White" BorderBrush="#FFB2B2B2"  
                                                                     TextWrapping="NoWrap" Foreground="#FF454545" FontSize="15" FontFamily="Segoe UI" 
                                                                     FontWeight="Normal"  
                                                                     Text="{Binding EditedAppointment.Subject, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" 
                                                                     HorizontalAlignment="Stretch"/>
                                                <syncfusion:SfTextBoxExt x:Name="Notes"   IsReadOnly="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooltoBool}}"
                                                                     Watermark="{Binding [Notes], RelativeSource={RelativeSource TemplatedParent}}" 
                                                                     Height="90" Margin="40,20,60,0" Background="White" BorderBrush="#FFB2B2B2"  
                                                                     TextWrapping="Wrap" AcceptsReturn="True" ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                                                     Foreground="#FF454545" FontSize="15" FontFamily="Segoe UI" FontWeight="Normal"  
                                                                     Text="{Binding EditedAppointment.Notes, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                                     HorizontalAlignment="Stretch"/>
                                                <Border x:Name="StartBorder" BorderThickness="0" IsHitTestVisible="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding StartAccordionBackground, RelativeSource={RelativeSource TemplatedParent}}" Height="30" Width="auto"  Margin="0,10,0,0">
                                                    <Grid x:Name="StartGrid" Margin="5,5,0,0" >
                                                        <Border x:Name="StartBorder1" Background="{Binding StartAccordionBackground, RelativeSource={RelativeSource TemplatedParent}}" >
                                                            <TextBlock  Height="30" Width="auto" Margin="35,0,60,0" FontSize="15" Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}"  FontFamily="Segoe UI" FontWeight="Normal">
                                                        <Run Text="{Binding [Start],RelativeSource={RelativeSource TemplatedParent}}"/>
                                                        <Run Text=" - "/>
                                                        <Run Text="{Binding start, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"/>
                                                            </TextBlock>
                                                        </Border>
                                                    </Grid>
                                                </Border>
                                                <StackPanel x:Name="StartStackPanel" Background="Black"  Visibility="{Binding Path=StartStackPanelVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                                    <syncfusion:SfDatePicker AccentBrush ="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                         Value="{Binding start, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Width="244"
                                                                         FontFamily="Segoe UI" FontWeight="Normal" FormatString="MMMM - d - dddd - yyyy" Background ="White"  
                                                                         BorderBrush="#FFB2B2B2" x:Name="Startdate" Height="30" BorderThickness="2" 
                                                                         HorizontalAlignment="Stretch" Margin="0,20,0,0"/>
                                                    <Grid Margin="0,20,0,0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <syncfusion:SfTimePicker AccentBrush ="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                        Value="{Binding start, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
                                                                         FontFamily="Segoe UI" FontWeight="Normal" FormatString="hh : mm   tt" Background ="White" 
                                                                         IsEnabled="{Binding EndDateEnable, RelativeSource={RelativeSource TemplatedParent}}" SelectorFormatString="h:m:t"
                                                                         x:Name="Starttime" Height="30"  Margin="50,0,20,0" 
                                                                         HorizontalAlignment="Stretch" BorderThickness="0"/>
                                                        <CheckBox RequestedTheme="Dark" x:Name="AllDay"  Height="30" Width="auto" Grid.Column="1" FontSize="15"  FontFamily="Segoe UI" 
                                                              Content="{Binding [All_Day], RelativeSource={RelativeSource TemplatedParent}}"  FontWeight="Normal"
                                                              Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}"   
                                                              IsChecked="{Binding AllDay, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                                    </Grid>

                                                    <ComboBox   ItemsSource="{Binding TimeZoneCollection, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                            DisplayMemberPath="TimeZoneValue" SelectedItem="{Binding StartTimeZone,  RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"  
                                                          IsEnabled="{Binding IsChecked, ElementName=AllDay, Mode=TwoWay,Converter={StaticResource BooltoBool}}"
                                                                x:Name="starttimezone"  Height="30" Margin="50,20,50,20"  BorderThickness="0"
                                                            HorizontalAlignment="Stretch"/>
                                                </StackPanel>

                                                <Border x:Name="EndBorder" BorderThickness="0" IsHitTestVisible="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}"  Background="{Binding EndAccordionBackground, RelativeSource={RelativeSource TemplatedParent}}"  Height="30" Width="auto"  Margin="0,10,0,0">
                                                    <Grid x:Name="EndGrid" Margin="5,5,0,0" >
                                                        <Border Background="{Binding EndAccordionBackground, RelativeSource={RelativeSource TemplatedParent}}" >
                                                            <TextBlock Height="30" Width="auto" Margin="35,0,60,0" FontSize="15" FontFamily="Segoe UI" FontWeight="Normal" 
                                                               Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}"  >
                                                        <Run Text="{Binding [End],RelativeSource={RelativeSource TemplatedParent}}"/>
                                                        <Run Text=" - "/>
                                                        <Run Text="{Binding end, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                                            </TextBlock>
                                                        </Border>
                                                    </Grid>
                                                </Border>
                                                <StackPanel x:Name="EndStackPanel" Background="Black"  Visibility="{Binding Path=EndStackPanelVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                                    <syncfusion:SfDatePicker AccentBrush ="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                         Value="{Binding end, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
                                                                         FontFamily="Segoe UI" FontWeight="Normal" FormatString="MMMM - d - dddd - yyyy" 
                                                                         Background ="White" BorderBrush="#FFB2B2B2" x:Name="Enddate" Height="30" Width="244"
                                                                         HorizontalAlignment="Stretch" Margin="0,20,0,0"  BorderThickness="2"/>
                                                    <Grid Margin="0,20,0,0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <syncfusion:SfTimePicker AccentBrush ="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                         Value="{Binding end, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
                                                                         FontFamily="Segoe UI" FontWeight="Normal" FormatString="hh : mm   tt" Background ="White"
                                                                         IsEnabled="{Binding EndDateEnable, RelativeSource={RelativeSource TemplatedParent}}" SelectorFormatString="h:m:t"
                                                                         BorderBrush="#FFB2B2B2"  x:Name="Endtime" Height="30" HorizontalAlignment="Stretch" 
                                                                         BorderThickness="0" Margin="50,0,20,0" />
                                                        <CheckBox x:Name="AllDay1"  Height="30" Width="auto" RequestedTheme="Dark"
                                                              Content="{Binding [All_Day], RelativeSource={RelativeSource TemplatedParent}}"  FontSize="15"  
                                                              FontFamily="Segoe UI" FontWeight="Normal"  Grid.Column="1" 
                                                              Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}"   
                                                              IsChecked="{Binding AllDay, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                                    </Grid>
                                                    <ComboBox Margin="50,20,50,20"  
                                                          ItemsSource="{Binding TimeZoneCollection, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                          DisplayMemberPath="TimeZoneValue" IsEnabled="{Binding IsChecked, ElementName=AllDay1, Mode=TwoWay,Converter={StaticResource BooltoBool}}"
                                                          SelectedItem="{Binding EndTimeZone,  RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                          x:Name="endtimezone"  Height="30" Background ="#FFB2B2B2" BorderThickness="0"/>
                                                </StackPanel>
                                                <syncfusion:SfTextBoxExt x:Name="Location" Margin="40,10,60,10" FontWeight="Normal" HorizontalAlignment="Stretch"
                                                                     Watermark="{Binding [Location],RelativeSource={RelativeSource TemplatedParent}}"   IsReadOnly="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooltoBool}}"
                                                                     Height="30" Background="White" BorderThickness="0"  FontSize="15" FontFamily="Segoe UI"
                                                                     Foreground="#FF454545" 
                                                                     Text="{Binding EditedAppointment.Location,  RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" 
                                                                     />
                                                <StackPanel x:Name="RecurrencePanel" Visibility="{Binding IsRecurrenceTypeEnabled, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooltoVis}}">
                                                    <Border x:Name="RecurrsiveBorder" Background="{Binding RecurrenceAccordionBackground, RelativeSource={RelativeSource TemplatedParent}}"  >
                                                        <ToggleSwitch x:Name="isRecursive" TabIndex="1"  OffContent="{Binding [RecurrenceDisabled],RelativeSource={RelativeSource TemplatedParent}}"  OnContent="{Binding [RecurrenceEnabled],RelativeSource={RelativeSource TemplatedParent}}"  
                                                              IsOn="{Binding EditedAppointment.IsRecursive, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"       IsEnabled="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}"
                                                          ManipulationMode="Rotate"  Margin="35,-5,60,0" FontWeight="Normal" FontSize="15" FontFamily="Segoe UI" 
                                                          Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}">
                                                            <ToggleSwitch.Template>
                                                                <ControlTemplate TargetType="ToggleSwitch">
                                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Normal"/>
                                                                                <VisualState x:Name="Disabled">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="HeaderContentPresenter">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchHeaderDisabledForegroundThemeBrush}"/>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="OffContentPresenter">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchDisabledForegroundThemeBrush}"/>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="OnContentPresenter">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchDisabledForegroundThemeBrush}"/>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchOuterBorderDisabledBorderThemeBrush}"/>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerBorder">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchTrackDisabledBackgroundThemeBrush}"/>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SwitchKnob">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchThumbDisabledBackgroundThemeBrush}"/>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SwitchKnob">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchThumbDisabledBorderThemeBrush}"/>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SwitchCurtain">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchCurtainDisabledBackgroundThemeBrush}"/>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                            <VisualStateGroup x:Name="ToggleStates">
                                                                                <VisualStateGroup.Transitions>
                                                                                    <VisualTransition x:Name="DraggingToOnTransition" From="Dragging" GeneratedDuration="0" To="On">
                                                                                        <Storyboard>
                                                                                            <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobCurrentToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                                                                            <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.CurtainCurrentToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchCurtain"/>
                                                                                        </Storyboard>
                                                                                    </VisualTransition>
                                                                                    <VisualTransition x:Name="DraggingToOffTransition" From="Dragging" GeneratedDuration="0" To="Off">
                                                                                        <Storyboard>
                                                                                            <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobCurrentToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                                                                            <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.CurtainCurrentToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchCurtain"/>
                                                                                        </Storyboard>
                                                                                    </VisualTransition>
                                                                                    <VisualTransition x:Name="OnToOffTransition" From="On" GeneratedDuration="0" To="Off">
                                                                                        <Storyboard>
                                                                                            <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobOnToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                                                                            <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.CurtainOnToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchCurtain"/>
                                                                                        </Storyboard>
                                                                                    </VisualTransition>
                                                                                    <VisualTransition x:Name="OffToOnTransition" From="Off" GeneratedDuration="0" To="On">
                                                                                        <Storyboard>
                                                                                            <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobOffToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                                                                            <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.CurtainOffToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchCurtain"/>
                                                                                        </Storyboard>
                                                                                    </VisualTransition>
                                                                                </VisualStateGroup.Transitions>
                                                                                <VisualState x:Name="Dragging"/>
                                                                                <VisualState x:Name="Off">
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0" To="-44" Storyboard.TargetProperty="X" Storyboard.TargetName="CurtainTranslateTransform"/>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="On">
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="CurtainTranslateTransform"/>
                                                                                        <DoubleAnimation Duration="0" To="38" Storyboard.TargetProperty="X" Storyboard.TargetName="KnobTranslateTransform"/>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                            <VisualStateGroup x:Name="ContentStates">
                                                                                <VisualState x:Name="OffContent">
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="OffContentPresenter"/>
                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="OffContentPresenter">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <x:Boolean>True</x:Boolean>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="OnContent">
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="OnContentPresenter"/>
                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="OnContentPresenter">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <x:Boolean>True</x:Boolean>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                            <VisualStateGroup x:Name="FocusStates">
                                                                                <VisualState x:Name="Focused">
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Unfocused"/>
                                                                                <VisualState x:Name="PointerFocused"/>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <Grid>
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="Auto"/>
                                                                                <RowDefinition Height="Auto"/>
                                                                            </Grid.RowDefinitions>
                                                                            <ContentPresenter x:Name="HeaderContentPresenter" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{StaticResource ToggleSwitchHeaderForegroundThemeBrush}" FontWeight="Semilight" Margin="6"/>
                                                                            <Grid Margin="{TemplateBinding Padding}" Grid.Row="1">
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="Auto"/>
                                                                                    <ColumnDefinition Width="7"/>
                                                                                    <ColumnDefinition Width="Auto"/>
                                                                                </Grid.ColumnDefinitions>
                                                                                <ContentPresenter x:Name="OffContentPresenter" ContentTemplate="{TemplateBinding OffContentTemplate}" Content="{TemplateBinding OffContent}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,5,0,16" MinWidth="65" Opacity="0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                <ContentPresenter x:Name="OnContentPresenter" ContentTemplate="{TemplateBinding OnContentTemplate}" Content="{TemplateBinding OnContent}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,5,0,16" MinWidth="65" Opacity="0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                <Grid Background="Transparent" Grid.Column="2">
                                                                                    <Grid x:Name="SwitchKnobBounds" Height="19" Margin="13,5,13,16">
                                                                                        <Border x:Name="OuterBorder" BorderBrush="{StaticResource ToggleSwitchOuterBorderBorderThemeBrush}" BorderThickness="2">
                                                                                            <Border x:Name="InnerBorder" BorderBrush="{StaticResource ToggleSwitchTrackBorderThemeBrush}" BorderThickness="1" Background="{StaticResource ToggleSwitchTrackBackgroundThemeBrush}">
                                                                                                <ContentPresenter x:Name="SwitchCurtainBounds">
                                                                                                    <ContentPresenter x:Name="SwitchCurtainClip">
                                                                                                        <Rectangle x:Name="SwitchCurtain" Fill="{StaticResource ToggleSwitchCurtainBackgroundThemeBrush}" Width="44">
                                                                                                            <Rectangle.RenderTransform>
                                                                                                                <TranslateTransform x:Name="CurtainTranslateTransform" X="-44"/>
                                                                                                            </Rectangle.RenderTransform>
                                                                                                        </Rectangle>
                                                                                                    </ContentPresenter>
                                                                                                </ContentPresenter>
                                                                                            </Border>
                                                                                        </Border>
                                                                                        <Rectangle x:Name="SwitchKnob" Fill="White" HorizontalAlignment="Left" Stroke="White" StrokeThickness="1" Width="12">
                                                                                            <Rectangle.RenderTransform>
                                                                                                <TranslateTransform x:Name="KnobTranslateTransform"/>
                                                                                            </Rectangle.RenderTransform>
                                                                                        </Rectangle>
                                                                                        <Rectangle x:Name="FocusVisualWhite" Margin="-3" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                                                                                        <Rectangle x:Name="FocusVisualBlack" Margin="-3" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                                                                                    </Grid>
                                                                                    <Thumb x:Name="SwitchThumb">
                                                                                        <Thumb.Template>
                                                                                            <ControlTemplate TargetType="Thumb">
                                                                                                <Rectangle Fill="Transparent"/>
                                                                                            </ControlTemplate>
                                                                                        </Thumb.Template>
                                                                                    </Thumb>
                                                                                </Grid>
                                                                            </Grid>
                                                                        </Grid>
                                                                    </Border>
                                                                </ControlTemplate>
                                                            </ToggleSwitch.Template>
                                                        </ToggleSwitch>
                                                    </Border>
                                                    <StackPanel  Background="#34000000" x:Name="RecursiveStackPanel" IsHitTestVisible="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}"  Visibility="{Binding Path=IsOn, ElementName=isRecursive, Converter={StaticResource BooltoVis}}">
                                                        <Grid Margin="40,0,20,20" >
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <RadioButton x:Name="RecurrenceOptionDaily" GroupName="RecOption" Content="{Binding [Daily],RelativeSource={RelativeSource TemplatedParent}}"   
                                                                 FontSize="12" IsChecked="{Binding RecurrenceDaily, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                            <RadioButton x:Name="RecurrenceOptionWeekly" Grid.Column="1" GroupName="RecOption" Content="{Binding [Weekly],RelativeSource={RelativeSource TemplatedParent}}"   
                                                                 FontSize="12" IsChecked="{Binding RecurrenceWeekly, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                        </Grid>

                                                        <Grid Margin="40,0,20,20" >
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <RadioButton x:Name="RecurrenceOptionMonthly" GroupName="RecOption" Content="{Binding [Monthly],RelativeSource={RelativeSource TemplatedParent}}"   
                                                                 FontSize="12" IsChecked="{Binding RecurrenceMonthly, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                            <RadioButton x:Name="RecurrenceOptionYearly" Grid.Column="1" GroupName="RecOption" Content="{Binding [Yearly],RelativeSource={RelativeSource TemplatedParent}}"   
                                                                 FontSize="12" IsChecked="{Binding RecurrenceYearly, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                        </Grid>
                                                        <StackPanel>
                                                            <Rectangle Height="1" StrokeThickness=".5" HorizontalAlignment="Stretch"  Stroke="Gray" Opacity="0.5" Margin="0,0,20,20" />
                                                        </StackPanel>
                                                        <StackPanel x:Name="DailyStackPanel" Margin="40,0,20,20" 
                                                            Visibility="{Binding Path=IsChecked, ElementName=RecurrenceOptionDaily, Converter={StaticResource BooltoVis}, Mode=TwoWay}" >
                                                            <StackPanel Orientation="Vertical" >
                                                                <StackPanel Orientation="Horizontal">
                                                                    <StackPanel Width="65">
                                                                        <RadioButton x:Name="EveryXDays" GroupName="RecSubDaily"  Content="{Binding [Every],RelativeSource={RelativeSource TemplatedParent}}"  
                                                                         Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}"   
                                                                         FontSize="12" IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsDailyEveryNDays, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"/>
                                                                    </StackPanel>

                                                                    <syncfusion:SfNumericUpDown  Minimum="1" Height="30" x:Name="EveryDayGap" 
                                                                                        Maximum="1000" FormatString="0" Background ="#FFB2B2B2"
                                                                                        AutoReverse="false" Margin="5,0,0,0" Value="{Binding EditedAppointment.RecurrenceProperites.DailyNDays, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                                                                        AccentBrush="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    <TextBlock Margin="5,5,0,0"  Text="{Binding [Day(s)],RelativeSource={RelativeSource TemplatedParent}}" 
                                                                       Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                       Height="30" Width="auto" FontSize="12" VerticalAlignment="Center"/>
                                                                </StackPanel>
                                                                <StackPanel Orientation="Horizontal">
                                                                    <RadioButton x:Name="EveryWeekDay" GroupName="RecSubDaily" Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                         Content="{Binding [EveryWeekDays],RelativeSource={RelativeSource TemplatedParent}}"    
                                                                         FontSize="12" IsChecked="{Binding ElementName=EveryXDays, Path=IsChecked, Mode=TwoWay, Converter={StaticResource BooltoBool}}"/>
                                                                </StackPanel>
                                                            </StackPanel>
                                                        </StackPanel>

                                                        <StackPanel x:Name="WeeklyStackPanel" Margin="40,0,20,20" 
                                                            Visibility="{Binding Path=IsChecked, ElementName=RecurrenceOptionWeekly, Converter={StaticResource BooltoVis}, Mode=TwoWay}" >
                                                            <StackPanel Orientation="Vertical" >
                                                                <StackPanel Orientation="Horizontal">
                                                                    <TextBlock  x:Name="RecurEveryWeek"  Text="{Binding [RecurEvery],RelativeSource={RelativeSource TemplatedParent}}"  FontSize="12" Margin="0,30" Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" />

                                                                    <syncfusion:SfNumericUpDown  Minimum="1" Height="25" x:Name="EveryWeekGap" 
                                                                                        Maximum="1000" FormatString="0" Background ="#FFB2B2B2" Width="160"
                                                                                        AutoReverse="false" Margin="2,0" Value="{Binding EditedAppointment.RecurrenceProperites.WeeklyEveryNWeeks, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                                                                        AccentBrush="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    <TextBlock Margin="2,20,10,5"  x:Name="WeeksOn" Text="{Binding [Week(s)on],RelativeSource={RelativeSource TemplatedParent}}" 
                                                                       Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                       Height="30" Width="auto" FontSize="12" VerticalAlignment="Center"/>
                                                                </StackPanel>
                                                                <StackPanel Orientation="Horizontal" Margin="20,5">
                                                                    <CheckBox x:Name="sunday" Content="{Binding [Sunday],RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}"   FontSize="12" Width="90" IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsWeeklySunday, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"/>
                                                                    <CheckBox x:Name="monday" Content="{Binding [Monday],RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}"  FontSize="12" Width="90" Margin="20,0,0,0" IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsWeeklyMonday, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"/>
                                                                </StackPanel>
                                                                <StackPanel Orientation="Horizontal" Margin="20,5">
                                                                    <CheckBox x:Name="tuesday" Content="{Binding [Tuesday],RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}"  FontSize="12" Width="90" IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsWeeklyTuesday, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"/>
                                                                    <CheckBox x:Name="wednesday" Content="{Binding [Wednesday],RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}"   FontSize="12" Width="90" Margin="20,0,0,0" IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsWeeklyWednesday, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"/>
                                                                </StackPanel>
                                                                <StackPanel Orientation="Horizontal" Margin="20,5">
                                                                    <CheckBox x:Name="thursday" Content="{Binding [Thursday],RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}"  FontSize="12" Width="90" IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsWeeklyThursday, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"/>
                                                                    <CheckBox x:Name="friday" Content="{Binding [Friday],RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}"  FontSize="12" Width="90" Margin="20,0,0,0" IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsWeeklyFriday, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"/>
                                                                </StackPanel>
                                                                <StackPanel Orientation="Horizontal" Margin="20,5">
                                                                    <CheckBox x:Name="saturday" Content="{Binding [Saturday],RelativeSource={RelativeSource TemplatedParent}}"  Width="90" Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" FontSize="12" IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsWeeklySaturday, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"/>
                                                                </StackPanel>
                                                            </StackPanel>
                                                        </StackPanel>

                                                        <StackPanel x:Name="MonthlyStackPanel" Margin="40,0,20,20" 
                                                            Visibility="{Binding Path=IsChecked, ElementName=RecurrenceOptionMonthly, Converter={StaticResource BooltoVis}, Mode=TwoWay}" >
                                                            <StackPanel Orientation="Horizontal">
                                                                <TextBlock  x:Name="RecurEveryMonth" Text="{Binding [RecurEvery],RelativeSource={RelativeSource TemplatedParent}}" 
                                                                    Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" Width="auto"
                                                                    FontSize="12" Margin="0,30"/>
                                                                <syncfusion:SfNumericUpDown  Minimum="1" Height="30" x:Name="EveryMonthGap"  Width="158"
                                                                                        Maximum="1000" FormatString="0" Background ="#FFB2B2B2"
                                                                                        AutoReverse="false" Margin="0" Value="{Binding EditedAppointment.RecurrenceProperites.MonthlyEveryNMonths, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                                                                        AccentBrush="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                <TextBlock Margin="1,20,10,5" Text="{Binding [Month(s)on],RelativeSource={RelativeSource TemplatedParent}}"  
                                                                   Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                   Height="30" Width="auto" FontSize="12" VerticalAlignment="Center"/>
                                                            </StackPanel>
                                                            <StackPanel Orientation="Vertical" >
                                                                <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                                                    <StackPanel Width="65">
                                                                        <RadioButton x:Name="EveryXMonths" GroupName="RecSubMontly" Content="{Binding [Day],RelativeSource={RelativeSource TemplatedParent}}"   FontSize="12" 
                                                                         IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsMonthlySpecific, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                                         Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    </StackPanel>
                                                                    <ComboBox x:Name="EveryMonthDay" BorderThickness="0" Background ="#FFB2B2B2" Height="30" Width="auto" FontSize="12" Margin="10,0,0,5"
                                                                      SelectedIndex="{Binding EditedAppointment.RecurrenceProperites.MonthlySpecificMonthDay, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay, Converter={StaticResource ValuetoIndex}}">
                                                                        <ComboBoxItem Content="1" />
                                                                        <ComboBoxItem Content="2" />
                                                                        <ComboBoxItem Content="3" />
                                                                        <ComboBoxItem Content="4" />
                                                                        <ComboBoxItem Content="5" />
                                                                        <ComboBoxItem Content="6" />
                                                                        <ComboBoxItem Content="7" />
                                                                        <ComboBoxItem Content="8" />
                                                                        <ComboBoxItem Content="9" />
                                                                        <ComboBoxItem Content="10" />
                                                                        <ComboBoxItem Content="11" />
                                                                        <ComboBoxItem Content="12" />
                                                                        <ComboBoxItem Content="13" />
                                                                        <ComboBoxItem Content="14" />
                                                                        <ComboBoxItem Content="15" />
                                                                        <ComboBoxItem Content="16" />
                                                                        <ComboBoxItem Content="17" />
                                                                        <ComboBoxItem Content="18" />
                                                                        <ComboBoxItem Content="19" />
                                                                        <ComboBoxItem Content="20" />
                                                                        <ComboBoxItem Content="21" />
                                                                        <ComboBoxItem Content="22" />
                                                                        <ComboBoxItem Content="23" />
                                                                        <ComboBoxItem Content="24" />
                                                                        <ComboBoxItem Content="25" />
                                                                        <ComboBoxItem Content="26" />
                                                                        <ComboBoxItem Content="27" />
                                                                        <ComboBoxItem Content="28" />
                                                                        <ComboBoxItem Content="29" />
                                                                        <ComboBoxItem Content="30" />
                                                                        <ComboBoxItem Content="31" />
                                                                    </ComboBox>
                                                                </StackPanel>
                                                                <StackPanel Orientation="Horizontal">
                                                                    <StackPanel Width="65">
                                                                        <RadioButton x:Name="EveryMonth" GroupName="RecSubMontly" Content="{Binding [The],RelativeSource={RelativeSource TemplatedParent}}"   FontSize="12"
                                                                         IsChecked="{Binding ElementName=EveryXMonths, Path=IsChecked, Mode=TwoWay, Converter={StaticResource BooltoBool}}"
                                                                         Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    </StackPanel>
                                                                    <ComboBox x:Name="Howmanyth" BorderThickness="0" Background ="#FFB2B2B2" Height="30" Width="auto" FontSize="12" Margin="10,0,0,0" 
                                                                              SelectedIndex="{Binding EditedAppointment.RecurrenceProperites.MonthlyNthWeek, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay, Converter={StaticResource ValuetoIndex}}">
                                                                        <ComboBoxItem Content="{Binding [First],RelativeSource={RelativeSource TemplatedParent}}"   />
                                                                        <ComboBoxItem Content="{Binding [Second],RelativeSource={RelativeSource TemplatedParent}}"   />
                                                                        <ComboBoxItem Content="{Binding [Third],RelativeSource={RelativeSource TemplatedParent}}"   />
                                                                        <ComboBoxItem Content="{Binding [Fourth],RelativeSource={RelativeSource TemplatedParent}}"   />
                                                                    </ComboBox>
                                                                    <ComboBox x:Name="Weekday" BorderThickness="0" Background ="#FFB2B2B2" Height="30" Width="auto" FontSize="12" Margin="10,0,0,0" 
                                                                      SelectedIndex="{Binding EditedAppointment.RecurrenceProperites.MonthlyWeekDay, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}">
                                                                        <ComboBoxItem Content="{Binding [Sunday],RelativeSource={RelativeSource TemplatedParent}}"  />
                                                                        <ComboBoxItem Content="{Binding [Monday],RelativeSource={RelativeSource TemplatedParent}}"  />
                                                                        <ComboBoxItem Content="{Binding [Tuesday],RelativeSource={RelativeSource TemplatedParent}}"  />
                                                                        <ComboBoxItem Content="{Binding [Wednesday],RelativeSource={RelativeSource TemplatedParent}}"  />
                                                                        <ComboBoxItem Content="{Binding [Thursday],RelativeSource={RelativeSource TemplatedParent}}"  />
                                                                        <ComboBoxItem Content="{Binding [Friday],RelativeSource={RelativeSource TemplatedParent}}"  />
                                                                        <ComboBoxItem Content="{Binding [Saturday],RelativeSource={RelativeSource TemplatedParent}}"  />
                                                                    </ComboBox>
                                                                </StackPanel>
                                                            </StackPanel>
                                                        </StackPanel>

                                                        <StackPanel  x:Name="YearlyStackPanel" Margin="40,0,20,20" 
                                                            Visibility="{Binding Path=IsChecked, ElementName=RecurrenceOptionYearly, Converter={StaticResource BooltoVis}, Mode=TwoWay}" >
                                                            <StackPanel Orientation="Horizontal">
                                                                <TextBlock x:Name="RecurEveryYear" Text="{Binding [RecurEvery],RelativeSource={RelativeSource TemplatedParent}}"  
                                                                    Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                    FontSize="12" Margin="0,30"/>
                                                                <syncfusion:SfNumericUpDown  Minimum="1" Height="30" x:Name="EveryYearGap"  Width="160"
                                                                                        Maximum="1000" FormatString="0" Background ="#FFB2B2B2"
                                                                                        AutoReverse="false" Margin="2,0" Value="{Binding EditedAppointment.RecurrenceProperites.YearlyEveryNYears, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                                                                        AccentBrush="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                <TextBlock Margin="2,20,10,5" Text="{Binding [Year(s)on],RelativeSource={RelativeSource TemplatedParent}}" 
                                                                   Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                   Height="30" Width="auto" FontSize="12" VerticalAlignment="Center"/>
                                                            </StackPanel>
                                                            <StackPanel Orientation="Vertical" >
                                                                <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                                                    <StackPanel Width="65">
                                                                        <RadioButton x:Name="SpecificDate" GroupName="RecSubYearly" Content="{Binding [on],RelativeSource={RelativeSource TemplatedParent}}"   FontSize="12" 
                                                                         IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsYearlySpecific, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                                         Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                         />
                                                                    </StackPanel>
                                                                    <ComboBox x:Name="YrSpMonth" BorderThickness="0" Background ="#FFB2B2B2" Height="30" Width="110" FontSize="12" Margin="15,0,0,0" 
                                                                      SelectedIndex="{Binding EditedAppointment.RecurrenceProperites.YearlySpecificMonth, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay, Converter={StaticResource ValuetoIndex}}">
                                                                        <ComboBoxItem Content="{Binding [January],RelativeSource={RelativeSource TemplatedParent}}"  />
                                                                        <ComboBoxItem Content="{Binding [February],RelativeSource={RelativeSource TemplatedParent}}"  />
                                                                        <ComboBoxItem Content="{Binding [March],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <ComboBoxItem Content="{Binding [April],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <ComboBoxItem Content="{Binding [May],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <ComboBoxItem Content="{Binding [June],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <ComboBoxItem Content="{Binding [July],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <ComboBoxItem Content="{Binding [August],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <ComboBoxItem Content="{Binding [September],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <ComboBoxItem Content="{Binding [October],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <ComboBoxItem Content="{Binding [November],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <ComboBoxItem Content="{Binding [December],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    </ComboBox>
                                                                    <ComboBox x:Name="YrSpDate" BorderThickness="0" Background ="#FFB2B2B2" Height="30" Width="auto" FontSize="12" Margin="10,0,0,0" 
                                                                      SelectedIndex="{Binding EditedAppointment.RecurrenceProperites.YearlySpecificMonthDay, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay, Converter={StaticResource ValuetoIndex}}">
                                                                        <ComboBoxItem Content="1" />
                                                                        <ComboBoxItem Content="2" />
                                                                        <ComboBoxItem Content="3" />
                                                                        <ComboBoxItem Content="4" />
                                                                        <ComboBoxItem Content="5" />
                                                                        <ComboBoxItem Content="6" />
                                                                        <ComboBoxItem Content="7" />
                                                                        <ComboBoxItem Content="8" />
                                                                        <ComboBoxItem Content="9" />
                                                                        <ComboBoxItem Content="10" />
                                                                        <ComboBoxItem Content="11" />
                                                                        <ComboBoxItem Content="12" />
                                                                        <ComboBoxItem Content="13" />
                                                                        <ComboBoxItem Content="14" />
                                                                        <ComboBoxItem Content="15" />
                                                                        <ComboBoxItem Content="16" />
                                                                        <ComboBoxItem Content="17" />
                                                                        <ComboBoxItem Content="18" />
                                                                        <ComboBoxItem Content="19" />
                                                                        <ComboBoxItem Content="20" />
                                                                        <ComboBoxItem Content="21" />
                                                                        <ComboBoxItem Content="22" />
                                                                        <ComboBoxItem Content="23" />
                                                                        <ComboBoxItem Content="24" />
                                                                        <ComboBoxItem Content="25" />
                                                                        <ComboBoxItem Content="26" />
                                                                        <ComboBoxItem Content="27" />
                                                                        <ComboBoxItem Content="28" />
                                                                        <ComboBoxItem Content="29" />
                                                                        <ComboBoxItem Content="30" />
                                                                        <ComboBoxItem Content="31" />
                                                                    </ComboBox>
                                                                </StackPanel>
                                                                <StackPanel Orientation="Horizontal" >
                                                                    <StackPanel Width="65">
                                                                        <RadioButton x:Name="EveryYear" GroupName="RecSubYearly" Content="{Binding [The],RelativeSource={RelativeSource TemplatedParent}}"  FontSize="12"
                                                                                 IsChecked="{Binding ElementName=SpecificDate, Path=IsChecked, Mode=TwoWay, Converter={StaticResource BooltoBool}}"
                                                                                 Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    </StackPanel>
                                                                    <ComboBox x:Name="YrHowmanyth" BorderThickness="0" Background ="#FFB2B2B2" Height="30" Width="110" FontSize="12" Margin="10,0,0,0" 
                                                                      SelectedIndex="{Binding EditedAppointment.RecurrenceProperites.YearlyNthWeek, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay, Converter={StaticResource ValuetoIndex}}">
                                                                        <ComboBoxItem Content="{Binding [First],RelativeSource={RelativeSource TemplatedParent}}"   />
                                                                        <ComboBoxItem Content="{Binding [Second],RelativeSource={RelativeSource TemplatedParent}}"   />
                                                                        <ComboBoxItem Content="{Binding [Third],RelativeSource={RelativeSource TemplatedParent}}"   />
                                                                        <ComboBoxItem Content="{Binding [Fourth],RelativeSource={RelativeSource TemplatedParent}}"   />
                                                                    </ComboBox>
                                                                    <ComboBox x:Name="YrWeekday" BorderThickness="0" Background ="#FFB2B2B2" Height="30" Width="auto" FontSize="12" Margin="10,0,0,0" 
                                                                      SelectedIndex="{Binding EditedAppointment.RecurrenceProperites.YearlyWeekDay, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}">
                                                                        <ComboBoxItem Content="{Binding [Sunday],RelativeSource={RelativeSource TemplatedParent}}"  />
                                                                        <ComboBoxItem Content="{Binding [Monday],RelativeSource={RelativeSource TemplatedParent}}"  />
                                                                        <ComboBoxItem Content="{Binding [Tuesday],RelativeSource={RelativeSource TemplatedParent}}"  />
                                                                        <ComboBoxItem Content="{Binding [Wednesday],RelativeSource={RelativeSource TemplatedParent}}"  />
                                                                        <ComboBoxItem Content="{Binding [Thursday],RelativeSource={RelativeSource TemplatedParent}}"  />
                                                                        <ComboBoxItem Content="{Binding [Friday],RelativeSource={RelativeSource TemplatedParent}}"  />
                                                                        <ComboBoxItem Content="{Binding [Saturday],RelativeSource={RelativeSource TemplatedParent}}"  />
                                                                    </ComboBox>
                                                                </StackPanel>
                                                                <StackPanel Orientation="Horizontal" Margin="25,5,0,5">
                                                                    <TextBlock Margin="5,20,5,20" Text="{Binding [of],RelativeSource={RelativeSource TemplatedParent}}" 
                                                                       Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                       Height="30" Width="auto" FontSize="12" VerticalAlignment="Center"/>
                                                                    <ComboBox x:Name="YrMonth" Background ="#FFB2B2B2" BorderThickness="0" Height="30" Width="110" FontSize="12"  Margin="28,0,5,20"
                                                                      SelectedIndex="{Binding EditedAppointment.RecurrenceProperites.YearlyGenericMonth, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}">
                                                                        <ComboBoxItem Content="{Binding [January],RelativeSource={RelativeSource TemplatedParent}}"  />
                                                                        <ComboBoxItem Content="{Binding [February],RelativeSource={RelativeSource TemplatedParent}}"  />
                                                                        <ComboBoxItem Content="{Binding [March],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <ComboBoxItem Content="{Binding [April],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <ComboBoxItem Content="{Binding [May],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <ComboBoxItem Content="{Binding [June],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <ComboBoxItem Content="{Binding [July],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <ComboBoxItem Content="{Binding [August],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <ComboBoxItem Content="{Binding [September],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <ComboBoxItem Content="{Binding [October],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <ComboBoxItem Content="{Binding [November],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <ComboBoxItem Content="{Binding [December],RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    </ComboBox>
                                                                </StackPanel>
                                                            </StackPanel>
                                                        </StackPanel>

                                                        <StackPanel>
                                                            <Rectangle Height="1" StrokeThickness=".5" HorizontalAlignment="Stretch" Opacity="0.5" Stroke="Gray" Margin="0,0,20,20" />
                                                        </StackPanel>

                                                        <StackPanel x:Name="RangeOfRecurrencePanel" Margin="40,0,20,20">
                                                            <StackPanel x:Name="RecurrenceRange" Orientation="Vertical" HorizontalAlignment="Left">
                                                                <TextBlock Text="{Binding [Range_Of_Recurrence],RelativeSource={RelativeSource TemplatedParent}}" 
                                                                   Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                   FontSize="14" Height="30" Width="auto"/>
                                                                <StackPanel Orientation="Horizontal" >
                                                                    <TextBlock Text="{Binding [Start_Date],RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center"  
                                                                       Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                       FontSize="12" Height="30" Margin="27,10,0,0" Width="auto" HorizontalAlignment="Center"/>
                                                                    <syncfusion:SfDatePicker AccentBrush ="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                         Value="{Binding EditedAppointment.RecurrenceProperites.RangeStartDate, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" 
                                                                         FontFamily="Segoe UI" FontWeight="Normal" Background ="#FFB2B2B2"  
                                                                         BorderBrush="#FFB2B2B2" x:Name="RangeStartdate" Height="30" BorderThickness="2" 
                                                                         HorizontalAlignment="Stretch" Margin="3,0,0,0"/>
                                                                </StackPanel>
                                                                <StackPanel Orientation="Vertical" >
                                                                    <StackPanel Orientation="Horizontal">
                                                                        <StackPanel Width="79" Margin="0,20,0,0">
                                                                            <RadioButton x:Name="EndAfter" GroupName="Range" Content="{Binding [End_After],RelativeSource={RelativeSource TemplatedParent}}"  FontSize="12" 
                                                                             IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsRangeRecurrenceCount, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" 
                                                                             Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                             />
                                                                        </StackPanel>
                                                                        <syncfusion:SfNumericUpDown  Minimum="1" Height="30" x:Name="EndAfterCount" 
                                                                                        Maximum="1000" FormatString="0" Value="{Binding EditedAppointment.RecurrenceProperites.RangeRecurrenceCount, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                                                                        AutoReverse="false" Margin="1,10,0,0" Width="145"
                                                                                        AccentBrush="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <TextBlock Margin="2,25,10,5" Text="{Binding [Recurrence],RelativeSource={RelativeSource TemplatedParent}}"  
                                                                           Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                           Height="30" Width="auto" FontSize="12" VerticalAlignment="Center"/>
                                                                    </StackPanel>
                                                                    <StackPanel Orientation="Horizontal" Margin="0,10,0,20" >
                                                                        <StackPanel Width="65">
                                                                            <RadioButton x:Name="EndBy" GroupName="Range" Content="{Binding [End_By],RelativeSource={RelativeSource TemplatedParent}}" FontSize="12"
                                                                             IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsRangeEndDate, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                                             Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        </StackPanel>
                                                                        <syncfusion:SfDatePicker AccentBrush ="{Binding AppointmentEditorBackground, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                         Value="{Binding EditedAppointment.RecurrenceProperites.RangeEndDate, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" 
                                                                         FontFamily="Segoe UI" FontWeight="Normal" Background ="#FFB2B2B2"  
                                                                         BorderBrush="#FFB2B2B2" x:Name="RangeEnddate" Height="30" BorderThickness="2" 
                                                                         HorizontalAlignment="Stretch" Margin="18,0,0,0"/>
                                                                    </StackPanel>
                                                                    <StackPanel>
                                                                        <RadioButton x:Name="NoEndDate" GroupName="Range" Content="{Binding [No_End_Date],RelativeSource={RelativeSource TemplatedParent}}" FontSize="12"
                                                                             IsChecked="{Binding EditedAppointment.RecurrenceProperites.IsRangeNoEndDate, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                                             Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    </StackPanel>
                                                                </StackPanel>
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </StackPanel>
                                                </StackPanel>
                                                <StackPanel x:Name="ShowMoreStackPanel" >
                                                    <TextBlock Height="30" Width="auto" Text="{Binding [Reminder],RelativeSource={RelativeSource TemplatedParent}}" 
                                                           FontSize="15" FontFamily="Segoe UI" FontWeight="Normal" 
                                                           Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}" 
                                                           Margin="40,10,60,0"/>
                                                    <ComboBox Height="30"  x:Name="ReminderDeliveryTime" FontFamily="Segoe UI" FontWeight="Normal" Margin="40,0,60,0" 
                                                          SelectedItem="{Binding ReminderTime, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" IsEnabled="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}"
                                                          BorderThickness="0" HorizontalAlignment="Stretch" Foreground="#FF454545" >
                                                    </ComboBox>
                                                    <TextBlock Height="30" Width="auto" Text="{Binding [Status],RelativeSource={RelativeSource TemplatedParent}}" 
                                                       FontSize="15" FontFamily="Segoe UI" FontWeight="Normal" 
                                                       Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Margin="40,10,60,0"/>
                                                    <ComboBox Height="30" HorizontalAlignment="Stretch" FontFamily="Segoe UI" FontWeight="Normal" BorderThickness="0"
                                                           IsEnabled="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}"
                                                              DisplayMemberPath="DisplayMember" SelectedValuePath="ActualValue"  PlaceholderText="None"
                                                              x:Name="Status" Margin="40,0,60,0"  Foreground="#FF454545" 
                                                              SelectedItem="{Binding EditedAppointment.Status,  RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" >
                                                    </ComboBox>
                                                    <Border >
                                                        <ToggleSwitch x:Name="ReadOnly" Margin="35,0,60,0"  Visibility="Collapsed"
                                                                  OffContent="{Binding [ReadOnly_Off],RelativeSource={RelativeSource TemplatedParent}}" 
                                                                  OnContent="{Binding [ReadOnly_On],RelativeSource={RelativeSource TemplatedParent}}"   TabIndex="1"
                                                                  IsOn="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}" ManipulationMode="Rotate"
                                                                  Foreground="{Binding AppointmentEditorForeground, RelativeSource={RelativeSource TemplatedParent}}"
                                                                  FontWeight="Normal" FontSize="15" IsEnabled="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}" FontFamily="Segoe UI"/>
                                                    </Border>
                                                </StackPanel>
                                            </StackPanel>
                                        </StackPanel>
                                    </ScrollViewer>
                                </Grid>
                                <Grid Grid.Row="2"   Margin="0,5,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height=".1*"/>
                                        <RowDefinition Height="5*"/>
                                    </Grid.RowDefinitions>
                                    <Rectangle Grid.Row="0" Height="1" HorizontalAlignment="Stretch" Margin="15,0,15,0" Stroke="Gray" />

                                    <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="15,0" FlowDirection="RightToLeft">
                                        <Button x:Name="Close" Style="{StaticResource ButtonStyle}" Width="100" Height="50"
                                                  Content="{Binding [Cancel],RelativeSource={RelativeSource TemplatedParent}}" >
                                        </Button>
                                        <Button x:Name="Delete"  
                                                Visibility="{Binding DeleteButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                                                HorizontalAlignment="Stretch"  Width="100" Height="50"
                                                Style="{StaticResource ButtonStyle}"
                                                Content="{Binding [Delete],RelativeSource={RelativeSource TemplatedParent}}" 
                                           IsEnabled="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}"  >
                                        </Button>
                                        <Button x:Name="Done" HorizontalAlignment="Stretch" 
                                               IsEnabled="{Binding IsEditingAllowed, RelativeSource={RelativeSource TemplatedParent}}"
                                                Style="{StaticResource ButtonStyle}" Width="100" Height="50"
                                                Content="{Binding [Save],RelativeSource={RelativeSource TemplatedParent}}">
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- EndRegion -->

    <!-- Region HeaderTitleBarView -->

    <Style TargetType="local:HeaderTitleBarView">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:HeaderTitleBarView" >
                    <Grid x:Name="Header_Grid" HorizontalAlignment="Stretch"  Background="{TemplateBinding Background}" Height="{TemplateBinding Height}"
                          Visibility="{TemplateBinding Visibility}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="1" >
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- EndRegion -->

    <Style TargetType="local:DragDropControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:DragDropControl">
                    <Viewbox Height="140" Width="120">
                        <Grid Height="200" Width="135" x:Name="popupgrid" >
                            <Grid.Resources>
                                <Storyboard x:Name="storyboard">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="bg">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Add">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Add">
                                        <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                        <EasingColorKeyFrame KeyTime="0:0:0.1" Value="White"/>
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="Transparent">
                                            <EasingColorKeyFrame.EasingFunction>
                                                <CircleEase/>
                                            </EasingColorKeyFrame.EasingFunction>
                                        </EasingColorKeyFrame>
                                    </ColorAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="Edit">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="-58.095"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-58.095"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Edit">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="-34.286"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-34.286"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Edit">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Delete">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="-60"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-60"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Delete">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="Resize">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="57.143"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="57.143"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Resize">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="-32.381"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-32.381"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Resize">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Copy">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="-60"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-60"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="Copy">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="-0.952"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-0.952"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Copy">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </Grid.Resources>
                            <Path x:Name="bg" Opacity="0.1" Data="F1M134.48,128.371L116.251,96.797 133.48,66.956 113.155,31.751 79.6,31.751 61.557,0.5 20.907,0.5 0.582,35.704 20.907,68.908 54.461,68.908 71.409,98.529 55.46,124.419 20.907,124.419 0.582,159.623 20.907,194.826 61.557,194.826 79.6,163.575 114.155,163.575z" Fill="#FFEAEAEA" Stroke="#FF898989" Width="135.057" UseLayoutRounding="False"  Margin="0,2,0,0"/>
                            <Button x:Name="Add" ToolTipService.ToolTip="Add" Margin="10,10,0,135"  Style="{StaticResource Add}" />
                            <Button  x:Name="Copy"  FlowDirection="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ButtonFlowDirection}" ToolTipService.ToolTip="Copy"  Style="{StaticResource Copy}" Margin="-42,70,0,75" Width="172" RenderTransformOrigin="0.5,0.5"   >
                                <Button.RenderTransform>
                                    <CompositeTransform/>
                                </Button.RenderTransform>
                            </Button>
                            <Button FlowDirection="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ButtonFlowDirection}"  x:Name="Edit" ToolTipService.ToolTip="Edit"   Style="{StaticResource Edit}" Margin="64,43,0,102" RenderTransformOrigin="0.5,0.5" >
                                <Button.RenderTransform>
                                    <CompositeTransform/>
                                </Button.RenderTransform>
                            </Button>
                            <Button  x:Name="Delete" ToolTipService.ToolTip="Delete"  Style="{StaticResource Delete}" Margin="64,103,0,42" RenderTransformOrigin="0.5,0.5" >
                                <Button.RenderTransform>
                                    <CompositeTransform/>
                                </Button.RenderTransform>
                            </Button>
                            <Button FlowDirection="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ButtonFlowDirection}" x:Name="Resize" ToolTipService.ToolTip="Resize"   Style="{StaticResource Drag}" Margin="10,135,0,10" RenderTransformOrigin="0.5,0.5" >
                                <Button.RenderTransform>
                                    <CompositeTransform/>
                                </Button.RenderTransform>
                            </Button>
                        </Grid>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  TargetType="local:AddRadialMenuControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AddRadialMenuControl">
                    <radialmenu:SfRadialMenu x:Name="radialMenu" Background="White"
                                             RimBackground="#FF28A5DB" RimRadiusFactor="0.9" 
                                             IsOpen="False" RadiusY="100" RadiusX="100" 
                                             EnableFreeRotation="True" Visibility="Visible">
                        <radialmenu:SfRadialMenu.Icon>
                            <Ellipse Width="30" Height="30" Stretch="Fill" Stroke="#FF28A5DB" StrokeThickness="3"/>
                        </radialmenu:SfRadialMenu.Icon>
                        <radialmenu:SfRadialMenuItem GroupName="AddContextMenu">
                            <radialmenu:SfRadialMenuItem.Header>
                                <Border Background="Transparent" Padding="2">
                                    <StackPanel>
                                        <Path x:Name="path1" Width="20" UseLayoutRounding="False" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Opacity="1" Height="20" Fill="#484949" Data="M19.833,0L32.5,0 32.5,19.833999 52.334,19.833999 52.334,32.500999 32.5,32.500999 32.5,52.333 19.833,52.333 19.833,32.500999 0,32.500999 0,19.833999 19.833,19.833999z"/>
                                        <TextBlock x:Name="AddAddMenuText" FontSize="11" Margin="0,2,0,0" Text="Add" Foreground="#484949" HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                            </radialmenu:SfRadialMenuItem.Header>
                        </radialmenu:SfRadialMenuItem>
                        <radialmenu:SfRadialMenuItem IsEnabled="False" GroupName="AddContextMenu">
                            <radialmenu:SfRadialMenuItem.Header>
                                <Border Background="Transparent" Padding="2">
                                    <StackPanel>
                                        <Path Width="15" UseLayoutRounding="False" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Opacity="1" Height="20" Fill="#484949" Data="M0,44.439791L18.98951,54.569246 0.47998798,62.66881z M17.428029,12.359973L36.955557,23.568769 21.957478,49.686174 20.847757,46.346189 15.11851,45.756407 14.138656,42.166935 8.5292659,41.966761 6.9493899,38.037481 2.4399572,38.477377z M26.812517,0.0009765625C27.350616,-0.012230873,27.875986,0.10826397,28.348372,0.3782568L42.175028,8.3180408C43.85462,9.2780154,44.234529,11.777948,43.02482,13.89789L41.375219,16.767812 21.460039,5.3381228 23.10964,2.4582005C23.979116,0.941679,25.437378,0.034730911,26.812517,0.0009765625z"  />
                                        <TextBlock x:Name="AddEditMenuText" FontSize="11" Margin="0,2,0,0" Text="Edit" Foreground="#484949" HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                            </radialmenu:SfRadialMenuItem.Header>
                        </radialmenu:SfRadialMenuItem>
                        <radialmenu:SfRadialMenuItem IsEnabled="False" GroupName="AddContextMenu">
                            <radialmenu:SfRadialMenuItem.Header>
                                <Border Background="Transparent" Padding="2">
                                    <StackPanel>
                                        <Path Width="15" UseLayoutRounding="False" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Opacity="1" Height="20" Fill="#484949" Data="M31.687001,23.116L31.687001,31.394341C31.687001,31.394341,31.526705,36.832023,25.52624,36.359949L18.506,36.388395 18.506,49.587002 18.506001,54.153999 18.506,59.292614C18.506,59.812107,18.929218,60.233997,19.448625,60.233997L45.808704,60.233997C46.326101,60.233997,46.749998,59.812107,46.749998,59.292614L46.749998,24.057384C46.749998,23.539322,46.326101,23.116,45.808704,23.116z M20.552001,4.5669994L20.552001,14.60861C20.552001,14.60861,20.358706,21.203206,13.080177,20.631915L4.565999,20.665694 4.565999,48.4459C4.566,49.076302,5.0797424,49.587002,5.7100554,49.587002L14.742001,49.587002 14.742001,35.400336 18.161097,31.792807 18.166127,31.774705 26.474542,22.972 26.521163,22.972 29.953973,19.349999 38.822001,19.349999 38.822001,5.7076302C38.822001,5.0806808,38.309198,4.5669994,37.680792,4.5669994z M18.449971,0L37.680651,0C40.833681,0,43.391001,2.5571156,43.391001,5.707489L43.391001,19.349999 45.80884,19.349999C48.409018,19.35,50.517,21.458894,50.517,24.05704L50.517,59.292992C50.517,61.893593,48.409018,64,45.80884,64L19.448812,64C16.849223,64,14.742,61.893593,14.742001,59.292992L14.742001,54.153999 5.709774,54.153999C2.555994,54.153999,0,51.599316,0,48.445534L0,19.465691 4.1473293,15.090039 4.1532602,15.068708 14.229262,4.3929996 14.286199,4.3929996z"/>
                                        <TextBlock x:Name="AddCopyMenuText" FontSize="11" Margin="0,2,0,0" Text="Copy" Foreground="#484949" HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                            </radialmenu:SfRadialMenuItem.Header>
                        </radialmenu:SfRadialMenuItem>
                        <radialmenu:SfRadialMenuItem IsEnabled="False" GroupName="AddContextMenu">
                            <radialmenu:SfRadialMenuItem.Header>
                                <Border Background="Transparent" Padding="2">
                                    <StackPanel>
                                        <Path Width="15" UseLayoutRounding="False" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Opacity="1" Height="20" Fill="#484949" Data="M31.948999,57.859001L45.188999,57.859001 45.188999,59.699001 31.948999,59.699001z M31.948999,51.950001L45.188999,51.950001 45.188999,53.791 31.948999,53.791z M28.396044,35.408001C28.009256,35.408001,27.689001,35.726357,27.689001,36.116974L27.689001,62.648006C27.689001,63.039406,28.009256,63.357002,28.396044,63.357002L48.248085,63.357002C48.638691,63.357002,48.957001,63.039406,48.957001,62.648006L48.957001,45.402447 43.671608,45.381203C39.153995,45.736,39.033001,41.642223,39.033001,41.642223L39.033001,35.408001z M28.395853,32.571999L40.336986,32.571999 42.92213,35.299999 42.958431,35.299999 49.212662,41.928822 49.216327,41.942017 51.790001,44.657917 51.790001,62.648022C51.790001,64.605804,50.204025,66.191002,48.247158,66.191002L28.395853,66.191002C26.438854,66.191002,24.853,64.605804,24.853,62.648022L24.853,36.116901C24.853,34.16061,26.438854,32.571999,28.395853,32.571999z M23.4165,2.7189999C21.472765,2.7190001 19.896,4.211246 19.896,6.0526261 19.896,7.8918042 21.472765,9.3859997 23.4165,9.3859997 25.360433,9.3859997 26.936998,7.8918042 26.936998,6.0526261 26.936998,4.211246 25.360433,2.7190001 23.4165,2.7189999z M23.4165,0C26.836176,0,29.627563,2.5418639,29.798687,5.7406974L29.806993,6.0519996 35.229999,6.0519996 35.229999,7.9879994 46.833999,7.9879994 46.833999,34.156097 41.895698,28.945999 41.695999,28.945999 41.695999,14.389 35.229999,14.389 35.229999,20.865 11.604001,20.865 11.604001,14.389 5.136998,14.389 5.136998,59.294998 21.228,59.294998 21.228,62.648151C21.228,63.142387,21.27823,63.625092,21.373855,64.091423L21.431106,64.338997 0,64.338997 0,7.9879994 11.604001,7.9879994 11.604001,6.0519996 17.026007,6.0519996 17.034315,5.7406974C17.205442,2.5418639,19.996919,0,23.4165,0z"/>
                                        <TextBlock x:Name="AddPasteMenuText" FontSize="11" Margin="0,2,0,0" Text="Paste" Foreground="#484949" HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                            </radialmenu:SfRadialMenuItem.Header>
                        </radialmenu:SfRadialMenuItem>
                        <radialmenu:SfRadialMenuItem IsEnabled="False" GroupName="AddContextMenu">
                            <radialmenu:SfRadialMenuItem.Header>
                                <Border Background="Transparent" Padding="2">
                                    <StackPanel>
                                        <Path UseLayoutRounding="False" Stretch="Fill" Width="15" RenderTransformOrigin="0.5,0.5" Opacity="1" Height="20" Fill="#484949" Data="M33.977998,27.684L33.977998,58.102997 41.373998,58.102997 41.373998,27.684z M14.841999,27.684L14.841999,58.102997 22.237998,58.102997 22.237998,27.684z M4.0319996,22.433001L52.183,22.433001 52.183,63.999001 4.0319996,63.999001z M15.974,0L40.195001,0 40.195001,7.7260003 56.167001,7.7260003 56.167001,16.000999 0,16.000999 0,7.7260003 15.974,7.7260003z" />
                                        <TextBlock x:Name="AddDeleteMenuText" FontSize="11" Margin="0,2,0,0" Text="Delete" Foreground="#484949" HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                            </radialmenu:SfRadialMenuItem.Header>
                        </radialmenu:SfRadialMenuItem>
                        <radialmenu:SfRadialMenuItem IsEnabled="False" GroupName="AddContextMenu">
                            <radialmenu:SfRadialMenuItem.Header>
                                <Border Background="Transparent" Padding="2">
                                    <StackPanel>
                                        <Path Width="17" Height="26" UseLayoutRounding="False" Stretch="Fill" RenderTransformOrigin="0.54,0.5" Opacity="1" Fill="#484949" Data="M15.981499,13.747002C18.05169,13.747002,19.73,15.426697,19.73,17.496992L19.73,29.981703 19.779463,29.852098C20.305013,28.579597 21.683165,27.672002 23.300499,27.672002 25.370689,27.672002 27.049,29.159006 27.049,30.994911L27.049,32.286549 27.098465,32.167931C27.624022,31.003298 29.002193,30.172002 30.619551,30.172002 32.689867,30.172002 34.368,31.533998 34.368,33.213693L34.368,42.065532 34.802896,37.581322C34.973396,35.815634 36.543791,34.521343 38.310686,34.693342 40.076281,34.862541 41.370577,36.435431 41.198677,38.201019L39.531998,55.4002 39.531998,56.770905C39.531998,60.763145,36.295256,64,32.301731,64L19.449066,64C16.080709,64,13.24998,61.695639,12.447613,58.577476L12.385349,58.30774 2.4728718,41.726652C1.7229061,40.474153 2.3947554,38.692953 3.9740238,37.750153 5.5534835,36.807454 7.4387784,37.057454 8.1887436,38.310053L12.233,45.075792 12.233,17.496992C12.232999,15.426697,13.91121,13.747002,15.981499,13.747002z M2.4651451,5.512001C3.0964394,5.512001,3.7279081,5.7528877,4.2096834,6.2346535L8.3473825,10.372528C9.3108721,11.336092 9.3108721,12.895937 8.3473825,13.859404 7.3840122,14.822868 5.821506,14.822868 4.8593559,13.859404L0.7216568,9.7214584C-0.2405529,8.7580528 -0.2405529,7.1982384 0.7216568,6.2346535 1.2027321,5.7528877 1.8338509,5.512001 2.4651451,5.512001z M29.787703,5.512001C30.419058,5.512001 31.050566,5.7528877 31.532339,6.2346535 32.495886,7.1982384 32.495886,8.7580528 31.532339,9.7214584L27.394133,13.859404C26.430585,14.822868 24.869307,14.822868 23.905759,13.859404 22.943411,12.895937 22.943411,11.336092 23.905759,10.372528L28.043965,6.2346535C28.525139,5.7528877,29.156345,5.512001,29.787703,5.512001z M16.182049,0C17.543967,0,18.648,1.1041412,18.647999,2.466156L18.647999,8.3178291C18.648,9.6823425 17.543967,10.784 16.182049,10.784 14.820132,10.784 13.715999,9.6823425 13.716,8.3178291L13.716,2.466156C13.715999,1.1041412,14.820132,0,16.182049,0z" />
                                        <TextBlock x:Name="AddResizeMenuText" FontSize="11" Margin="0,2,0,0" Text="Resize" Foreground="#484949" HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                            </radialmenu:SfRadialMenuItem.Header>
                        </radialmenu:SfRadialMenuItem>
                    </radialmenu:SfRadialMenu>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  TargetType="local:EditRadialMenuControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:EditRadialMenuControl">
                    <radialmenu:SfRadialMenu x:Name="radialMenu" Background="White" 
                                             RimBackground="#FF28A5DB" RimRadiusFactor="0.9"
                                             IsOpen="False" RadiusY="100" RadiusX="100" 
                                             EnableFreeRotation="True" Visibility="Visible">
                        <radialmenu:SfRadialMenu.Icon>
                            <Ellipse Width="30" Height="30" Stretch="Fill" Stroke="#FF28A5DB" StrokeThickness="3"/>
                        </radialmenu:SfRadialMenu.Icon>
                        <radialmenu:SfRadialMenuItem GroupName="ContextMenu">
                            <radialmenu:SfRadialMenuItem.Header>
                                <Border Background="Transparent" Padding="2">
                                    <StackPanel>
                                        <Path x:Name="path1" Width="20" UseLayoutRounding="False" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Opacity="1" Height="20" Fill="#484949" Data="M19.833,0L32.5,0 32.5,19.833999 52.334,19.833999 52.334,32.500999 32.5,32.500999 32.5,52.333 19.833,52.333 19.833,32.500999 0,32.500999 0,19.833999 19.833,19.833999z"/>
                                        <TextBlock x:Name="EditAddMenuText" FontSize="11" Margin="0,2,0,0" Text="Add" Foreground="#484949" HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                            </radialmenu:SfRadialMenuItem.Header>
                        </radialmenu:SfRadialMenuItem>
                        <radialmenu:SfRadialMenuItem GroupName="ContextMenu">
                            <radialmenu:SfRadialMenuItem.Header>
                                <Border Background="Transparent" Padding="2">
                                    <Grid>
                                        <StackPanel x:Name="EditPanel">
                                            <Path Width="15"  UseLayoutRounding="False" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Opacity="1" Height="20" Fill="#484949" Data="M0,44.439791L18.98951,54.569246 0.47998798,62.66881z M17.428029,12.359973L36.955557,23.568769 21.957478,49.686174 20.847757,46.346189 15.11851,45.756407 14.138656,42.166935 8.5292659,41.966761 6.9493899,38.037481 2.4399572,38.477377z M26.812517,0.0009765625C27.350616,-0.012230873,27.875986,0.10826397,28.348372,0.3782568L42.175028,8.3180408C43.85462,9.2780154,44.234529,11.777948,43.02482,13.89789L41.375219,16.767812 21.460039,5.3381228 23.10964,2.4582005C23.979116,0.941679,25.437378,0.034730911,26.812517,0.0009765625z"  />
                                        <TextBlock x:Name="EditEditMenuText" FontSize="11" Margin="0,2,0,0" Text="Edit" Foreground="#484949" HorizontalAlignment="Center"/>
                                 
                                        </StackPanel>
                                        <StackPanel x:Name="ViewPanel" Visibility="Collapsed">
                                            <Path Height="25" Width="20" UseLayoutRounding="False" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Opacity="1" Fill="#484949" Data="M36.55365,41.564999C33.348301,41.564999 30.748999,44.164036 30.748999,47.370003 30.748999,50.578369 33.348301,53.175003 36.55365,53.175003 39.759399,53.175003 42.357998,50.578369 42.357998,47.370003 42.357998,44.164036 39.759399,41.564999 36.55365,41.564999z M36.553802,38.18C41.631145,38.18 45.746998,42.294521 45.746998,47.369801 45.746998,49.274006 45.168205,51.042709 44.176968,52.509762L44.083031,52.641842 51.920998,61.177219 48.844875,64 40.973274,55.431282 40.935863,55.452785C39.633247,56.16021 38.140472,56.562 36.553802,56.562 31.477655,56.562 27.361,52.447681 27.361,47.369801 27.361,42.294521 31.477655,38.18 36.553802,38.18z M3.6650018,33.752998L3.6650018,35.643002 35.568001,35.643002 35.568001,33.752998z M3.6650018,28.245001L3.6650018,30.132999 35.568001,30.132999 35.568001,28.245001z M3.6649999,14.38L3.6649999,16.270998 22.568001,16.270998 22.568001,14.38z M3.6649999,6.8199997L3.6649999,10.599 31.811001,10.599 31.811001,6.8199997z M0,0L34.750805,0 43.529999,9.1303024 43.529999,38.625278 43.170677,38.31403C41.244228,36.724052 38.776119,35.768002 36.089149,35.768002 33.017727,35.768002 30.232939,37.01672 28.216007,39.033325L27.996977,39.263 3.6650018,39.263 3.6650018,41.153999 26.553369,41.153999 26.296276,41.600597C25.781263,42.547436,25.399607,43.5769,25.176683,44.663635L25.157103,44.773003 3.6649999,44.773003 3.6649999,46.664001 24.956139,46.664001 24.950001,46.905952C24.950001,49.593636,25.906324,52.061485,27.496591,53.987423L27.635748,54.147999 0,54.147999z"/>
                                            <TextBlock x:Name="EditViewMenuText" Margin="0,5,0,0" Text="View" Foreground="#484949" HorizontalAlignment="Center"/>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </radialmenu:SfRadialMenuItem.Header>
                        </radialmenu:SfRadialMenuItem>
                        <radialmenu:SfRadialMenuItem GroupName="ContextMenu">
                            <radialmenu:SfRadialMenuItem.Header>
                                <Border Background="Transparent" Padding="2">
                                    <StackPanel>
                                        <Path Width="15" UseLayoutRounding="False" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Opacity="1" Height="20" Fill="#484949" Data="M31.687001,23.116L31.687001,31.394341C31.687001,31.394341,31.526705,36.832023,25.52624,36.359949L18.506,36.388395 18.506,49.587002 18.506001,54.153999 18.506,59.292614C18.506,59.812107,18.929218,60.233997,19.448625,60.233997L45.808704,60.233997C46.326101,60.233997,46.749998,59.812107,46.749998,59.292614L46.749998,24.057384C46.749998,23.539322,46.326101,23.116,45.808704,23.116z M20.552001,4.5669994L20.552001,14.60861C20.552001,14.60861,20.358706,21.203206,13.080177,20.631915L4.565999,20.665694 4.565999,48.4459C4.566,49.076302,5.0797424,49.587002,5.7100554,49.587002L14.742001,49.587002 14.742001,35.400336 18.161097,31.792807 18.166127,31.774705 26.474542,22.972 26.521163,22.972 29.953973,19.349999 38.822001,19.349999 38.822001,5.7076302C38.822001,5.0806808,38.309198,4.5669994,37.680792,4.5669994z M18.449971,0L37.680651,0C40.833681,0,43.391001,2.5571156,43.391001,5.707489L43.391001,19.349999 45.80884,19.349999C48.409018,19.35,50.517,21.458894,50.517,24.05704L50.517,59.292992C50.517,61.893593,48.409018,64,45.80884,64L19.448812,64C16.849223,64,14.742,61.893593,14.742001,59.292992L14.742001,54.153999 5.709774,54.153999C2.555994,54.153999,0,51.599316,0,48.445534L0,19.465691 4.1473293,15.090039 4.1532602,15.068708 14.229262,4.3929996 14.286199,4.3929996z"/>
                                        <TextBlock x:Name="EditCopyMenuText" FontSize="11" Margin="0,2,0,0" Text="Copy" Foreground="#484949" HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                            </radialmenu:SfRadialMenuItem.Header>
                        </radialmenu:SfRadialMenuItem>
                        <radialmenu:SfRadialMenuItem IsEnabled="False" GroupName="ContextMenu">
                            <radialmenu:SfRadialMenuItem.Header>
                                <Border Background="Transparent" Padding="2">
                                    <StackPanel>
                                        <Path Width="15" UseLayoutRounding="False" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Opacity="1" Height="20" Fill="#484949" Data="M31.948999,57.859001L45.188999,57.859001 45.188999,59.699001 31.948999,59.699001z M31.948999,51.950001L45.188999,51.950001 45.188999,53.791 31.948999,53.791z M28.396044,35.408001C28.009256,35.408001,27.689001,35.726357,27.689001,36.116974L27.689001,62.648006C27.689001,63.039406,28.009256,63.357002,28.396044,63.357002L48.248085,63.357002C48.638691,63.357002,48.957001,63.039406,48.957001,62.648006L48.957001,45.402447 43.671608,45.381203C39.153995,45.736,39.033001,41.642223,39.033001,41.642223L39.033001,35.408001z M28.395853,32.571999L40.336986,32.571999 42.92213,35.299999 42.958431,35.299999 49.212662,41.928822 49.216327,41.942017 51.790001,44.657917 51.790001,62.648022C51.790001,64.605804,50.204025,66.191002,48.247158,66.191002L28.395853,66.191002C26.438854,66.191002,24.853,64.605804,24.853,62.648022L24.853,36.116901C24.853,34.16061,26.438854,32.571999,28.395853,32.571999z M23.4165,2.7189999C21.472765,2.7190001 19.896,4.211246 19.896,6.0526261 19.896,7.8918042 21.472765,9.3859997 23.4165,9.3859997 25.360433,9.3859997 26.936998,7.8918042 26.936998,6.0526261 26.936998,4.211246 25.360433,2.7190001 23.4165,2.7189999z M23.4165,0C26.836176,0,29.627563,2.5418639,29.798687,5.7406974L29.806993,6.0519996 35.229999,6.0519996 35.229999,7.9879994 46.833999,7.9879994 46.833999,34.156097 41.895698,28.945999 41.695999,28.945999 41.695999,14.389 35.229999,14.389 35.229999,20.865 11.604001,20.865 11.604001,14.389 5.136998,14.389 5.136998,59.294998 21.228,59.294998 21.228,62.648151C21.228,63.142387,21.27823,63.625092,21.373855,64.091423L21.431106,64.338997 0,64.338997 0,7.9879994 11.604001,7.9879994 11.604001,6.0519996 17.026007,6.0519996 17.034315,5.7406974C17.205442,2.5418639,19.996919,0,23.4165,0z"/>
                                        <TextBlock x:Name="EditPasteMenuText" FontSize="11" Margin="0,2,0,0" Text="Paste" Foreground="#484949" HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                            </radialmenu:SfRadialMenuItem.Header>
                        </radialmenu:SfRadialMenuItem>
                        <radialmenu:SfRadialMenuItem GroupName="ContextMenu">
                            <radialmenu:SfRadialMenuItem.Header>
                                <Border Background="Transparent" Padding="2">
                                    <StackPanel>
                                        <Path  UseLayoutRounding="False" Stretch="Fill" Width="15" RenderTransformOrigin="0.5,0.5" Opacity="1" Height="20" Fill="#484949" Data="M33.977998,27.684L33.977998,58.102997 41.373998,58.102997 41.373998,27.684z M14.841999,27.684L14.841999,58.102997 22.237998,58.102997 22.237998,27.684z M4.0319996,22.433001L52.183,22.433001 52.183,63.999001 4.0319996,63.999001z M15.974,0L40.195001,0 40.195001,7.7260003 56.167001,7.7260003 56.167001,16.000999 0,16.000999 0,7.7260003 15.974,7.7260003z" />
                                        <TextBlock x:Name="EditDeleteMenuText" FontSize="11" Margin="0,2,0,0" Text="Delete" Foreground="#484949" HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                            </radialmenu:SfRadialMenuItem.Header>
                        </radialmenu:SfRadialMenuItem>
                        <radialmenu:SfRadialMenuItem GroupName="ContextMenu">
                            <radialmenu:SfRadialMenuItem.Header>
                                <Border Background="Transparent" Padding="2">
                                    <StackPanel>
                                        <Path Width="17" Height="26" UseLayoutRounding="False" Stretch="Fill" RenderTransformOrigin="0.54,0.5" Opacity="1" Fill="#484949" Data="M15.981499,13.747002C18.05169,13.747002,19.73,15.426697,19.73,17.496992L19.73,29.981703 19.779463,29.852098C20.305013,28.579597 21.683165,27.672002 23.300499,27.672002 25.370689,27.672002 27.049,29.159006 27.049,30.994911L27.049,32.286549 27.098465,32.167931C27.624022,31.003298 29.002193,30.172002 30.619551,30.172002 32.689867,30.172002 34.368,31.533998 34.368,33.213693L34.368,42.065532 34.802896,37.581322C34.973396,35.815634 36.543791,34.521343 38.310686,34.693342 40.076281,34.862541 41.370577,36.435431 41.198677,38.201019L39.531998,55.4002 39.531998,56.770905C39.531998,60.763145,36.295256,64,32.301731,64L19.449066,64C16.080709,64,13.24998,61.695639,12.447613,58.577476L12.385349,58.30774 2.4728718,41.726652C1.7229061,40.474153 2.3947554,38.692953 3.9740238,37.750153 5.5534835,36.807454 7.4387784,37.057454 8.1887436,38.310053L12.233,45.075792 12.233,17.496992C12.232999,15.426697,13.91121,13.747002,15.981499,13.747002z M2.4651451,5.512001C3.0964394,5.512001,3.7279081,5.7528877,4.2096834,6.2346535L8.3473825,10.372528C9.3108721,11.336092 9.3108721,12.895937 8.3473825,13.859404 7.3840122,14.822868 5.821506,14.822868 4.8593559,13.859404L0.7216568,9.7214584C-0.2405529,8.7580528 -0.2405529,7.1982384 0.7216568,6.2346535 1.2027321,5.7528877 1.8338509,5.512001 2.4651451,5.512001z M29.787703,5.512001C30.419058,5.512001 31.050566,5.7528877 31.532339,6.2346535 32.495886,7.1982384 32.495886,8.7580528 31.532339,9.7214584L27.394133,13.859404C26.430585,14.822868 24.869307,14.822868 23.905759,13.859404 22.943411,12.895937 22.943411,11.336092 23.905759,10.372528L28.043965,6.2346535C28.525139,5.7528877,29.156345,5.512001,29.787703,5.512001z M16.182049,0C17.543967,0,18.648,1.1041412,18.647999,2.466156L18.647999,8.3178291C18.648,9.6823425 17.543967,10.784 16.182049,10.784 14.820132,10.784 13.715999,9.6823425 13.716,8.3178291L13.716,2.466156C13.715999,1.1041412,14.820132,0,16.182049,0z" />
                                        <TextBlock x:Name="EditResizeMenuText" FontSize="11" Margin="0,2,0,0" Text="Resize" Foreground="#484949" HorizontalAlignment="Right" TextWrapping="Wrap"/>
                                    </StackPanel>
                                </Border>
                            </radialmenu:SfRadialMenuItem.Header>
                        </radialmenu:SfRadialMenuItem>
                    </radialmenu:SfRadialMenu>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:AddAppointmentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AddAppointmentControl">
                    <Viewbox Height="100" Width="100">
                        <Grid x:Name="grid" Height="100" Width="130">
                            <Grid.Resources>
                                <Storyboard x:Name="storyboard2">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Add">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="Paste">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="-51.133"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-51.133"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Paste">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="-31.417"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-31.417"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Paste">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <CircleEase/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </Grid.Resources>
                            <Button x:Name="Add" ToolTipService.ToolTip="Add" VerticalAlignment="Top"  Style="{StaticResource Add}" />
                            <Button x:Name="Paste" ToolTipService.ToolTip="Paste"  Style="{StaticResource Paste}" Margin="51,17,0,0" RenderTransformOrigin="0.5,0.5"  >
                                <Button.RenderTransform>
                                    <CompositeTransform/>
                                </Button.RenderTransform>
                            </Button>
                        </Grid>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>

